SUBROUTINE POST.LABOR.SUB(LBT_REC,UPDATE.WR.OK,WR_WO_ID,WR_ID_LIST,GUIERRORS,GUISTATE)
**************************************************************************
* This is free and unencumbered software released into the public domain.
*
* Anyone is free to copy, modify, publish, use, compile, sell, or
* distribute this software, either in source code form or as a compiled
* binary, for any purpose, commercial or non-commercial, and by any
* means.
*
* In jurisdictions that recognize copyright laws, the author or authors
* of this software dedicate any and all copyright interest in the
* software to the public domain. We make this dedication for the benefit
* of the public at large and to the detriment of our heirs and
* successors. We intend this dedication to be an overt act of
* relinquishment in perpetuity of all present and future rights to this
* software under copyright law.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
* IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
* OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
* OTHER DEALINGS IN THE SOFTWARE.
*
* For more information, please refer to <https://unlicense.org>
**************************************************************************
*
* MODULE: POST.LABOR.SUB
* AUTHOR: MAB
* VERSION: 1.0.0
* CREATED: 06/00/2015
* UPDATED:
*
* MAINTENANCE RECORD:
*
* EQUATE:
*
*
* VARIABLES:
*
* ON ENTRY

* FILES:
*
*
* DESIGN DESCRIPTION:
!
** INCLUDE STANDARD VARIABLE, EQUATES
*
*
$INCLUDE NXT.INCLUDES NXT.COMMON
$INCLUDE NXT.INCLUDES NXT.EQUATES
$INCLUDE NXT.INCLUDES NXT.ERR.MSGS
$INCLUDE NXT.INCLUDES SYSTEM_FILE.EQU
$INCLUDE NXT.INCLUDES NXT.WO.STATUS.DEF
$INCLUDE NXT.INCLUDES LABOR_TICKETS.H
$INCLUDE NXT.INCLUDES WRT.H
$INCLUDE GUIBP ATGUIEQUATES
*
PROG_ID = "POST.LABOR.SUB"
*
MSG_LIST = ''
*
UPDATE.WR.OK = @TRUE
*
*
*
* GET THE SEQ STATUS CODES
*
NS =  WORK.ORDER.SEQ.STATUS.LIST<1,WO.NS.IDX,1>
QU =  WORK.ORDER.SEQ.STATUS.LIST<1,WO.Q.IDX,1>
SU =  WORK.ORDER.SEQ.STATUS.LIST<1,WO.SU.IDX,1>
SC =  WORK.ORDER.SEQ.STATUS.LIST<1,WO.SC.IDX,1>
RN =  WORK.ORDER.SEQ.STATUS.LIST<1,WO.RN.IDX,1>
CMP = WORK.ORDER.SEQ.STATUS.LIST<1,WO.C.IDX,1>
RJT =   WORK.ORDER.SEQ.STATUS.LIST<1,WO.RJ.IDX,1>
*
WO_ID = LBT_REC<LBT_WO_ID>  ;* PULL OFF WORK ORDER ID
SEQ_ID = LBT_REC<LBT_SEQ_ID>
STATUS_CODE = LBT_REC<LBT_SEQ_STAT>
STATUS_DATE = LBT_REC<LBT_DATE>
EMP_ID = LBT_REC<LBT_EMP>
*
* GET WR RECORD
*
WR_ID = WO_ID:'*':SEQ_ID  ;* ROUTING ID
CALL NXT.LOCKWAITING("WR",C.WR,WR_ID,GUIERRORS,GUISTATE)
CALL GET.RECORD("WR",C.WR,WR_ID,WR_REC,@FALSE,ERROR_STATUS,MSG_LIST,GUIERRORS,GUISTATE)
*
IF ERROR_STATUS = '' THEN
   *
   * UPDATE ROUTING RECORD WITH LABOR HOURS
   *

   IF  STATUS_CODE = SU OR STATUS_CODE = SC THEN
      *
      * SETUP HOURS, UPDATE SETUP TIMES
      IF EMP_ID = LBR_MACHINE_ID THEN  ;* MACHINE HOURS OR EMP HOURS TO POST
         WR_REC<WR_ACT_SUMACH> = WR_REC<WR_ACT_SUMACH> + LBT_REC<LBT_LAB_HRS>
      END ELSE
         WR_REC<WR_ACT_SUEMP> =  WR_REC<WR_ACT_SUEMP> + LBT_REC<LBT_LAB_HRS>
      END
   END ELSE
      *
      * UPDATE RUN TIMES
      IF EMP_ID = LBR_MACHINE_ID THEN  ;* MACHINE HOURS OR EMP HOURS TO POST
         WR_REC<WR_ACT_RNMACH> = WR_REC<WR_ACT_RNMACH> + LBT_REC<LBT_LAB_HRS>
      END ELSE
         WR_REC<WR_ACT_RNEMP> = WR_REC<WR_ACT_RNEMP> + LBT_REC<LBT_LAB_HRS>
      END
   END
   *
   * AND UPDATE QTYS COMPLETE & SCRAP
   *
   IF WR_REC<WRT_EMPMACH> THEN  ;* IF SEQ IS SET FOR EMP AND MACHINE TRACKING ONLY UPDATE QTY ON MACHINE TICKET
      IF  EMP_ID = LBR_MACHINE_ID THEN  
         WR_REC<WR_QTY_COMP> = WR_REC<WR_QTY_COMP> + LBT_REC<LBT_QTY_CMP>
      END
   END ELSE
      WR_REC<WR_QTY_COMP> = WR_REC<WR_QTY_COMP> + LBT_REC<LBT_QTY_CMP>
   END
   *
   * ALWAYS INCLUDE SCRAP
   *
   WR_REC<WR_SCRAP> = WR_REC<WR_SCRAP> + LBT_REC<LBT_QTY_SCRP>
   *
   ** UPDATE STATUS CODES
   *    NOTE WE MAY WANT TO CONSIDER THE SAME EMP AND MACHINE TRACKING LOGIC HERE (ONLY UPDATE STATUS ON MACHINE TICKET)
   *    FOR NOW WE ALWAYS UPDATE STATUS
   CALL WRT.SET.STATUS(WO_ID,WR_ID,WR_REC,WR_WO_ID,WR_ID_LIST,STATUS_CODE,STATUS_DATE,UPDATE.WR.OK,GUIERRORS,GUISTATE)
   IF UPDATE.WR.OK<1> THEN  ;* DID THE WR RECORD GET UPDATED?
      NULL
   END ELSE
      * NO REPORT ERROR
      LOG.OPTS = "DISPLAY"
      ERROR_NBR = ERR_SYS
      ERROR_MSG =  UPDATE.WR.OK<2>
      CALL LOG.ERROR(LOG.OPTS,PROG_ID, ERROR_NBR, ERROR_MSG, GUIERRORS, GUISTATE)
      RELEASE C.FILE.VAR(C.WR), WR_ID
   END
END ELSE
   * COULD NOT FIND WR RECORD, THIS IS NOT GOOD
   LOG.OPTS = "DISPLAY"
   ERROR_NBR = ERR_SYS
   ERROR_MSG =  "Passed WR_Id Not Found in WR File: ":WR_ID
   CALL LOG.ERROR(LOG.OPTS,PROG_ID, ERROR_NBR, ERROR_MSG, GUIERRORS, GUISTATE)
   RELEASE C.FILE.VAR(C.WR), WR_ID
END
*
RETURN
************************************************************
*
**-->BEGIN ERROR HANDLER<--*
GUI.ERROR: *
GUI.DLG.EXIT = 1
LOG.OPTS = "DISPLAY"
ERROR_NBR = ERR_GUI
ERROR_MSG =  ERR_MESSAGE(ERR_GUI)
CALL LOG.ERROR(LOG.OPTS,PROG_ID, ERROR_NBR, ERROR_MSG, GUIERRORS, GUISTATE)
RETURN
*-->END ERROR HANDLER<--*
*
*
************************************************************
END
