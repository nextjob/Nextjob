SUBROUTINE PO.SEARCH(SEARCH_ID,GUIERRORS,GUISTATE)
!
**************************************************************************
* This is free and unencumbered software released into the public domain.
*
* Anyone is free to copy, modify, publish, use, compile, sell, or
* distribute this software, either in source code form or as a compiled
* binary, for any purpose, commercial or non-commercial, and by any
* means.
*
* In jurisdictions that recognize copyright laws, the author or authors
* of this software dedicate any and all copyright interest in the
* software to the public domain. We make this dedication for the benefit
* of the public at large and to the detriment of our heirs and
* successors. We intend this dedication to be an overt act of
* relinquishment in perpetuity of all present and future rights to this
* software under copyright law.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
* IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
* OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
* OTHER DEALINGS IN THE SOFTWARE.
*
* For more information, please refer to <https://unlicense.org>
**************************************************************************
*
* MODULE: ORDER.SEARCH
* AUTHOR: MAB
* VERSION: 1.0.0
* CREATED: 00/00/2014
* UPDATED:
*
* MAINTENANCE RECORD:
*
* EQUATE:
*
*
* VARIABLES:
*
* FILES:
*
*
* DESIGN DESCRIPTION:
* PURCHASE ORDER SEARCH FUNCTION
!
** INCLUDE STANDARD VARIABLE, EQUATES
*
$INCLUDE NXT.INCLUDES NXT.COMMON
$INCLUDE NXT.INCLUDES NXT.EQUATES
$INCLUDE NXT.INCLUDES NXT.ERR.MSGS
*
$INCLUDE GUIBP ATGUIEQUATES
*
*
GUIERRORS = ''
* Open the GUI project file
OPEN 'NXT.FORMS' TO GUI.PROJECT.FILE ELSE
  CALL ATGUIERROR(3,'PO.SEARCH','',0,GRFATAL,"'NXT.FORMS' is not a file name.",GUIERRORS)
  RETURN
END
* Read the GUI template into TEMPLATE
READ TEMPLATE FROM GUI.PROJECT.FILE,'PO.SEARCH' ELSE
  CALL ATGUIERROR(3,'PO.SEARCH','',0,GRFATAL,"'PO.SEARCH' is not on file.",GUIERRORS)
  RETURN
END
* Add your equates and code to open files here...
*
*
************************************************************
*
*
*-->BEGIN GUI HEADER<--*
* If GUISTATE is not NULL, assume GUI has been initialized
IF GUISTATE EQ '' THEN
  CALL ATGUIINIT2(TEMPLATE<2,2>,'',GUIERRORS,GUISTATE)
  IF GUIERRORS<1> >= 3 THEN RETURN
END
* Load the dialog project template
CALL ATGUIRUNMACRO(TEMPLATE,'',GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= 3 THEN RETURN
*-->END GUI HEADER<--*
*
*
************************************************************
*
*
*-->BEGIN GUI STARTUP<--*
ACCEPT = 0 ;* Assume dialog cancelled (update in your OK button Click handler)
* Add your code to load initial values here...
CALL ATGUISHOW('PO.SEARCH','ORS','','',GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= 2 THEN RETURN
*-->END GUI STARTUP<--*
*
************************************************************
* INITIALIZE VARIABLES
*
GOSUB RESET.FILTERS
*
************************************************************
*
*
*-->BEGIN EVENT LOOP<--*
GUI.DLG.EXIT = 0
LOOP
  CALL ATGUIWAITEVENT(GUIAPP,GUIFRM,GUICTL,GUIEVT,GUIARGS,GUIERRORS,GUISTATE)
  IF GUIERRORS<1> >= 2 THEN RETURN
  IF GUIEVT EQ GEQUIT THEN
    GUI.DLG.EXIT = 1
  END ELSE
    GUIAPP=OCONV(GUIAPP,'MCU')
    GUIFRM=OCONV(GUIFRM,'MCU')
    GUICTL=OCONV(GUICTL,'MCU')
    GOSUB GUI.DECODE.EVENT
  END
UNTIL GUI.DLG.EXIT DO REPEAT
* Eat final Quit event
IF GUIEVT <> GEQUIT THEN
  GUI.APP.LIST = ''
  CALL ATGUIGETPROP('','','',GPSTATUS,2,0,GUI.APP.LIST,'',GUISTATE)
  IF GUI.APP.LIST EQ '' THEN
* Quit event fired after last GUI object is deleted - discard it
    CALL ATGUIWAITEVENT('','','','','','',GUISTATE)
* We could call ATGUISHUTDOWN here if we wanted, but there's no
* harm just leaving the GUI environment initialized, in case we
* want to use it again...
  END
END
*-->END EVENT LOOP<--*
*
*
************************************************************
*
*
*-->BEGIN GUI TRAILER<--*
RETURN
*
GUI.DIALOG.RETURN: *
* This subroutine is called just before the GUI Dialog app
* is deleted. Check the state of the ACCEPT variable, and
* retrieve values from GUI controls and assign to appropriate
* arguments for return to calling program here...
IF ACCEPT THEN
* Add your code here...
END ELSE
* Add your code here...
END
RETURN
*-->END GUI TRAILER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT DECODER<--*
GUI.DECODE.EVENT: *
IF NUM(GUIEVT) THEN
 BEGIN CASE
 CASE GUIAPP='PO.SEARCH'
 BEGIN CASE
  CASE GUIFRM='ORS'
  BEGIN CASE
   CASE GUICTL=''
   BEGIN CASE
    CASE GUIEVT=GECLOSE
    GOSUB GUI.PO.SEARCH.ORS.CLOSE;GUIEVT=0
    END CASE
   CASE GUICTL='BTNCANCEL'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.PO.SEARCH.ORS.BTNCANCEL.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNRESET'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.PO.SEARCH.ORS.BTNRESET.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNSEARCHCUST'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.PO.SEARCH.ORS.BTNSEARCHCUST.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNSEARCHDESC'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.PO.SEARCH.ORS.BTNSEARCHDESC.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNSEARCHDRAW'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.PO.SEARCH.ORS.BTNSEARCHDRAW.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNSEARCHORDER'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.PO.SEARCH.ORS.BTNSEARCHORDER.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNSEARCHPN'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.PO.SEARCH.ORS.BTNSEARCHPN.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNSEARCHPO'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.PO.SEARCH.ORS.BTNSEARCHPO.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CBCUST'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.PO.SEARCH.ORS.CBCUST.CLICK;GUIEVT=0
    CASE GUIEVT=GEVALIDATE
    GOSUB GUI.PO.SEARCH.ORS.CBCUST.VALIDATE;GUIEVT=0
    END CASE
   CASE GUICTL='CBDESC'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.PO.SEARCH.ORS.CBDESC.CLICK;GUIEVT=0
    CASE GUIEVT=GEVALIDATE
    GOSUB GUI.PO.SEARCH.ORS.CBDESC.VALIDATE;GUIEVT=0
    END CASE
   CASE GUICTL='CBPN'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.PO.SEARCH.ORS.CBPN.CLICK;GUIEVT=0
    CASE GUIEVT=GEVALIDATE
    GOSUB GUI.PO.SEARCH.ORS.CBPN.VALIDATE;GUIEVT=0
    END CASE
   CASE GUICTL='CBPONUMBER'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.PO.SEARCH.ORS.CBPONUMBER.CLICK;GUIEVT=0
    CASE GUIEVT=GEVALIDATE
    GOSUB GUI.PO.SEARCH.ORS.CBPONUMBER.VALIDATE;GUIEVT=0
    END CASE
   CASE GUICTL='CBSALEORDER'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.PO.SEARCH.ORS.CBSALEORDER.CLICK;GUIEVT=0
    CASE GUIEVT=GEVALIDATE
    GOSUB GUI.PO.SEARCH.ORS.CBSALEORDER.VALIDATE;GUIEVT=0
    END CASE
   CASE GUICTL='CBWORKORDER'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.PO.SEARCH.ORS.CBWORKORDER.CLICK;GUIEVT=0
    CASE GUIEVT=GEVALIDATE
    GOSUB GUI.PO.SEARCH.ORS.CBWORKORDER.VALIDATE;GUIEVT=0
    END CASE
   CASE GUICTL='LBFILTER'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.PO.SEARCH.ORS.LBFILTER.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='LBORDER'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.PO.SEARCH.ORS.LBORDER.CLICK;GUIEVT=0
    END CASE
   END CASE
  END CASE
 END CASE
 IF GUIEVT THEN
  * Unhandled event - may be dynamic
  GOSUB GUI.DYNAMIC.EVENTS
 END
END ELSE
 GOSUB GUI.CUSTOM.EVENTS
END
RETURN
*-->END EVENT DECODER<--*
*
*
************************************************************
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.BTNRESET.CLICK: *
GOSUB RESET.FILTERS
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.BTNSEARCHPO.CLICK: *
SRCH.CONTROL = "CBPONUMBER"
SRCH.STRNG  = SRCHCMPO
SRCH.FLD    = "@ID"
GOSUB GENERIC.SEARCH.HANDLER
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.CBCUST.CLICK: *
SRCH.CONTROL = "CBCUST"
CLICK.STRNG  = GUIARGS<1>
GOSUB GENERIC.LIST.CLICK
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.CBCUST.VALIDATE: *
SRCHCMORD = ''            ;* SEARCH TXT - CUSTOMER (ORDER)
SRCHCMPO  = ''            ;* SEARCH TXT - CUSTOMER (PO)
SRCHDESC = ''             ;* SEARCH TXT - DESC
SRCHWO = ''             ;* SEARCH TXT - DRAWING
SRCHPN   = ''             ;* SEARCH TXT - PART NUMBER
SRCHCM   = GUIARGS<2>     ;* SEARCH TXT - CUSTOMER NAME
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.CBDESC.CLICK: *
SRCH.CONTROL = "CBDESC"
CLICK.STRNG  = GUIARGS<1>
GOSUB GENERIC.LIST.CLICK
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.CBDESC.VALIDATE: *
SRCHCMORD = ''            ;* SEARCH TXT - CUSTOMER (ORDER)
SRCHCMPO  = ''            ;* SEARCH TXT - CUSTOMER (PO)
SRCHDESC = GUIARGS<2>     ;* SEARCH TXT - DESC
SRCHWO = ''             ;* SEARCH TXT - DRAWING
SRCHPN   = ''             ;* SEARCH TXT - PART NUMBER
SRCHCM   = ''             ;* SEARCH TXT - CUSTOMER NAME
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.CBPN.CLICK: *
SRCH.CONTROL = "CBPN"
CLICK.STRNG  = GUIARGS<1>
GOSUB GENERIC.LIST.CLICK
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.CBPN.VALIDATE: *
SRCHCMORD = ''            ;* SEARCH TXT - CUSTOMER (ORDER)
SRCHCMPO  = ''            ;* SEARCH TXT - CUSTOMER (PO)
SRCHDESC = ''             ;* SEARCH TXT - DESC
SRCHWO = ''             ;* SEARCH TXT - DRAWING
SRCHPN   = GUIARGS<2>     ;* SEARCH TXT - PART NUMBER
SRCHCM   = ''             ;* SEARCH TXT - CUSTOMER NAME
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.CBPONUMBER.CLICK: *
SRCH.CONTROL = "CBPONUMBER"
CLICK.STRNG  = GUIARGS<1>
GOSUB GENERIC.LIST.CLICK
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.CBPONUMBER.VALIDATE: *
SRCHCMORD = ''            ;* SEARCH TXT - CUSTOMER (ORDER)
SRCHCMPO  = GUIARGS<2>    ;* SEARCH TXT - CUSTOMER (PO)
SRCHDESC = ''             ;* SEARCH TXT - DESC
SRCHWO = ''             ;* SEARCH TXT - DRAWING
SRCHPN   = ''             ;* SEARCH TXT - PART NUMBER
SRCHCM   = ''             ;* SEARCH TXT - CUSTOMER NAME
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.CBSALEORDER.CLICK: *
SRCH.CONTROL = "CBSALEORDER"
CLICK.STRNG  = GUIARGS<1>
GOSUB GENERIC.LIST.CLICK
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.CBSALEORDER.VALIDATE: *
SRCHCMORD = GUIARGS<2>    ;* SEARCH TXT - CUSTOMER (ORDER)
SRCHCMPO  = ''            ;* SEARCH TXT - CUSTOMER (PO)
SRCHDESC = ''             ;* SEARCH TXT - DESC
SRCHWO = ''             ;* SEARCH TXT - WORK ORDER
SRCHPN   = ''             ;* SEARCH TXT - PART NUMBER
SRCHCM   = ''             ;* SEARCH TXT - CUSTOMER NAME
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.CBWORKORDER.CLICK: *
SRCH.CONTROL = "CBWORKORDER"
CLICK.STRNG  = GUIARGS<1>
GOSUB GENERIC.LIST.CLICK
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.CBWORKORDER.VALIDATE: *
SRCHCMORD = ''            ;* SEARCH TXT - CUSTOMER (ORDER)
SRCHCMPO  = ''            ;* SEARCH TXT - CUSTOMER (PO)
SRCHDESC = ''             ;* SEARCH TXT - DESC
SRCHWO = GUIARGS<2>     ;* SEARCH TXT - WORK ORDER
SRCHPN   = ''             ;* SEARCH TXT - PART NUMBER
SRCHCM   = ''             ;* SEARCH TXT - CUSTOMER NAME
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN CLOSE EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.CLOSE: *
*
* Default form close event handler
CALL ATGUIHIDE(GUIAPP,GUIFRM,'','',GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= 2 THEN GOTO GUI.ERROR
CALL ATGUIGETPROP(GUIAPP,'','',GPSTATUS,0,0,NUM.FORMS,GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= 2 THEN GOTO GUI.ERROR
IF NUM.FORMS = 0 THEN
  GOSUB GUI.DIALOG.RETURN
  CALL ATGUIDELETE(GUIAPP,'','',GUIERRORS,GUISTATE)
  IF GUIERRORS<1> >= 3 THEN GOTO GUI.ERROR
  GUI.DLG.EXIT = 1
END
RETURN
*-->END CLOSE EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.BTNCANCEL.CLICK: *
GOSUB GUI.PO.SEARCH.ORS.CLOSE; GUIEVT=0
RETURN
*-->END EVENT HANDLER<--*
*
*
*************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.BTNSEARCHCUST.CLICK: *
IF SRCHCM # '' THEN
  SRCH.CONTROL = "CBCUST"
  SRCH.STRNG  = SRCHCM
  SRCH.FLD    = "VEN_NAME"
  GOSUB GENERIC.SEARCH.HANDLER
END
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.BTNSEARCHDESC.CLICK: *
IF SRCHDESC # '' THEN
  SRCH.CONTROL = "CBDESC"
  SRCH.STRNG  = SRCHDESC
  SRCH.FLD    = "PC_PART_DESC"
  GOSUB GENERIC.SEARCH.HANDLER
END
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.BTNSEARCHDRAW.CLICK: *
IF SRCHWO # '' THEN
  SRCH.CONTROL = "CBWORKORDER"
  SRCH.STRNG  = SRCHWO
  SRCH.FLD    = "PC_WO_NBR"
  GOSUB GENERIC.SEARCH.HANDLER
END
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.BTNSEARCHORDER.CLICK: *
IF SRCHCMORD # '' THEN
  SRCH.CONTROL = "CBSALEORDER"
  SRCH.STRNG  = SRCHCMORD
  SRCH.FLD    = "VEN_NAME"
  GOSUB GENERIC.SEARCH.HANDLER
END
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.BTNSEARCHPN.CLICK: *
IF SRCHPN # '' THEN
  SRCH.CONTROL = "CBPN"
  SRCH.STRNG  = SRCHPN
  SRCH.FLD    = "PC_PART_NBR"
  GOSUB GENERIC.SEARCH.HANDLER
END
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.LBFILTER.CLICK: *
FILTER.STATUS = GUIARGS<1>    ;* SET TO filter type (1=NONE,2=OPEN,3=CLOSED HARD CODED INTO FORM)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.PO.SEARCH.ORS.LBORDER.CLICK: *
FILTER.ORDERING = GUIARGS<1>    ;* SET TO selected ordering (1=New to Old,2=Old to New HARD CODED INTO FORM)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN DYNAMIC EVENTS<--*
GUI.DYNAMIC.EVENTS: *
* Add any dynamic event handling code here. The GUIEVT, GUIAPP, GUIFRM,
* GUICTL and GUIARGS variables are valid and availble for your use.
RETURN
*-->END DYNAMIC EVENTS<--*
*
*
************************************************************
*
**-->BEGIN CUSTOM EVENTS<--*
GUI.CUSTOM.EVENTS: *
* Add any custom event handling code here. The GUIEVT, GUIAPP, GUIFRM,
* GUICTL and GUIARGS variables are valid and availble for your use.
RETURN
*-->END CUSTOM EVENTS<--*
*
*
************************************************************
************************************************************
* $PAGE$
************************************************************
GENERIC.SEARCH.HANDLER: *
*
* USER PASSES: SRCH.CONTROL- CONTROL WE ARE SEARCHING
*            * SRCH.STRNG  - STRING TO SEARCH FOR
*            * SRCH.FLD    - DICTIONARY FIELD TO SEARCH
* ROUTINE RETURNS: ORDER_CHILD ID
*
IF SRCH.STRNG # "" THEN
  LAST.LIST = 1      ;* WANT FIRST PAGE OF IDS
  ORDER.LIST = ''
  ORDER.ID.LIST = ''
  EMSG = ''
  USORT = '@ID'
*
* SET SORT ORDER
* FILTER.ORDERING = 1  ;* FILTER ORDERING ( DFLT = Newest to Oldest / Old to New)
  IF SRCH.CONTROL = "CBPONUMBER" OR SRCH.CONTROL = "CBSALEORDER" THEN
    BEGIN CASE   ;* SEARCHING ORDER_PARENT FILE
      CASE FILTER.ORDERING = 1
        USORT = "PO_DATE"
        USORT<2> = "BY-DSND"
      CASE FILTER.ORDERING = 2
        USORT = "PO_DATE"
    END CASE
  END ELSE     ;* SEARCHING ORDER_CHILD FILE
    BEGIN CASE
      CASE FILTER.ORDERING = 1
        USORT = "ORDER_DATE"
        USORT<2> = "BY-DSND"
      CASE FILTER.ORDERING = 2
        USORT = "ORDER_DATE"
    END CASE
  END
*
* SET FILTER
* SET TO filter type (1=NONE,2=OPEN,3=CLOSED HARD CODED INTO FORM)
*
  BEGIN CASE
    CASE FILTER.STATUS = 1
      NULL
    CASE FILTER.STATUS = 2
      IF SRCH.CONTROL = "CBPONUMBER" OR SRCH.CONTROL = "CBSALEORDER" THEN
        USORT<3> = 'WITH PO_STATUS = "O"'
      END ELSE     ;* SEARCHING ORDER_CHILD FILE
*        USORT<3> = 'WITH OC_ITEM_STAT = "I"'
        USORT<3> = 'WITH PC_CLOSE # "C" AND WITH PC_ITEM_STAT # "C"'
      END
*
    CASE FILTER.STATUS = 3
      IF SRCH.CONTROL = "CBPONUMBER" OR SRCH.CONTROL = "CBSALEORDER" THEN
        USORT<3> = 'WITH PO_STATUS = "C"'
      END ELSE     ;* SEARCHING ORDER_CHILD FILE
        USORT<3> = 'WITH PC_ITEM_STAT = "C"'
      END
*

  END CASE
*
*
  *IF FILTER.TYPE # '' THEN     ;* ALSO FILTER BY ORDER TYPE?
    *IF SRCH.CONTROL = "CBPONUMBER" OR SRCH.CONTROL = "CBSALEORDER" THEN
      *IF USORT<3> # "" THEN USORT<3> := " AND "
      *USORT<3> := ' WITH OP_ORDER_TYPE = "':FILTER.TYPE:'"'
    *END ELSE     ;* SEARCHING ORDER_CHILD FILE
      *IF USORT<3> # "" THEN USORT<3> := " AND "
      *USORT<3> := ' WITH ORDER_TYPE = "':FILTER.TYPE:'"'
    *END
  *END
*
*
  BEGIN CASE
    CASE SRCH.CONTROL = "CBSALEORDER"
      CALL GUI.SEARCH2("PO_PARENT",SRCH.FLD,SRCH.STRNG,USORT,"VEN_NAME @ID PO_DATE ",200,LAST.LIST,ORDER.LIST,ORDER.ID.LIST,ORDER.CNT,EMSG)
*
    CASE SRCH.CONTROL = "CBPONUMBER"
      CALL GUI.SEARCH2("PO_PARENT",SRCH.FLD,SRCH.STRNG,USORT,"VEN_NAME OP_PO_NBR OP_DATE ",200,LAST.LIST,ORDER.LIST,ORDER.ID.LIST,ORDER.CNT,EMSG)
*
    CASE 1
      CALL GUI.SEARCH2("PO_CHILD",SRCH.FLD,SRCH.STRNG,USORT,"VEN_NAME ORDER PC_PART_NBR ORDER_DATE PC_ITEM_STAT",200,LAST.LIST,ORDER.LIST,ORDER.ID.LIST,ORDER.CNT,EMSG)
  END CASE
*
  LAST.SEARCH = SRCH.STRNG
  IF EMSG<1> = 'No Items Found' THEN  ;* NO ITEMS FOUND THEN
    CALL ATGUIMSGBOX("No Items Match The Search","PO.SEARCH",0,0,"",DMMY,GUIERRORS,GUISTATE)
  END ELSE
    CTRLIDS = ''
    PROPS   = ''
    VALUES  = ''
*
    CTRLIDS<1> = SRCH.CONTROL
    PROPS<1>   = GPITEMS
    VALUES<1>  = ORDER.LIST
*
    CTRLIDS<2> = SRCH.CONTROL
    PROPS<2>   = GPVALUE
    VALUES<2>  = "Select from list"

    CALL ATGUISETPROPS(GUIAPP,GUIFRM,CTRLIDS,PROPS,VALUES,GUIERRORS,GUISTATE)
    IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
    CALL ATGUIACTIVATE(GUIAPP,GUIFRM,SRCH.CONTROL,GUIERRORS,GUISTATE)
    IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
  END
END
GSH.999: *
RETURN
************************************************************
* $PAGE$
************************************************************
GENERIC.LIST.CLICK: *
*
* USER PASSES: SRCH.CONTROL- CONTROL WE ARE SEARCHING
*            * CLICK.STRNG  - STRING RETURNED BY LIST CLICK
*            * SRCH.FLD    - DICTIONARY FIELD TO SEARCH
* ROUTINE RETURNS: GAGE.ID
BEGIN CASE
  CASE CLICK.STRNG = ''
    NULL
*
  CASE CLICK.STRNG = "$MORE$" OR CLICK.STRNG = "$TOP$"     ;* USER NEED TO SEE MORE OF SEARCH LIST
*        LAST.LIST = NEXT SELECTED ITEM INDEX TO DISPLAY FROM PRIOR GUI_SEARCH CALL
    ORDER.LIST = ''
    ORDER.ID.LIST = ''
    EMSG = ''

    IF CLICK.STRNG = "$TOP$" THEN
      LAST.LIST = 1
    END

    BEGIN CASE
      CASE SRCH.CONTROL = "CBSALEORDER"
        CALL GUI.SEARCH2("PO_PARENT",SRCH.FLD,LAST.SEARCH,USORT,"VEN_NAME @ID PO_DATE ",200,LAST.LIST,ORDER.LIST,ORDER.ID.LIST,ORDER.CNT,EMSG)
*
      CASE SRCH.CONTROL = "CBPONUMBER"
        CALL GUI.SEARCH2("PO_PARENT",SRCH.FLD,LAST.SEARCH,USORT,"VEN_NAME @ID PO_DATE ",200,LAST.LIST,ORDER.LIST,ORDER.ID.LIST,ORDER.CNT,EMSG)
*
      CASE 1
        CALL GUI.SEARCH2("PO_CHILD",SRCH.FLD,LAST.SEARCH,USORT,"VEN_NAME ORDER PC_PART_NBR ORDER_DATE PC_ITEM_STAT",200,LAST.LIST,ORDER.LIST,ORDER.ID.LIST,ORDER.CNT,EMSG)
    END CASE


*    IF SRCH.CONTROL = "CBSALEORDER" THEN
*      CALL GUI.SEARCH2("ORDER_PARENT",SRCH.FLD,LAST.SEARCH,"@ID","CUST_NAME OP_PO_NBR OP_DATE ",200,LAST.LIST,ORDER.LIST,ORDER.ID.LIST,ORDER.CNT,EMSG)
*    END ELSE
*      CALL GUI.SEARCH2("ORDER_CHILD",SRCH.FLD,LAST.SEARCH,"@ID","CUST_NAME ORDER_PO OC_PART_NBR ORDER_DATE OC_ITEM_STAT",200,LAST.LIST,ORDER.LIST,ORDER.ID.LIST,ORDER.CNT,EMSG)
*    END
    IF EMSG<1> = 'No Items Found' THEN  ;* NO ITEMS FOUND
      CALL ATGUIMSGBOX("No Items Match The Search","PO.SEARCH",0,0,"",DMMY,GUIERRORS,GUISTATE)
    END ELSE
      CTRLIDS = ''
      PROPS   = ''
      VALUES  = ''
*
      CTRLIDS<1> = SRCH.CONTROL
      PROPS<1>   = GPITEMS
      VALUES<1>  = ORDER.LIST
*
      CTRLIDS<2> = SRCH.CONTROL
      PROPS<2>   = GPVALUE
      VALUES<2>  = "Select from list"

      CALL ATGUISETPROPS(GUIAPP,GUIFRM,CTRLIDS,PROPS,VALUES,GUIERRORS,GUISTATE)
      IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
*            CALL ATGUIACTIVATE(GUIAPP,GUIFRM,SRCH.CONTROL,GUIERRORS,GUISTATE)
      IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
    END
  CASE 1
    IF SRCH.CONTROL = "CBSALEORDER" OR SRCH.CONTROL = "CBPONUMBER" THEN ;* ORDER SEARCH CHECK FOR VALID ORDER_PARENT ID
      PO_REC = ''
      ORDER.TO.TEST = CLICK.STRNG
      MSG_LIST = ''
      CALL GET.RECORD("PO_PARENT",C.PO_PARENT,ORDER.TO.TEST,PO_REC,@FALSE,ERROR_STATUS,MSG_LIST,GUIERRORS,GUISTATE)
      IF PO_REC # '' THEN
* GOOD ID
        SEARCH_ID = ORDER.TO.TEST
        GOSUB GUI.PO.SEARCH.ORS.CLOSE; GUIEVT=0
      END ELSE
* BAD REPORT
        CALL ATGUIMSGBOX("No Items Match The Search","PO.SEARCH",0,0,"",DMMY,GUIERRORS,GUISTATE)
      END
    END ELSE  ;* ITEM DETAIL SEARCH CHECK FOR VALID ORDER_CHILD ID
      PC_REC = ''
      ORDER.TO.TEST = CLICK.STRNG
      MSG_LIST = ''
      CALL GET.RECORD("PO_CHILD",C.PO_CHILD,ORDER.TO.TEST,PC_REC,@FALSE,ERROR_STATUS,MSG_LIST,GUIERRORS,GUISTATE)
      IF PC_REC # '' THEN
* GOOD ID
        SEARCH_ID = ORDER.TO.TEST
        GOSUB GUI.PO.SEARCH.ORS.CLOSE; GUIEVT=0
      END ELSE
* BAD REPORT
        CALL ATGUIMSGBOX("No Items Match The Search","PO.SEARCH",0,0,"",DMMY,GUIERRORS,GUISTATE)
      END
    END
END CASE
*

GLC.999: *
RETURN
*****************************************************************************
RESET.FILTERS:
SRCHDESC = ''     ;* SEARCH TXT - DESC
SRCHWO = ''     ;* SEARCH TXT - WORK ORDER
SRCHPN   = ''     ;* SEARCH TXT - PART NUMBER
SRCHCM   = ''     ;* SEARCH TXT - VENDOR (ITEM DETAIL)
SRCHCMORD = ''    ;* SEARCH TXT - VENDOR (ORDER)
SRCHCMPO  = ''    ;* SEARCH TXT - VENDOR (PO)
SEARCH_ID    = ''     ;* INIT RETURNED ID TO NULL (NOT FOUND)
FILTER.STATUS = 1     ;* FILTER ORDER STATUS (DEFAULT = NONE / OPEN / CLOSED)
FILTER.STATUS.LIST = 'NONE':@AM:'OPEN':@AM:'CLOSED'
*
FILTER.ORDERING = 1  ;* FILTER ORDERING ( DFLT = Newest to Oldest / Old to New)
*
FILTER.TYPE = ''     ;* FILTER FOR ORDER TYPE, INIT TO NONE
*
CTRLIDS = ""
PROPS   = ""
VALUES  = ""
*
CTRLIDS<1> = "LBFILTER"
PROPS<1>   = GPVALUE
VALUES<1>  = 1
*
CTRLIDS<2> = "LBORDER"
PROPS<2>   = GPVALUE
VALUES<2>  = 1
*
CALL ATGUISETPROPS('PO.SEARCH','ORS',CTRLIDS,PROPS,VALUES,GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
*
RETURN
****************************************************************************
**-->BEGIN ERROR HANDLER<--*
GUI.ERROR: *
GUI.DLG.EXIT = 1
LOG.OPTS = "DISPLAY"
ERROR_NBR = ERR_GUI
ERROR_MSG =  ERR_MESSAGE(ERR_GUI)
CALL LOG.ERROR(LOG.OPTS,"PO.SEARCH", ERROR_NBR, ERROR_MSG, GUIERRORS, GUISTATE)
RETURN
*-->END ERROR HANDLER<--*
END
