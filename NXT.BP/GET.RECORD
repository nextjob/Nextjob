SUBROUTINE GET.RECORD(FILE_NAME,FILE_VAR_EQU,GET_ID,GET_REC,LOCK_REC,ERROR_STATUS,MSG_LIST,GUIERRORS,GUISTATE) 
!
**************************************************************************
* This is free and unencumbered software released into the public domain.
*
* Anyone is free to copy, modify, publish, use, compile, sell, or
* distribute this software, either in source code form or as a compiled
* binary, for any purpose, commercial or non-commercial, and by any
* means.
*
* In jurisdictions that recognize copyright laws, the author or authors
* of this software dedicate any and all copyright interest in the
* software to the public domain. We make this dedication for the benefit
* of the public at large and to the detriment of our heirs and
* successors. We intend this dedication to be an overt act of
* relinquishment in perpetuity of all present and future rights to this
* software under copyright law.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
* IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
* OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
* OTHER DEALINGS IN THE SOFTWARE.
*
* For more information, please refer to <https://unlicense.org>
**************************************************************************
*
* MODULE: GET.CUSTOMER
* AUTHOR: MAB
* VERSION: 1.0.0
* CREATED: 00/00/2007
* UPDATED: 
*
* MAINTENANCE RECORD:
*
* EQUATE:
*
*
* VARIABLES:
* FILE_NAME
* FILE_VAR_EQU
* GET_ID -  ID TO READ
* GET_REC - READ RECORD OR NULL IF RECORD NOT FOUND
* LOCK_REC - SET LOCK PROIR TO READ (T/F)
* ERROR_STATUS - SET TO ERR-NOF IF GET_ID NOT FOUND 
* MSG_LIST <1> - UNABLE TO LOCK MESSAGE
* MSG_LIST <2> - USER OK'D LOCK SKIP
*
* FILES:
*
*
* DESIGN DESCRIPTION:
* ROUTINE IS CALLED TO ACCESS RECORD
* IF LOCK_REC THEN LOCK  RECORD GET_ID
* IF NOT LOCKSET THEN ERROR_STATUS = ERR_BUSY  
* READ REC ELSE
*   GET_REC = ''
*   IF NULL ERROR_STATUS THEN ERROR_STATUS = ERR_NOF
*
!
** INCLUDE STANDARD VARIABLE, EQUATES
*
$INCLUDE NXT.INCLUDES NXT.COMMON
$INCLUDE NXT.INCLUDES NXT.EQUATES
$INCLUDE NXT.INCLUDES NXT.ERR.MSGS
*
$INCLUDE GUIBP ATGUIEQUATES
*
ERROR_STATUS = ''
*
IF MSG_LIST = '' THEN
   MSG_LIST<1> = FILE_NAME:", ":GET_ID:" Unable to Update Lock,":@SVM:"Click OK to Proceed Without Locking Record,":@SVM:"Cancel to Reattempt Lock"
   MSG_LIST<2> = FILE_NAME:", ":GET_ID:" Record not Locked,":@SVM:"Updates Not Allowed!"
END
*
IF LOCK_REC THEN
   CALL NXT.RECORDLOCKU(FILE_NAME,FILE_VAR_EQU,GET_ID,MSG_LIST,FILE_LOCKED,GUIERRORS,GUISTATE)
   IF NOT(FILE_LOCKED) THEN
      ERROR_STATUS = ERR_BUSY  ;* COULD NOT LOCK, VIEW MODE ONLY
   END
END
READ GET_REC FROM C.FILE.VAR(FILE_VAR_EQU), GET_ID ELSE
   GET_REC = ''
   IF ERROR_STATUS = '' THEN ERROR_STATUS = ERR_NOF
END
RETURN       
END      
