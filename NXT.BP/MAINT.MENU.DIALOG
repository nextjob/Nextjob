SUBROUTINE MAINT.MENU.DIALOG(GUIERRORS,GUISTATE)
!
**************************************************************************
* This is free and unencumbered software released into the public domain.
*
* Anyone is free to copy, modify, publish, use, compile, sell, or
* distribute this software, either in source code form or as a compiled
* binary, for any purpose, commercial or non-commercial, and by any
* means.
*
* In jurisdictions that recognize copyright laws, the author or authors
* of this software dedicate any and all copyright interest in the
* software to the public domain. We make this dedication for the benefit
* of the public at large and to the detriment of our heirs and
* successors. We intend this dedication to be an overt act of
* relinquishment in perpetuity of all present and future rights to this
* software under copyright law.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
* IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
* OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
* OTHER DEALINGS IN THE SOFTWARE.
*
* For more information, please refer to <https://unlicense.org>
**************************************************************************
*
* MODULE: MAINT.MENU.DIALOG
* AUTHOR: MAB
* VERSION: 1.0.0
* CREATED: 00/00/2008
* UPDATED:
*
* MAINTENANCE RECORD:
*
* EQUATE:
*
*
* VARIABLES:
*
* FILES:
*
*
* DESIGN DESCRIPTION:
* MASTER DIALOG TO ALL SYSTEM MAINT DIALOGS
*
!
** INCLUDE STANDARD VARIABLE, EQUATES
*
$INCLUDE NXT.INCLUDES NXT.COMMON
$INCLUDE NXT.INCLUDES NXT.EQUATES
$INCLUDE NXT.INCLUDES NXT.ERR.MSGS
$INCLUDE NXT.INCLUDES SYSTEM_FILE.EQU
*
$INCLUDE GUIBP ATGUIEQUATES
*
PROG_ID   = "MAINT.MENU.DIALOG"
GUIERRORS = ''
GUIAPP = "MAINT"  ;* SEED GUIAPP AND GUIFRM PRIOR TO ACTUAL EVENT WAIT LOOP
GUIFRM = "MAINT"
USER_NAME = @LOGNAME
*
*
* admin frame items only enabled for administrator user id
*
IF SYSTEM(1050) THEN
  ADMIN.ENABLE = @TRUE
END ELSE
  ADMIN.ENABLE = @FALSE
END
*
GUIERRORS = ''
* Open the GUI project file
OPEN 'NXT.FORMS' TO GUI.PROJECT.FILE ELSE
  CALL ATGUIERROR(3,'MAINT','',0,GRFATAL,"'NXT.FORMS' is not a file name.",GUIERRORS)
  RETURN
END
* Read the GUI template into TEMPLATE
READ TEMPLATE FROM GUI.PROJECT.FILE,'MAINT.MENU' ELSE
  CALL ATGUIERROR(3,'MAINT','',0,GRFATAL,"'MAINT.MENU' is not on file.",GUIERRORS)
  RETURN
END
* Add your equates and code to open files here...
*
*
************************************************************
*
*
*-->BEGIN GUI HEADER<--*
* If GUISTATE is not NULL, assume GUI has been initialized
IF GUISTATE EQ '' THEN
  CALL ATGUIINIT2(TEMPLATE<2,2>,'',GUIERRORS,GUISTATE)
  IF GUIERRORS<1> >= 3 THEN RETURN
END
* Load the dialog project template
CALL ATGUIRUNMACRO(TEMPLATE,'',GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= 3 THEN RETURN
*-->END GUI HEADER<--*
*
*
************************************************************
*
*
*-->BEGIN GUI STARTUP<--*
ACCEPT = 0 ;* Assume dialog cancelled (update in your OK button Click handler)
* Add your code to load initial values here...
CALL ATGUISHOW('MAINT','MAINT','','',GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= 2 THEN RETURN
*
CALL ATGUISETPROP(GUIAPP,GUIFRM,"FRMSYS",GPENABLED,0,0,ADMIN.ENABLE,GUIERRORS,GUISTATE)
*
*-->END GUI STARTUP<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT LOOP<--*
GUI.DLG.EXIT = 0
LOOP
  CALL ATGUIWAITEVENT(GUIAPP,GUIFRM,GUICTL,GUIEVT,GUIARGS,GUIERRORS,GUISTATE)
  IF GUIERRORS<1> >= 2 THEN RETURN
  IF GUIEVT EQ GEQUIT THEN
    GUI.DLG.EXIT = 1
  END ELSE
    GUIAPP=OCONV(GUIAPP,'MCU')
    GUIFRM=OCONV(GUIFRM,'MCU')
    GUICTL=OCONV(GUICTL,'MCU')
    GOSUB GUI.DECODE.EVENT
  END
UNTIL GUI.DLG.EXIT DO REPEAT
* Eat final Quit event
IF GUIEVT <> GEQUIT THEN
  GUI.APP.LIST = ''
  CALL ATGUIGETPROP('','','',GPSTATUS,2,0,GUI.APP.LIST,'',GUISTATE)
  IF GUI.APP.LIST EQ '' THEN
    * Quit event fired after last GUI object is deleted - discard it
    CALL ATGUIWAITEVENT('','','','','','',GUISTATE)
    * We could call ATGUISHUTDOWN here if we wanted, but there's no
    * harm just leaving the GUI environment initialized, in case we
    * want to use it again...
  END
END
*-->END EVENT LOOP<--*
*
*
************************************************************
*
*
*-->BEGIN GUI TRAILER<--*
RETURN
*
GUI.DIALOG.RETURN: *
* This subroutine is called just before the GUI Dialog app
* is deleted. Check the state of the ACCEPT variable, and
* retrieve values from GUI controls and assign to appropriate
* arguments for return to calling program here...
IF ACCEPT THEN
  * Add your code here...
END ELSE
  * Add your code here...
END
RETURN
*-->END GUI TRAILER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT DECODER<--*
GUI.DECODE.EVENT: *
IF NUM(GUIEVT) THEN
 BEGIN CASE
 CASE GUIAPP='MAINT'
 BEGIN CASE
  CASE GUIFRM='MAINT'
  BEGIN CASE
   CASE GUICTL=''
   BEGIN CASE
    CASE GUIEVT=GECLOSE
    GOSUB GUI.MAINT.MAINT.CLOSE;GUIEVT=0
    END CASE
   CASE GUICTL='BTNBANKS'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNBANKS.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNCERTS'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNCERTS.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNCMSTAT'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNCMSTAT.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNCO'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNCO.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNCOMP'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNCOMP.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNDEPT'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNDEPT.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNDFLTS'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNDFLTS.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNEXTRA'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNEXTRA.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNGLCODES'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNGLCODES.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNLOT'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNLOT.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNMTL'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNMTL.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNORDERCLASS'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNORDERCLASS.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNORDERTYPE'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNORDERTYPE.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNPROCESS'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNPROCESS.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNPROCESSGROUPS'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNPROCESSGROUPS.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNQAMETHODS'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNQAMETHODS.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNSALESPERSON'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNSALESPERSON.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNSHIPVIA'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNSHIPVIA.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNSIGNOFF'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNSIGNOFF.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNSPC'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNSPC.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNSTATES'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNSTATES.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNTAX'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNTAX.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNTERMS'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNTERMS.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNUSERS'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNUSERS.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNVNSTAT'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.MAINT.MAINT.BTNVNSTAT.CLICK;GUIEVT=0
    END CASE
   END CASE
  END CASE
 END CASE
 IF GUIEVT THEN
  * Unhandled event - may be dynamic
  GOSUB GUI.DYNAMIC.EVENTS
 END
END ELSE
 GOSUB GUI.CUSTOM.EVENTS
END
RETURN
*-->END EVENT DECODER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNBANKS.CLICK: *
CALL VF.DIALOG("BANKS",GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNCERTS.CLICK: *
CALL VF.DIALOG("CERT.DESC",GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNCMSTAT.CLICK: *
CALL VF.DIALOG("CM.STATUS",GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNCO.CLICK: *
CALL VF.DIALOG("COUNTRY",GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNCOMP.CLICK: *
CALL COMP.MAINT(GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNDEPT.CLICK: *
CALL VF.DIALOG("DEPARTMENTS",GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNDFLTS.CLICK: *
PRMPT = ''
PRMPT<1,1,-1> = "Must add dialog / code to handle values of SYSTEM_FILE DEFAULTS and NETWORK_PATH"
PRMPT<1,1,-1> = "See NXT.INCLUDES SYSTEM_FILE.EQU for Record Layouts"
PRMPT<1,1,-1> = "(Currently these values are maintained via the editor)"
CAPTION = PROG_ID
STYLE   = 4  ;* i
BUTTONS = 0  ;* ok
HELPID = ""
CALL NXT.ERR.MSG(PRMPT, CAPTION, STYLE, BUTTONS, HELPID, RESPONSE, GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNEXTRA.CLICK: *
CALL VF.DIALOG("EXTRA.CHARGES",GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNGLCODES.CLICK: *
CALL VF.DIALOG("GL.TRANS.CODES",GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNLOT.CLICK: *
CALL VF.DIALOG("LOT.CHARGES",GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNMTL.CLICK: *
CALL VF.DIALOG("MATERIAL",GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNORDERCLASS.CLICK: *
CALL VF.DIALOG("ORDER.CLASS",GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNORDERTYPE.CLICK: *
CALL VF.DIALOG("ORDER.TYPE",GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNPROCESS.CLICK: *
CALL PROCESS.MAINT(GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNPROCESSGROUPS.CLICK: *
CALL PROCESS.GROUP.MAINT(GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNQAMETHODS.CLICK: *
CALL VF.DIALOG("QA.METHODS",GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNSALESPERSON.CLICK: *
CALL VF.DIALOG("SALES.PERSONS",GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNSHIPVIA.CLICK: *
CALL VF.DIALOG("SHIP.VIA",GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNSIGNOFF.CLICK: *
CALL VF.DIALOG("SIGNOFF",GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNSPC.CLICK: *
CALL VF.DIALOG("SALES.CODES",GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNSTATES.CLICK: *
CALL VF.DIALOG("STATES",GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNTAX.CLICK: *
CALL VF.DIALOG("SALES.TAX",GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNTERMS.CLICK: *
CALL VF.DIALOG("TERMS",GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNUSERS.CLICK: *
CALL USER.MAINT(GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.MAINT.MAINT.BTNVNSTAT.CLICK: *
CALL VF.DIALOG("VN.STATUS",GUIERRORS,GUISTATE)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN CLOSE EVENT HANDLER<--*
GUI.MAINT.MAINT.CLOSE: *
* Default form close event handler
CALL ATGUIHIDE(GUIAPP,GUIFRM,'','',GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= 2 THEN GOTO GUI.ERROR
CALL ATGUIGETPROP(GUIAPP,'','',GPSTATUS,0,0,NUM.FORMS,GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= 2 THEN GOTO GUI.ERROR
IF NUM.FORMS = 0 THEN
  GOSUB GUI.DIALOG.RETURN
  CALL ATGUIDELETE(GUIAPP,'','',GUIERRORS,GUISTATE)
  IF GUIERRORS<1> >= 3 THEN GOTO GUI.ERROR
  GUI.DLG.EXIT = 1
END
RETURN
*-->END CLOSE EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN DYNAMIC EVENTS<--*
GUI.DYNAMIC.EVENTS: *
* Add any dynamic event handling code here. The GUIEVT, GUIAPP, GUIFRM,
* GUICTL and GUIARGS variables are valid and availble for your use.
RETURN
*-->END DYNAMIC EVENTS<--*
*
*
************************************************************
*
**-->BEGIN CUSTOM EVENTS<--*
GUI.CUSTOM.EVENTS: *
* Add any custom event handling code here. The GUIEVT, GUIAPP, GUIFRM,
* GUICTL and GUIARGS variables are valid and availble for your use.
RETURN
*-->END CUSTOM EVENTS<--*
*
*
************************************************************
*
**-->BEGIN ERROR HANDLER<--*
GUI.ERROR: *
GUI.DLG.EXIT = 1
LOG.OPTS = "DISPLAY"
ERROR_NBR = ERR_GUI
ERROR_MSG =  ERR_MESSAGE(ERR_GUI)
CALL LOG.ERROR(LOG.OPTS,"MAINT.MENU.DIALOG", ERROR_NBR, ERROR_MSG, GUIERRORS, GUISTATE)
RETURN
*-->END ERROR HANDLER<--*
*
*
************************************************************
*
END
