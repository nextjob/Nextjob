SUBROUTINE SETUP.CUSTOM.CONTROLS(CFLD_FILE,CFLD_FILE_REC,GUIAPP,GUIFRM,GUIERRORS,GUISTATE)
**************************************************************************
* This is free and unencumbered software released into the public domain.
*
* Anyone is free to copy, modify, publish, use, compile, sell, or
* distribute this software, either in source code form or as a compiled
* binary, for any purpose, commercial or non-commercial, and by any
* means.
*
* In jurisdictions that recognize copyright laws, the author or authors
* of this software dedicate any and all copyright interest in the
* software to the public domain. We make this dedication for the benefit
* of the public at large and to the detriment of our heirs and
* successors. We intend this dedication to be an overt act of
* relinquishment in perpetuity of all present and future rights to this
* software under copyright law.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
* IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
* OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
* OTHER DEALINGS IN THE SOFTWARE.
*
* For more information, please refer to <https://unlicense.org>
**************************************************************************
*
* MODULE: SETUP.CUSTOM.CONTROLS
* AUTHOR: MAB
* VERSION: 1.0.0
* CREATED: 06/00/2015
* UPDATED:
*
* MAINTENANCE RECORD:
*
* EQUATE:
*
*
* VARIABLES:
*
* ON ENTRY
* CFLD_FILE -CUSTOM FIELD CONTROL FILE (IE CFLD*ORDER_CHILD)
* RETURNS
* CFLD_FILE_REC
*
* FILES:
*
*
* DESIGN DESCRIPTION:
* ATTEMPT TO ACCESS PASSED CUSTOM FIELD CONTROL RECORD, IF FOUND POPULATE DEFINED CONTROL VALUES ON GUIFRM
*
* layout of custom user defined fields RECORD AS DEFINED IN SYSTEM_FILE.EQU
* note key is associated file (CFLD*Order_Parent, CFLD*ORDER_CHILD, CFLD*Parts, CFLD*WC.....)
*
*equate CFLD_LABEL_CNTRL_ID     TO    1  ;* LABEL CONTROL ID
*equate CFLD_LABEL_CAPTION      TO    2  ;* LABEL TEXT
*equate CFLD_TXTBOX_CNTRL_ID    TO    3  ;* TEXT BOX CONTROL ID
*equate CFLD_TXTBOX_DATA_TYPE   TO    4  ;* TEXT BOX DATA TYPE (OPTIONAL)
*equate CFLD_TXTBOX_CONV_CODE   TO    5  ;* CONVERSION CODE FOR DATA CONVERSION (OPTIONAL)
*equate CFLD_TXTBOX_VALIDATE    TO    6  ;* CATALOGED SUBROUTINE NAME OF ROUTINE CALLED TO PERFORM DATA VALIDATION (OPTIONAL)
!
** INCLUDE STANDARD VARIABLE, EQUATES
*
*
$INCLUDE NXT.INCLUDES NXT.COMMON
$INCLUDE NXT.INCLUDES NXT.EQUATES
$INCLUDE NXT.INCLUDES NXT.ERR.MSGS
$INCLUDE NXT.INCLUDES SYSTEM_FILE.EQU
$INCLUDE GUIBP ATGUIEQUATES
*
PROG_ID = "SETUP.CUSTOM.CONTROLS"
*
MSG_LIST = ''
*
CTRLIDS = ""  ;* DYN ARRAYS FOR CALL TO ATGUISETPROPS, CONTROL ID
PROPS   = ""  ;* PROPERTY NAME
VALUES  = ""  ;* PROPERTY VALUE
*
CALL GET.RECORD("SYSTEM_FILE",C.SYSTEM_FILE,CFLD_FILE,CFLD_FILE_REC,@FALSE,ERROR_STATUS,MSG_LIST,GUIERRORS,GUISTATE)
IF CFLD_FILE_REC = '' THEN
   LOG.OPTS = "DISPLAY"
   ERROR_NBR = ERR_SYS
   ERROR_MSG =  "Cannot Read CUSTOM FIELD CONTROL Record: ":CFLD_FILE:", Custom Controls not Set!"
   CALL LOG.ERROR(LOG.OPTS,PROG_ID, ERROR_NBR, ERROR_MSG, GUIERRORS, GUISTATE)
END ELSE
   *
   * SET CAPTIONS FOR USER DEFINDED FIELDS
   *
   FOR I = 1 TO DCOUNT(CFLD_FILE_REC<CFLD_LABEL_CNTRL_ID>,@VM)
      CTRLIDS<I> = CFLD_FILE_REC<CFLD_LABEL_CNTRL_ID,I>
      PROPS<I>   = GPVALUE
      VALUES<I>  = CFLD_FILE_REC<CFLD_LABEL_CAPTION,I>
   NEXT I
   IDX = I
   *
   * SET DATA TYPE FOR THE TEXT BOX CONTROL (OPTIONAL)
   FOR I = 1 TO DCOUNT(CFLD_FILE_REC<CFLD_TXTBOX_CNTRL_ID>,@VM)
      EDT.DATA.TYPE = CFLD_FILE_REC<CFLD_TXTBOX_DATA_TYPE,I>
      GOSUB DATA.TYPE.VAL
      IF EDT.DATA.TYPE # '' THEN
         IDX +=1
         CTRLIDS<IDX> = CFLD_FILE_REC<CFLD_TXTBOX_CNTRL_ID,I>
         PROPS<IDX>   = GPDATATYPE
         VALUES<IDX>  = EDT.DATA.TYPE
      END
   NEXT I

   *
   * MAKE THE CALL
   *
   CALL ATGUISETPROPS(GUIAPP, GUIFRM, CTRLIDS,PROPS, VALUES, GUIERRORS, GUISTATE)
   IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
END
*
RETURN
************************************************************
* $PAGE$
************************************************************
* CONVERT TEXT DATA TYPE TO ACCUTERM VALUE
* EDT.DATA.TYPE ON ENTRY TEXT VALUE
* ON RETURN NUMBERIC VALUE OR NULL IF NO MATCH FOUND
DATA.TYPE.VAL:
BEGIN CASE
   CASE EDT.DATA.TYPE = "GDANY" ;* 0
      EDT.DATA.TYPE = GDANY
   CASE EDT.DATA.TYPE = "GDALPHA" ;* 1
      EDT.DATA.TYPE = GDALPHA
   CASE EDT.DATA.TYPE = "GDALPHANUM" ;* 2
      EDT.DATA.TYPE = GDALPHANUM
   CASE EDT.DATA.TYPE = "GDBOOL" ;* 3
      EDT.DATA.TYPE = GDBOOL
   CASE EDT.DATA.TYPE = "GDCOUNTRY" ;* 4
      EDT.DATA.TYPE = GDCOUNTRY
   CASE EDT.DATA.TYPE = "GDCURRENCY" ;* 5
      EDT.DATA.TYPE = GDCURRENCY
   CASE EDT.DATA.TYPE = "GDDATE" ;* 6
      EDT.DATA.TYPE = GDDATE
   CASE EDT.DATA.TYPE = "GDFINANCIAL" ;* 7
      EDT.DATA.TYPE = GDFINANCIAL
   CASE EDT.DATA.TYPE = "GDNUMERIC" ;* 8
      EDT.DATA.TYPE = GDNUMERIC
   CASE EDT.DATA.TYPE = "GDPERCENT" ;* 9
      EDT.DATA.TYPE = GDPERCENT
   CASE EDT.DATA.TYPE = "GDPHONE" ;* 10
      EDT.DATA.TYPE = GDPHONE
   CASE EDT.DATA.TYPE = "GDSSN" ;* 11
      EDT.DATA.TYPE = GDSSN
   CASE EDT.DATA.TYPE = "GDSTATE" ;* 12
      EDT.DATA.TYPE = GDSTATE
   CASE EDT.DATA.TYPE = "GDTIME" ;* 13
      EDT.DATA.TYPE = GDTIME
   CASE EDT.DATA.TYPE = "GDZIPCODE" ;* 14
      EDT.DATA.TYPE = GDZIPCODE
   CASE 1
      EDT.DATA.TYPE = ''
END CASE
RETURN
************************************************************
*
**-->BEGIN ERROR HANDLER<--*
GUI.ERROR: *
GUI.DLG.EXIT = 1
LOG.OPTS = "DISPLAY"
ERROR_NBR = ERR_GUI
ERROR_MSG =  ERR_MESSAGE(ERR_GUI)
CALL LOG.ERROR(LOG.OPTS,PROG_ID, ERROR_NBR, ERROR_MSG, GUIERRORS, GUISTATE)
RETURN
*-->END ERROR HANDLER<--*
*
*
************************************************************
END
