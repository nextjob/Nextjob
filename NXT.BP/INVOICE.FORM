SUBROUTINE INVOICE.FORM(AR_ID,AR_REC,FD)
**************************************************************************
* This is free and unencumbered software released into the public domain.
*
* Anyone is free to copy, modify, publish, use, compile, sell, or
* distribute this software, either in source code form or as a compiled
* binary, for any purpose, commercial or non-commercial, and by any
* means.
*
* In jurisdictions that recognize copyright laws, the author or authors
* of this software dedicate any and all copyright interest in the
* software to the public domain. We make this dedication for the benefit
* of the public at large and to the detriment of our heirs and
* successors. We intend this dedication to be an overt act of
* relinquishment in perpetuity of all present and future rights to this
* software under copyright law.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
* IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
* OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
* OTHER DEALINGS IN THE SOFTWARE.
*
* For more information, please refer to <https://unlicense.org>
**************************************************************************
*
* MODULE: INVOICE.FORM
* AUTHOR: MAB
* VERSION: 1.0.0
* CREATED: 00/00/2007
* UPDATED:
*
* MAINTENANCE RECORD:
* 02/11/15 * EXTENSION AMT DEPENDS ON LOT FLAG
*
* EQUATE:
*
*
* VARIABLES:
*
*
* FILES:
*
*
* DESIGN DESCRIPTION:
* CREATE PCL INVOICE
** INCLUDE STANDARD VARIABLE, EQUATES
*
$INCLUDE NXT.INCLUDES NXT.COMMON
$INCLUDE NXT.INCLUDES NXT.EQUATES
$INCLUDE NXT.INCLUDES NXT.PRT.EQUATES
$INCLUDE NXT.INCLUDES NXT.ERR.MSGS
$INCLUDE NXT.INCLUDES SALES.H
$INCLUDE NXT.INCLUDES CUSTOMERS.H
$INCLUDE NXT.INCLUDES AR.H

!
* ROUTINE creates the pcl data for the invoice to print
*
*
*  ON ENTRY:
*    AR_ID - AR RECORD ID OF INVOICE TO PRINT
*
!
MSG_LIST = ''
CM_ID = AR_REC<AR_CUST_ID>   ;* CUSTOMER ID
CALL GET.RECORD("CUSTOMERS",C.CUSTOMERS,CM_ID,CM_REC,@FALSE,ERROR_STATUS,MSG_LIST,GUIERRORS,GUISTATE)
IF CM_REC # '' THEN
   *
   * INIT SOME STUFF
   *
   PAGE.CNT = 1

   YMAX = 2800  ;* MAX DOT POSITION FOR BOTTOM OF PACK SLIP
   *
   * GET AR RECORD
   * POPULATE CUSTOMER DATA
   *

   *
   * SET UP THE  BILL TO INFO
   *
   *
   BILL.NAME = CM_REC<CM_NAME>
   BILL.ADD1 = CM_REC<CM_ADDR>
   BILL.ADD2 = CM_REC<CM_ADDR2>
   BILL.CSZ = CM_REC<CM_CITY>:', ':CM_REC<CM_STATE>:' ':CM_REC<CM_ZIP>
   BILL.COUNTRY  = CM_REC<CM_COUNTRY>
   *
   *
   * NOW SQUEEZE THEM DOWN
   *
   BILL.ADDRESS = ''
   AA = 1
   *
   IF BILL.ADD1 # '' THEN
      BILL.ADDRESS<AA> = BILL.ADD1
      AA +=1
   END
   *
   IF BILL.ADD2 # '' THEN
      BILL.ADDRESS<AA> = BILL.ADD2
      AA +=1
   END
   *
   IF BILL.CSZ # '' THEN
      BILL.ADDRESS<AA> = BILL.CSZ
      AA +=1
   END
   *
   IF BILL.COUNTRY # '' THEN
      BILL.ADDRESS<AA> = BILL.COUNTRY
      AA +=1
   END
   *
PRT.HDR: *
   **
   * PRINT HEADER
   **
   FD = FD:CG12:ESC:'*p1815x100Y':AR_ID"8'0'R"
   *
   FD = FD:ESC:'*p1815x200Y':OCONV(AR_REC<AR_INV_DATE>,AR_INV_DATE.CNV)
   FD = FD:ESC:'*p1815x275Y':OCONV(AR_REC<AR_DUE_DATE>,AR_INV_DATE.CNV)
   *
   FD = FD:CPI.10
   FD = FD:ESC:'*p80x495Y':BILL.NAME "L#26"
   FD = FD:ESC:'*p80x545Y':BILL.ADDRESS<1> "L#26"
   FD = FD:ESC:'*p80x595Y':BILL.ADDRESS<2> "L#26"
   FD = FD:ESC:'*p80x645Y':BILL.ADDRESS<3> "L#26"
   FD = FD:ESC:'*p80x695Y':BILL.ADDRESS<4> "L#26"
   FD = FD:ESC:'*p80x745Y':BILL.ADDRESS<5> "L#26"
   *
   *  GET THE SALES RECORDS
   *
   SALES.CNT = DCOUNT(AR_REC<AR_SALES_ID>,@VM)
   YPOS = 1075
   YINC = 50
   FOR SI = 1 TO SALES.CNT
      SA_ID = AR_REC<AR_SALES_ID,SI>
      CALL GET.RECORD("SALES",C.SALES,SA_ID,SA_REC,@FALSE,ERROR_STATUS,MSG_LIST,GUIERRORS,GUISTATE)
      IF SA_REC # '' THEN
         *
         IF SI = 1 THEN
            *
            *  ONLY NEED THIS DATA ONCE
            *
            OP_ID = FIELD(SA_REC<SA_ORDER_ID>,'*',1)
            FD = FD:CG12:ESC:'*p1815x150Y':OP_ID
            FD = FD:CPI.10:ESC:'*p20x940Y':SA_REC<SA_PO_NBR> 'L#25':SA_REC<SA_BUYER>  'L#25':SA_REC<SA_CUST_ID>'L#10':SA_REC<SA_SHIP_VIA>'L#20'
         END
         *
         * PRINT SALES RECORD DATA ON INVOICE

         REV.LEVEL = SA_REC<SA_REV>
         *
         QTY = SA_REC<SA_DEL_QTY>

         *
         YPOS += YINC
         FD = FD:ESC:'*p40x':YPOS:'Y':QTY
         FD = FD:ESC:'*p220x':YPOS:'Y':FIELD(SA_REC<SA_ORDER_ID>,'*',2)
         *
         IF SA_REC<SA_EXTRA_FLAG> THEN
            PN.REV = "Exrta Charge:"
         END ELSE
            PN.REV = SA_REC<SA_PART_NBR>
         END
         IF SA_REC<SA_REV> # '' THEN
            PN.REV = PN.REV:' rev: ':SA_REC<SA_REV>
         END
         FD = FD:ESC:'*p340x':YPOS:'Y':PN.REV
         *
         * PRICE AND EXTENSION
         *
         FD = FD:ESC:'*p1800x':YPOS:'Y':OCONV(SA_REC<SA_PRICE_EA>,SA_PRICE_EA.CNV)"R#8"
         *
         * EXTENSION AMT DEPENDS ON LOT FLAG
         *
         IF SA_REC<SA_LOT_FLAG> THEN
            EXT.AMT = SA_REC<SA_PRICE_EA>
         END ELSE
            EXT.AMT = SA_REC<SA_PRICE_EA> * QTY
         END
         FD = FD:ESC:'*p2090x':YPOS:'Y':OCONV(EXT.AMT,SA_PRICE_EA.CNV)"R#10"
         *
         IF SA_REC<SA_DRAWING> # '' THEN
            YPOS += YINC
            FD = FD:ESC:'*p340x':YPOS:'Y':SA_REC<SA_DRAWING>
         END
         *
         IF SA_REC<SA_PART_DESC> # '' THEN
            YPOS += YINC
            FD = FD:ESC:'*p340x':YPOS:'Y':SA_REC<SA_PART_DESC>
         END
         *
         *
         *
      END ELSE
         PRMPT = "Sales Record: ":SA_ID:" is not available, Status Code: ":ERROR_STATUS
         CAPTION = "Invoicing"
         STYLE   = 2  ;* !
         BUTTONS = 0  ;* ok
         HELPID = ""
         CALL NXT.ERR.MSG(PRMPT, CAPTION, STYLE, BUTTONS, HELPID, RESPONSE, GUIERRORS,GUISTATE)
      END
   NEXT SI
   *
   FD = FD:CG12:ESC:'*p2175x2870Y':OCONV(AR_REC<AR_AMOUNT>,AR_AMOUNT.CNV)"R#10"
   *
   *
   *
END ELSE
   PRMPT = "Customer: ":CM_ID:" is not available, Status Code: ":ERROR_STATUS
   CAPTION = "Invoicing"
   STYLE   = 2  ;* !
   BUTTONS = 0  ;* ok
   HELPID = ""
   CALL NXT.ERR.MSG(PRMPT, CAPTION, STYLE, BUTTONS, HELPID, RESPONSE, GUIERRORS,GUISTATE)
END
*
RETURN
END
