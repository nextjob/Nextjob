SUBROUTINE PROCESS.FORM(REC,REC_ID,REC_TYPE,CUST_NAME,CUST_PO,PRINTER.NBR,GUIERRORS,GUISTATE)
**************************************************************************
* This is free and unencumbered software released into the public domain.
*
* Anyone is free to copy, modify, publish, use, compile, sell, or
* distribute this software, either in source code form or as a compiled
* binary, for any purpose, commercial or non-commercial, and by any
* means.
*
* In jurisdictions that recognize copyright laws, the author or authors
* of this software dedicate any and all copyright interest in the
* software to the public domain. We make this dedication for the benefit
* of the public at large and to the detriment of our heirs and
* successors. We intend this dedication to be an overt act of
* relinquishment in perpetuity of all present and future rights to this
* software under copyright law.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
* IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
* OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
* OTHER DEALINGS IN THE SOFTWARE.
*
* For more information, please refer to <https://unlicense.org>
**************************************************************************
*
* MODULE: PROCESS.FORM
* AUTHOR: MAB
* VERSION: 1.0.0
* CREATED: 00/00/2007
* UPDATED:
*
* MAINTENANCE RECORD:
*
* EQUATE:
*
*
* VARIABLES:
* REC - ORDER _CHILD OR PART RECORD
* REC_ID - RECORD ID
* REC_TYPE    - RECORD TYPE
* PRINTER.NBR - PRINTER UNIT NUMBER TO SET PROCESS FORM TO
*
*
* FILES:
*
*
* DESIGN DESCRIPTION:
* CREATE PCL PROCESS STEP FORM
** INCLUDE STANDARD VARIABLE, EQUATES
*
$INCLUDE NXT.INCLUDES NXT.COMMON
$INCLUDE NXT.INCLUDES NXT.EQUATES
$INCLUDE NXT.INCLUDES NXT.PRT.EQUATES
$INCLUDE NXT.INCLUDES NXT.ERR.MSGS
$INCLUDE NXT.INCLUDES SYSTEM_FILE.EQU
$INCLUDE NXT.INCLUDES ORDER_CHILD.H
$INCLUDE NXT.INCLUDES PARTS.H
$INCLUDE NXT.INCLUDES PROCESS_STEPS.H
!
GET_REC_MSG_LIST = ''
*
CALL PROCESS.TEMPLATE(PROFM)  ;* GET FORM TEMPLATE
FD = PROFM
*
* INIT SOME STUFF
*
PAGE.CNT = 0 ;* PAGE COUNTER
YMAX = 3000  ;* MAX DOT POSITION FOR BOTTOM OF PROCESS FORM
TOP_OF_DESC = 950  ;* Y POS FOR FIRST DESC (PROCESS STEP)
YINC = 60          ;* y INC FOR EACH STEP DETAIL LINE & NOTES
OUT.DATA = ''
*
* DETERMINE LOCATION OF PROCESS STEP DATA (DEPENDS ON RECORD PASSED)
*
IF REC_TYPE = "ORDER_CHILD" THEN
   DEL_QTY = 0
   DEL.CNT = DCOUNT(REC<OC_ORD_QTY>,@VM)
   FOR I = 1 TO DEL.CNT
      DEL_QTY += REC<OC_ORD_QTY,I>
   NEXT I
   PROCESS_ID   = REC<OC_PROCESS_ID>
   PROCESS_DESC = REC<OC_PROCESS_DESC>
   PROCESS_CERT = REC<OC_PROCESS_CERT>
   PART_DESC    = REC<OC_PART_DESC>
   PART_REV     = REC<OC_REV>
   PART_DRAW    = REC<OC_DRAWING>
   PART_NBR     = REC<OC_PART_NBR>
   PART_MTL     = REC<OC_MATL>
   NOTES        = REC<OC_ITEM_NOTES>
   *
   * GET PICTURE FILE NAME FROM PARTS RECORD
   CALL GET.RECORD("PARTS",C.PARTS,PART_NBR,PARTS_REC,@FALSE,ERROR_STATUS,GET_REC_MSG_LIST,GUIERRORS,GUISTATE)
   IF PARTS_REC # '' THEN
      PICTURE_FILE = PARTS_REC<PT_PICTURE>
   END ELSE
      PICTURE_FILE = ''
   END
END ELSE
   DEL_QTY = ''
   PROCESS_ID   = REC<PT_PROCESS_ID>
   PROCESS_DESC = REC<PT_PROCESS_DESC>
   PROCESS_CERT = REC<PT_PROCESS_CERT>
   PART_DESC    = REC<PT_DESC>
   PART_REV     = REC<PT_REV>
   PART_DRAW    = REC<PT_DRAWING>
   PART_NBR     = REC_ID
   PART_MTL     = REC<PT_MATL>
   NOTES        = REC<PT_NOTES>
   PICTURE_FILE = REC<PT_PICTURE>
END
*
* NOTE LOOKING INTO USING MKDPCL TO CREATE PCL ON THE FLY.
* MKDPLC IS FOUND AT http://www.spectracolorservices.com/
* OR (preferred) create a Delphi / Free Pascal program to conver image file to pcl
* or (best yet) complete NxtReport and get rid of HP PCL hard coded forms!!!!
* note NXT_MKDPCL defined in NXT.EQUATES
*
IF PICTURE_FILE # '' AND NXT_MKDPCL THEN
   *
   * PART PICTURE REALLY ON FILE?
   *
   BCKSLH.CNT = COUNT(PICTURE_FILE,@DS)
   PICTURE_NAME = FIELD(PICTURE_FILE,@DS,BCKSLH.CNT+1)
   PICTURE_DIR = ''
   FOR I = 1 TO BCKSLH.CNT
      PICTURE_DIR := FIELD(PICTURE_FILE,@DS,I)
      IF I # BCKSLH.CNT THEN PICTURE_DIR := @DS
   NEXT I
   * GET FILE NAME THEN LOOK FOR PCL VERSION?
   *
   PICTURE.DATA = ''
   OPENPATH PICTURE_DIR TO PICTURE_FILE THEN
      MARK.MAPPING PICTURE_FILE, OFF
      *
      READ PICTURE.TEST FROM PICTURE_FILE, PICTURE_NAME THEN
         PICTURE_PCL = FIELD(PICTURE_NAME,".",1)
         PICTURE_PCL = PICTURE_PCL:'.PCL'
         READ PICTURE.DATA FROM PICTURE_FILE,PICTURE_PCL  THEN
            PICTURES = @TRUE
         END ELSE
            *          CREATE PICTURE PCL ?
            *
           *
            * N O T E ! ! ! REQUIRES /TMP DIRECTORY TO BE CREATED!
            * printer must be defined as:
            *Unit Width Depth Tmgn Bmgn Mode Options
            *   3   128    66    3    3    1 AT "HP LASERJET 5N", NFMT
            *
            *
            * COMMAND IS:
            OS.EXECUTE "C:\MKDPCL\mkpcl -v 1 -r 300 -c 4 -h 1.5 -x 1500 -y 275 ":PICTURE_DIR:'\':PICTURE_NAME:" ":PICTURE_DIR:'\':PICTURE_PCL
            READ PICTURE.DATA FROM PICTURE_FILE,PICTURE_PCL  THEN
               PICTURES = @TRUE
            END ELSE
               PICTURES = @FALSE
            END
            *
         END
      END ELSE ;* CANNOT READ PICTURE (JPG)
         PICTURES = @FALSE
      END
   END ELSE ;* CANNOT OPEN PICTURE DIR
      PICTURES = @FALSE
   END
END ELSE ;* PICTURE_FILE NULL OR MKPCL NOT INSTALLED
   PICTURES = @FALSE
END

* PART AND REV
FD = FD:CPI.10
FD = FD:ESC:'*p330x420Y':PART_NBR:CG10:' rev: ':CPI.10:PART_REV
FD = FD:ESC:'*p330x470Y':PART_DESC "L#26"
FD = FD:ESC:'*p330x520Y':PART_DRAW "L#26"
FD = FD:ESC:'*p330x570Y':PART_MTL "L#26"
IF DEL_QTY # '' THEN
   FD = FD:ESC:'*p80x620Y':CG10:'Customer: ':ESC:'*p330x620Y':CPI.10:CUST_NAME"L#26"
   FD = FD:ESC:'*p80x670Y':CG10:'PO Nbr.: ':ESC:'*p330x670Y':CPI.10:CUST_PO"L#26"
   FD = FD:ESC:'*p80x720Y':CG10:'Order Nbr.: ':ESC:'*p330x720Y':CPI.10:FIELD(REC_ID,"*",1)
   FD = FD:ESC:'*p80x770Y':CG10:'Quantity: ':ESC:'*p330x770Y':CPI.10:DEL_QTY
END
PROFM = FD  ;* SAVE TEMPLATE FOR EXTRA PAGES
*
* PROCESS STEPS ARE VALUE MARKED FIELDS
* EACH PROCESS STEP MAY HAVE MULT LINES (SVM FIELD)
*
YPOS = TOP_OF_DESC
*
STEP.CNT = DCOUNT(PROCESS_ID,@VM)
FOR I = 1 TO STEP.CNT
   *
   CURRENT.PROCESS = PROCESS_ID<1,I>
   IF CURRENT.PROCESS = "CUSTOM" THEN
      *
      CURRENT.DESC = 'STEP ID: ':CURRENT.PROCESS:@SVM:PROCESS_DESC<1,I>
      DESC.LN.COUNT = DCOUNT(CURRENT.DESC,@SVM)
      FOR DI = 1 TO DESC.LN.COUNT  ;* INDIVIDUAL LINES WITHIN EACH STEP
         *
         DATA.LN = CURRENT.DESC<1,1,DI>
         GOSUB LN.PRINT

      NEXT DI
   END ELSE

      CALL GET.RECORD("PROCESS_STEPS",C.PROCESS_STEPS,CURRENT.PROCESS,PROCESS_REC,@FALSE,ERROR_STATUS,GET_REC_MSG_LIST,GUIERRORS,GUISTATE)
      IF ERROR_STATUS = '' THEN
         DESC.TO.USE =  'STEP ID: ':CURRENT.PROCESS:@VM:PROCESS_REC<PS_PROCESS_DESC>
      END ELSE
         DESC.TO.USE = "Process Step: ":CURRENT.PROCESS:', Not on File?'
      END
      *
      * PRINT PROCESS ID
      *
      *      FD = FD:CPI.10:ESC:'*p70x':YPOS:'Y':CURRENT.PROCESS"L#15"
      *
      * NOW PROCESS DESC
      FOR DI = 1 TO DCOUNT(DESC.TO.USE,@VM)  ;* INDIVIDUAL LINES WITHIN EACH STEP
         *
         DATA.LN = DESC.TO.USE<1,DI>
         GOSUB LN.PRINT

      NEXT DI
   END
   *
   FD = FD:ESC:'*p0x':YPOS-YINC+10:'Y':ESC:'*c2395a3b0P'     ;* hz STEP ln
NEXT I
*
* NOTES ?
*
*
IF NOTES # '' THEN
   NOTES = 'Notes: ':NOTES
   YPOS += YINC
   GOSUB PAGE.TEST
   FOR DI = 1 TO DCOUNT(NOTES<1>,@VM)  ;* INDIVIDUAL NOTE LINES
      *
      DATA.LN = NOTES<1,DI>
      GOSUB LN.PRINT

   NEXT DI
END
*
*
* PRINT LAST PAGE?
IF YPOS # TOP_OF_DESC THEN   ;* LAST PAGE TO PRINT ?
   PAGE.CNT += 1
   FD := ESC:'*p2900x2230Y':'page: ':PAGE.CNT
   IF PICTURES THEN
      OUT.DATA = OUT.DATA : NXT_PCL_HEADER:PICTURE.DATA:FD
   END ELSE
      OUT.DATA = OUT.DATA : FD
   END
   * MAB  PRINT ON PRINTER.NBR OUT.DATA
   * MAB  PRINTER CLOSE ON PRINTER.NBR

   IF PRINTER.NBR > 0 THEN  ;* PDF PRINT?
      PRINT ON PRINTER.NBR OUT.DATA
      PRINTER CLOSE ON PRINTER.NBR
   END ELSE
      PDF.NAME = 'PROCESS_TRAVELER-.PDF'
      DISPLAY.ON.CREATION = @TRUE
      CALL PCL.TO.PDF(OUT.DATA,PDF.NAME,DISPLAY.ON.CREATION,GUIERRORS,GUISTATE)
   END


END
RETURN
!
PAGE.TEST: *
IF YPOS > YMAX THEN
   *
   * PRINT CURRENT PAGE
   *
   PAGE.CNT += 1
   FD := ESC:'*p2900x2230Y':'page: ':PAGE.CNT
   * MAB  PRINT ON PRINTER.NBR FD
   * MAB  PRINTER CLOSE ON PRINTER.NBR
   *
   OUT.DATA = OUT.DATA : FD
   * START OVER

   FD   = PROFM
   YPOS = TOP_OF_DESC
END
RETURN
!
* LN.PRINT
* MUST BREAK UP TEXT LINE TO FIT ON FORM (60 CHARACTERS MAX)
* SHOULD REALLY MAKE THIS BREAK AT SPACE CHARACTER, MAYBE IN RELEASE 1.0
!
LN.PRINT: *
LN.LEN = LEN(DATA.LN)
GOSUB PAGE.TEST
IF LN.LEN > 70 THEN
   LN = DATA.LN[1,70]
   DATA.LN = DATA.LN[71,LN.LEN]
   FD = FD:CPI.10:ESC:'*p70x':YPOS:'Y':LN"L#70"
   YPOS += YINC
   IF LEN(TRIM(DATA.LN)) > 0 THEN GOTO LN.PRINT
END ELSE
   FD = FD:CPI.10:ESC:'*p70x':YPOS:'Y':DATA.LN"L#70"
   YPOS += YINC
END
RETURN
END
