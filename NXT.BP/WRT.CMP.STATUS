SUBROUTINE WRT.CMP.STATUS(WO_ID,MAT SEQ.ARRAY,GUIERRORS,GUISTATE)
!
**************************************************************************
* This is free and unencumbered software released into the public domain.
*
* Anyone is free to copy, modify, publish, use, compile, sell, or
* distribute this software, either in source code form or as a compiled
* binary, for any purpose, commercial or non-commercial, and by any
* means.
*
* In jurisdictions that recognize copyright laws, the author or authors
* of this software dedicate any and all copyright interest in the
* software to the public domain. We make this dedication for the benefit
* of the public at large and to the detriment of our heirs and
* successors. We intend this dedication to be an overt act of
* relinquishment in perpetuity of all present and future rights to this
* software under copyright law.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
* IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
* OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
* OTHER DEALINGS IN THE SOFTWARE.
*
* For more information, please refer to <https://unlicense.org>
**************************************************************************
*
* MODULE:  WRT.CMP.STATUS
* AUTHOR: MAB
* VERSION: 1.0.0
* CREATED: 12/17/2015
* UPDATED:
*
* MAINTENANCE RECORD:
*
* EQUATE:
*
*
* VARIABLES:
* WO_ID - WORK ORDER ID
* SEQ.ARRAY - 2 DIM ARRAY CONTAINING SEQ DATA IN ROWS SEE NXT.EQUATES FOR LAYOUT
*
* DESIGN DESCRIPTION:
* MARK WORK ORDER SEQs COMPLETE
*
!
** INCLUDE STANDARD VARIABLE, EQUATES
*
$INCLUDE NXT.INCLUDES NXT.COMMON
$INCLUDE NXT.INCLUDES NXT.EQUATES
$INCLUDE NXT.INCLUDES NXT.WO.STATUS.DEF
$INCLUDE NXT.INCLUDES WRT.H
**
PGM.NAME = "WRT.CMP.STATUS"
DIM SEQ.ARRAY(1,1)
MSG_LIST = ''
*
* DETERMINE NUMBER OF ROUTING SEQS
* COUNT ROWS (VIA SEQ.ARRAY DATA)
ROWS = INMAT(SEQ.ARRAY)
SEQ.COUNT = ROWS<1,1>
*
* GET THE SEQ STATUS CODES
*
NS =  WORK.ORDER.SEQ.STATUS.LIST<1,WO.NS.IDX,1>
QU =  WORK.ORDER.SEQ.STATUS.LIST<1,WO.Q.IDX,1>
SU =  WORK.ORDER.SEQ.STATUS.LIST<1,WO.SU.IDX,1>
SC =  WORK.ORDER.SEQ.STATUS.LIST<1,WO.SC.IDX,1>
RN =  WORK.ORDER.SEQ.STATUS.LIST<1,WO.RN.IDX,1>
CMP = WORK.ORDER.SEQ.STATUS.LIST<1,WO.C.IDX,1>
RJT =   WORK.ORDER.SEQ.STATUS.LIST<1,WO.RJ.IDX,1>
*
FOR I = 1 TO SEQ.COUNT
   *
   * GET WR RECORD
   *
   WR_ID = WO_ID:'*':SEQ.ARRAY(I,SQI_ID)
   CALL NXT.LOCKWAITING("WR",C.WR,WR_ID,GUIERRORS,GUISTATE)
   CALL GET.RECORD("WR",C.WR,WR_ID,WR_REC,@FALSE,ERROR_STATUS,MSG_LIST,GUIERRORS,GUISTATE)
   IF ERROR_STATUS = '' THEN
      *
      * UPDATE SEQ STATUS
      *
      IF WR_REC<WR_STATUS> = CMP THEN    ;* ONLY UPDATE IF NOT ALREADY COMPLETE
         NULL
      END ELSE
         *
         WR_REC<WR_STATUS> = CMP
         WR_REC<WR_STAT_DATE> = DATE()
         *
         * WRITE IT OUT
         *
         CALL WRITE.RECORD(WR_ID,WR_REC,C.WR,@FALSE,ERROR_STATUS)
      END
   END ELSE
      ERR_MSG = "Cannot locate WR record: ":WR_ID:" See SysAdmin"
      CALL LOG.ERROR("DISPLAY",PROG_ID, ERR_SYS, ERR_MSG, GUIERRORS, GUISTATE)
   END
   RELEASE C.FILE.VAR(C.WR), WR_ID
NEXT I
*
RETURN
END

