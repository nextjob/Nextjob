SUBROUTINE VEN.SELECT.DIALOG(GUIERRORS,GUISTATE)
**************************************************************************
* This is free and unencumbered software released into the public domain.
*
* Anyone is free to copy, modify, publish, use, compile, sell, or
* distribute this software, either in source code form or as a compiled
* binary, for any purpose, commercial or non-commercial, and by any
* means.
*
* In jurisdictions that recognize copyright laws, the author or authors
* of this software dedicate any and all copyright interest in the
* software to the public domain. We make this dedication for the benefit
* of the public at large and to the detriment of our heirs and
* successors. We intend this dedication to be an overt act of
* relinquishment in perpetuity of all present and future rights to this
* software under copyright law.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
* IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
* OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
* OTHER DEALINGS IN THE SOFTWARE.
*
* For more information, please refer to <https://unlicense.org>
**************************************************************************
*
* MODULE: GUISUB.VEN
* AUTHOR: MAB
* VERSION: 1.0.0
* CREATED: 02/25/2013
* UPDATED:
*
* MAINTENANCE RECORD:
*
* EQUATE:
*
*
* VARIABLES:
*
*
* FILES:
*
*
* DESIGN DESCRIPTION:
* FRONT END TO VEN.DIALOG ROUTINE
*
!
** INCLUDE STANDARD VARIABLE, EQUATES
*
$INCLUDE NXT.INCLUDES NXT.COMMON
$INCLUDE NXT.INCLUDES NXT.EQUATES
$INCLUDE NXT.INCLUDES NXT.ERR.MSGS
$INCLUDE NXT.INCLUDES SYSTEM_FILE.EQU
$INCLUDE NXT.INCLUDES VENDORS.H
$INCLUDE NXT.INCLUDES VSHIP_TO.H
*
*-->BEGIN GUI HEADER<--*
$INCLUDE GUIBP ATGUIEQUATES
*
PROG_ID   = "VEN.SELECT.DIALOG"
GUIERRORS = ''
GUIAPP = "VEN.MAINT"  ;* SEED GUIAPP AND GUIFRM PRIOR TO ACTUAL EVENT WAIT LOOP
GUIFRM = "VEN.MAINT"
*
GUIERRORS = ''
* Open the GUI project file
OPEN 'NXT.FORMS' TO GUI.PROJECT.FILE ELSE
 CALL ATGUIERROR(3,'VEN.SELECT.DIALOG','',0,GRFATAL,"'NXT.FORMS' is not a file name.",GUIERRORS)
 RETURN
END
* Read the GUI template into TEMPLATE
READ TEMPLATE FROM GUI.PROJECT.FILE,'VEN.SELECT.DIALOG' ELSE
 CALL ATGUIERROR(3,'VEN.SELECT.DIALOG','',0,GRFATAL,"'VEN.SELECT.DIALOG' is not on file.",GUIERRORS)
 RETURN
END
* Add your equates and code to open files here...
*
*
************************************************************
*
*
*-->BEGIN GUI HEADER<--*
* If GUISTATE is not NULL, assume GUI has been initialized
IF GUISTATE EQ '' THEN
 CALL ATGUIINIT2(TEMPLATE<2,2>,'',GUIERRORS,GUISTATE)
 IF GUIERRORS<1> >= 3 THEN RETURN
END
* Load the dialog project template
CALL ATGUIRUNMACRO(TEMPLATE,'',GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= 3 THEN RETURN
*-->END GUI HEADER<--*
*
*
************************************************************
*
*
*-->BEGIN GUI STARTUP<--*
ACCEPT = 0 ;* Assume dialog cancelled (update in your OK button Click handler)
* Add your code to load initial values here...
CALL ATGUISHOW('VEN.MAINT','VEN.MAINT','','',GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= 2 THEN RETURN
*-->END GUI STARTUP<--*
*
VEN_ID = ''  ;*INIT SOME VARIABLE
VEN_REC = ''
SHIPTO_ID = ''
SHIPTO_REC = ''
GOSUB LOAD.VEN.NAME.LIST         ;* ADD VENDOR NAMES TO LST1VENNAME
*
************************************************************
*
*
*-->BEGIN EVENT LOOP<--*
GUI.DLG.EXIT = 0
LOOP
 CALL ATGUIWAITEVENT(GUIAPP,GUIFRM,GUICTL,GUIEVT,GUIARGS,GUIERRORS,GUISTATE)
 IF GUIERRORS<1> >= 2 THEN RETURN
 IF GUIEVT EQ GEQUIT THEN
  GUI.DLG.EXIT = 1
 END ELSE
  GUIAPP=OCONV(GUIAPP,'MCU')
  GUIFRM=OCONV(GUIFRM,'MCU')
  GUICTL=OCONV(GUICTL,'MCU')
  GOSUB GUI.DECODE.EVENT
 END
UNTIL GUI.DLG.EXIT DO REPEAT
* Eat final Quit event
IF GUIEVT <> GEQUIT THEN
 GUI.APP.LIST = ''
 CALL ATGUIGETPROP('','','',GPSTATUS,2,0,GUI.APP.LIST,'',GUISTATE)
 IF GUI.APP.LIST EQ '' THEN
  * Quit event fired after last GUI object is deleted - discard it
  CALL ATGUIWAITEVENT('','','','','','',GUISTATE)
  * We could call ATGUISHUTDOWN here if we wanted, but there's no
  * harm just leaving the GUI environment initialized, in case we
  * want to use it again...
 END
END
*-->END EVENT LOOP<--*
*
*
************************************************************
*
*
*-->BEGIN GUI TRAILER<--*
RETURN
*
GUI.DIALOG.RETURN: *
* This subroutine is called just before the GUI Dialog app
* is deleted. Check the state of the ACCEPT variable, and
* retrieve values from GUI controls and assign to appropriate
* arguments for return to calling program here...
IF ACCEPT THEN
 * Add your code here...
END ELSE
 * Add your code here...
END
RETURN 
*-->END GUI TRAILER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT DECODER<--*
GUI.DECODE.EVENT: *
IF NUM(GUIEVT) THEN
 BEGIN CASE
 CASE GUIAPP='VEN.MAINT'
 BEGIN CASE
  CASE GUIFRM='VEN.MAINT'
  BEGIN CASE
   CASE GUICTL=''
   BEGIN CASE
    CASE GUIEVT=GECLOSE
    GOSUB GUI.VEN.MAINT.VEN.MAINT.CLOSE;GUIEVT=0
    END CASE
   CASE GUICTL='BTN1EDITBILL'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.VEN.MAINT.VEN.MAINT.BTN1EDITBILL.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTN1EDITSHIP'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.VEN.MAINT.VEN.MAINT.BTN1EDITSHIP.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTN1NEWBILL'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.VEN.MAINT.VEN.MAINT.BTN1NEWBILL.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTN1NEWSHIP'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.VEN.MAINT.VEN.MAINT.BTN1NEWSHIP.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='LST1SHIPTO'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.VEN.MAINT.VEN.MAINT.LST1SHIPTO.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='LST1VENNAME'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.VEN.MAINT.VEN.MAINT.LST1VENNAME.CLICK;GUIEVT=0
    END CASE
   END CASE
  END CASE
 END CASE
 IF GUIEVT THEN
  * Unhandled event - may be dynamic
  GOSUB GUI.DYNAMIC.EVENTS
 END
END ELSE
 GOSUB GUI.CUSTOM.EVENTS
END
RETURN
*-->END EVENT DECODER<--*
*
*
************************************************************
*
*
*-->BEGIN CLOSE EVENT HANDLER<--*
GUI.VEN.MAINT.VEN.MAINT.CLOSE: *
* Default form close event handler
CALL ATGUIHIDE(GUIAPP,GUIFRM,'','',GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= 2 THEN GOTO GUI.ERROR
CALL ATGUIGETPROP(GUIAPP,'','',GPSTATUS,0,0,NUM.FORMS,GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= 2 THEN GOTO GUI.ERROR
IF NUM.FORMS = 0 THEN
 GOSUB GUI.DIALOG.RETURN
 CALL ATGUIDELETE(GUIAPP,'','',GUIERRORS,GUISTATE)
 IF GUIERRORS<1> >= 3 THEN GOTO GUI.ERROR
 GUI.DLG.EXIT = 1
END
RETURN
*-->END CLOSE EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.MAINT.VEN.MAINT.BTN1EDITBILL.CLICK: *
IF VEN_ID # '' THEN
  EVEN_ID = VEN_ID
  NSHIPTO_ID = ''
  ERROR_STATUS = ''
  CALL VEN.DIALOG(VEN_EDIT,EVEN_ID,NSHIPTO_ID,ERROR_STATUS,GUIERRORS,GUISTATE)
  IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
  GOSUB LOAD.VEN.NAME.LIST
  GOSUB VEN.RELOAD  ;* DISPLAY UPDATES TO CM / SHIPTO RECORD (IF ANY)
END
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.MAINT.VEN.MAINT.BTN1EDITSHIP.CLICK: *
IF VEN_ID # '' AND SHIPTO_ID # '' THEN
  EVEN_ID = VEN_ID
  ESHIPTO_ID = SHIPTO_ID
  ERROR_STATUS = ''
  CALL VEN.DIALOG(VEN_SHIP_EDIT,EVEN_ID,ESHIPTO_ID,ERROR_STATUS,GUIERRORS,GUISTATE)
  IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
  GOSUB VEN.RELOAD  ;* DISPLAY UPDATES TO CM / SHIPTO RECORD (IF ANY)
END
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.MAINT.VEN.MAINT.BTN1NEWBILL.CLICK: *
VEN_ID = ''
SHIPTO_ID = ''
ERROR_STATUS = ''
CALL VEN.DIALOG(VEN_NEW,VEN_ID,SHIPTO_ID,ERROR_STATUS,GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
GOSUB LOAD.VEN.NAME.LIST
GOSUB VEN.RELOAD
*
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.MAINT.VEN.MAINT.BTN1NEWSHIP.CLICK: *
IF VEN_ID # '' THEN
  EVEN_ID = VEN_ID
  NSHIPTO_ID = ''
  ERROR_STATUS = ''
  CALL VEN.DIALOG(VEN_SHIP_NEW,EVEN_ID,NSHIPTO_ID,ERROR_STATUS,GUIERRORS,GUISTATE)
  IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
  CALL LOAD.VEN.SHIPTO.LIST(VEN_ID,SHIPTO.LIST,SHIPTO.IDX,GUIAPP,GUIFRM,"LST1SHIPTO",GUIERRORS,GUISTATE)      ;* LOAD NEW SHIPTO TO DROPDOWN LIST
  IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
END
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.MAINT.VEN.MAINT.LST1VENNAME.CLICK: *
*
IF GUIARGS<1> GT 0 THEN       ;* CLICKED EMPTY LIST TEST
  vEN_ID  = VENDOR.LIST<1,GUIARGS<1>,1>
  IF VEN_ID # '' THEN
    BEGIN CASE
      CASE VEN_ID = "$MORE$"      ;* USER NEEDS TO SEE MORE OF SEARCH LIST
        *        VENDOR.START.LIST = NEXT SELECTED ITEM INDEX TO DISPLAY FROM PRIOR GUI_SEARCH2 CALL
        VENDOR.LIST = ''
        LST.IDS = ''
        EMSG = ''
        CALL GUI.SEARCH2 ("VENDORS","","*","VN_NAME","VN_NAME VN_ADDR VN_CITY",VENDOR.MAX.LIST,VENDOR.START.LIST,VENDOR.LIST,LST.IDS,LIST.CT,EMSG)
        *        REPOPULATE THE LIST BOX
        CTRLIDS = "LST1VENNAME"
        PROPS   = GPITEMS
        VALUES  = VENDOR.LIST
        *
        CTRLIDS<2> = "LST1VENNAME"
        PROPS<2>   = GPVALUE
        VALUES<2>  = ""
        *
        CALL ATGUISETPROPS(GUIAPP,GUIFRM,CTRLIDS,PROPS,VALUES,GUIERRORS,GUISTATE)
        IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
      CASE VEN_ID = "$TOP$"      ;* USER NEEDS TO GO BACK TO THE COP OF SEARCH LIST
        *        VENDOR.START.LIST = NEXT SELECTED ITEM INDEX TO DISPLAY FROM PRIOR GUI_SEARCH2 CALL
        VENDOR.LIST = ''
        LST.IDS = ''
        EMSG = ''
        CALL GUI.SEARCH2 ("VENDORS","","*","VN_NAME","VN_NAME VN_ADDR VN_CITY",VENDOR.MAX.LIST,VENDOR.START.LIST,VENDOR.LIST,LST.IDS,LIST.CT,EMSG)
        *        REPOPULATE THE LIST BOX
        CTRLIDS = "LST1VENNAME"
        PROPS   = GPITEMS
        VALUES  = VENDOR.LIST
        *
        CTRLIDS<2> = "LST1VENNAME"
        PROPS<2>   = GPVALUE
        VALUES<2>  = ""
        *
        CALL ATGUISETPROPS(GUIAPP,GUIFRM,CTRLIDS,PROPS,VALUES,GUIERRORS,GUISTATE)
        IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
      CASE 1                     ;* SHOULD BE A VENDOR ID, GET VENDOR REC
        CALL GET.VENDOR(VEN_ID,VEN_REC,@FALSE,ERROR_STATUS,GUIERRORS,GUISTATE)
        *
        IF ERROR_STATUS = ERR_NOF  THEN  ;* WE SHOULD NOT BE HERE WITH VEN
          LOG.OPTS = "DISPLAY"
          ERROR_NBR = ERR_SYS
          ERROR_MSG = 'Selection of non-existent VENDOR from list'
          CALL LOG.ERROR(LOG.OPTS,"GUISUB.VEN", ERROR_NBR, ERROR_MSG, GUIERRORS, GUISTATE)
        END ELSE
          CALL LOAD.VEN.SHIPTO.LIST(VEN_ID,SHIPTO.LIST,SHIPTO.IDX,GUIAPP,GUIFRM,"LST1SHIPTO",GUIERRORS,GUISTATE)      ;* LOAD SHIP TO LIST BOX
          IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN
            GOSUB GUI.ERROR
          END ELSE
            *
            SHIPTO_ID = VEN_REC<VN_DEFAULT_SHIPTO>
            CALL GET.VSHIPTO(SHIPTO_ID,SHIPTO_REC,@FALSE,ERROR_STATUS,GUIERRORS,GUISTATE)
            *
            IF ERROR_STATUS = ERR_NOF  THEN  ;* WE SHOULD NOT BE HERE WITH DEFAULT SHIP TO
              LOG.OPTS = "DISPLAY"
              ERROR_NBR = ERR_SYS
              ERROR_MSG = VEN_ID:' VENDOR has non-existent default ship to ':SHIPTO_ID
              CALL LOG.ERROR(LOG.OPTS,PROG_ID, ERROR_NBR, ERROR_MSG, GUIERRORS, GUISTATE)
            END ELSE
              GOSUB LOAD.VEN.CTRLS
              GOSUB LOAD.SHIPTO.CTRLS
              IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
            END
          END
        END
    END CASE
  END
END
CNC999: *
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.MAINT.VEN.MAINT.LST1SHIPTO.CLICK: *
*
* user selected new ship to
*
IF GUIARGS<1> GT 0 THEN       ;* CLICKED EMPTY LIST TEST
  SHIPTO_ID  = VEN_ID:'*':SHIPTO.LIST<1,GUIARGS<1>,1>
  IF SHIPTO_ID # '' THEN

    CALL GET.VSHIPTO(SHIPTO_ID,SHIPTO_REC,@FALSE,ERROR_STATUS,GUIERRORS,GUISTATE)
    *
    IF ERROR_STATUS = ERR_NOF  THEN  ;* WE SHOULD NOT BE HERE WITH DEFAULT SHIP TO
      LOG.OPTS = "DISPLAY"
      ERROR_NBR = ERR_SYS
      ERROR_MSG = VEN_ID:'Selection of non-existent VENDOR ship to ':SHIPTO_ID
      CALL LOG.ERROR(LOG.OPTS,"GUISUB.VEN", ERROR_NBR, ERROR_MSG, GUIERRORS, GUISTATE)
    END ELSE
      GOSUB LOAD.SHIPTO.CTRLS
    END

  END
END
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN DYNAMIC EVENTS<--*
GUI.DYNAMIC.EVENTS: *
* Add any dynamic event handling code here. The GUIEVT, GUIAPP, GUIFRM,
* GUICTL and GUIARGS variables are valid and availble for your use.
RETURN
*-->END DYNAMIC EVENTS<--*
*
*
************************************************************
*
**-->BEGIN CUSTOM EVENTS<--*
GUI.CUSTOM.EVENTS: *
* Add any custom event handling code here. The GUIEVT, GUIAPP, GUIFRM,
* GUICTL and GUIARGS variables are valid and availble for your use.
RETURN
*-->END CUSTOM EVENTS<--*
*
*
************************************************************
*
**-->BEGIN ERROR HANDLER<--*
GUI.ERROR: *
GUI.DLG.EXIT = 1
LOG.OPTS  = "DISPLAY"
ERROR_NBR = ERR_GUI
ERROR_MSG =  ERR_MESSAGE(ERR_GUI)
CALL LOG.ERROR(LOG.OPTS,PROG_ID, ERROR_NBR, ERROR_MSG, GUIERRORS, GUISTATE)
RETURN
*-->END ERROR HANDLER<--*
*
*
************************************************************
* $PAGE$
************************************************************
VEN.RELOAD:
*
* CALLED AFTER EDIT OF VENDOR AND OR SHIPTO RECORD TO REDISPLAY CHANGES
* ON OE FORM
* ASSUMES VEN_ID AND SHIPTO_ID SET AND VALID !
*
CALL GET.VENDOR(VEN_ID,VEN_REC,@FALSE,ERROR_STATUS,GUIERRORS,GUISTATE)
*
*IF ERROR_STATUS = ERR_NOF  THEN
  *VEN_ID = ''  ;* SENT A NO EXISTANT CM, CLEAR
  *VEN_REC = ''
  *SHIPTO_ID = ''
  *SHIPTO_REC = ''
*
*END ELSE
*
  *CALL LOAD.VEN.SHIPTO.LIST(VEN_ID,SHIPTO.LIST,SHIPTO.IDX,GUIAPP,GUIFRM,"LST1SHIPTO",GUIERRORS,GUISTATE)      ;* LOAD SHIP TO LIST BOX
  *IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN
    *GOSUB GUI.ERROR
  *END ELSE
    **
    *CALL GET.VSHIPTO(SHIPTO_ID,SHIPTO_REC,@FALSE,ERROR_STATUS,GUIERRORS,GUISTATE)
    **
    *IF ERROR_STATUS = ERR_NOF  THEN  ;* WE SHOULD NOT BE HERE WITH DEFAULT SHIP TO
      *SHIPTO_ID = ''
      *SHIPTO_REC = ''
    *END
  *END
*END
VEN_ID = ''  ;* SENT A NO EXISTANT CM, CLEAR
VEN_REC = ''
SHIPTO_ID = ''
SHIPTO_REC = ''
GOSUB LOAD.VEN.CTRLS
GOSUB LOAD.SHIPTO.CTRLS
CALL ATGUISETPROP(GUIAPP,GUIFRM,"LST1SHIPTO",GPITEMS,0,0,"",GUIERRORS,GUISTATE)
CALL ATGUISETPROP(GUIAPP,GUIFRM,"LST1VENNAME",GPVALUE,0,0,"",GUIERRORS,GUISTATE)
RETURN
************************************************************
* $PAGE$
************************************************************
LOAD.VEN.CTRLS:
*
* routine LOADS controls for VENDOR *
CTRLIDS = ''
PROPS   = ''
VALUES  = ''
*
CTRLIDS<-1> = "LBLVENNAME"
PROPS<-1>   = GPVALUE
VALUES<-1>  = VEN_REC<VN_NAME>
*
CTRLIDS<-1> = "LBL1BILLADDR1VAL"
PROPS<-1>   = GPVALUE
VALUES<-1>  = VEN_REC<VN_ADDR>
*
CTRLIDS<-1> = "LBL1BILLADDR2VAL"
PROPS<-1>   = GPVALUE
VALUES<-1>  = VEN_REC<VN_ADDR2>
*
CTRLIDS<-1> = "LBL1BILLCITYVAL"
PROPS<-1>   = GPVALUE
VALUES<-1>  = VEN_REC<VN_CITY>
*
CTRLIDS<-1> = "LBL1BILLZIPVAL"
PROPS<-1>   = GPVALUE
VALUES<-1>  = VEN_REC<VN_ZIP>
*
CTRLIDS<-1> = "LBL1BILLSTVAL"
PROPS<-1>   = GPVALUE
VALUES<-1>  = VEN_REC<VN_STATE>
*
CTRLIDS<-1> = "LBL1SHIPCOVAL"
PROPS<-1>   = GPVALUE
VALUES<-1>  = VEN_REC<VN_COUNTRY>
*
CALL ATGUISETPROPS(GUIAPP,GUIFRM,CTRLIDS,PROPS,VALUES,GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
**
RETURN
************************************************************
* $PAGE$
************************************************************
LOAD.VEN.NAME.LIST: *
*
* LOADS THE LST1VENNAME LIST
*
VENDOR.MAX.LIST = 300
VENDOR.START.LIST = 1
CALL GUI.SEARCH2 ("VENDORS","","*","VN_NAME","VN_NAME VN_ADDR VN_CITY",VENDOR.MAX.LIST,VENDOR.START.LIST,VENDOR.LIST,LST.IDS,LIST.CT,EMSG)
*
*
IF EMSG<1> = 'No Items Found' THEN  ;* NO ITEMS FOUND
  VALUE = ''
END ELSE
  VALUE = VENDOR.LIST
END
*
CALL ATGUISETPROP(GUIAPP,GUIFRM,"LST1VENNAME",GPITEMS,0,0,VALUE,GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
*
RETURN
************************************************************
* $PAGE$
************************************************************
LOAD.SHIPTO.CTRLS:
*
* routine LOADS AND ENABLES controls for SHIPTO *
CTRLIDS = ''
PROPS   = ''
VALUES  = ''
*
CTRLIDS<-1> = "LBL1SHIPNAMEVAL"
PROPS<-1>   = GPVALUE
VALUES<-1>  = SHIPTO_REC<VS_NAME>
*
CTRLIDS<-1> = "LBL1SHIPADDR1VAL"
PROPS<-1>   = GPVALUE
VALUES<-1>  = SHIPTO_REC<VS_ADDR>
*
CTRLIDS<-1> = "LBL1SHIPADDR2VAL"
PROPS<-1>   = GPVALUE
VALUES<-1>  = SHIPTO_REC<VS_ADDR2>
*
CTRLIDS<-1> = "LBL1SHIPCITYVAL"
PROPS<-1>   = GPVALUE
VALUES<-1>  = SHIPTO_REC<VS_CITY>
*
CTRLIDS<-1> = "LBL1SHIPZIPVAL"
PROPS<-1>   = GPVALUE
VALUES<-1>  = SHIPTO_REC<VS_ZIP>
*
CTRLIDS<-1> = "LBL1SHIPSTVAL"
PROPS<-1>   = GPVALUE
VALUES<-1>  = SHIPTO_REC<VS_STATE>
*
CTRLIDS<-1> = "LBL1SHIPCOVAL"
PROPS<-1>   = GPVALUE
VALUES<-1>  = SHIPTO_REC<VS_COUNTRY>
*
CALL ATGUISETPROPS(GUIAPP,GUIFRM,CTRLIDS,PROPS,VALUES,GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
**
RETURN

END
