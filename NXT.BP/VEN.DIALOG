SUBROUTINE VEN.DIALOG(CALLER_ACTION,VEN_ID,SHIPTO_ID,ERROR_STATUS,GUIERRORS,GUISTATE)
!
**************************************************************************
* This is free and unencumbered software released into the public domain.
*
* Anyone is free to copy, modify, publish, use, compile, sell, or
* distribute this software, either in source code form or as a compiled
* binary, for any purpose, commercial or non-commercial, and by any
* means.
*
* In jurisdictions that recognize copyright laws, the author or authors
* of this software dedicate any and all copyright interest in the
* software to the public domain. We make this dedication for the benefit
* of the public at large and to the detriment of our heirs and
* successors. We intend this dedication to be an overt act of
* relinquishment in perpetuity of all present and future rights to this
* software under copyright law.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
* IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
* OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
* OTHER DEALINGS IN THE SOFTWARE.
*
* For more information, please refer to <https://unlicense.org>
**************************************************************************
*
* MODULE: VEN.DIALOG
* AUTHOR: MAB
* VERSION: 1.0.0
* CREATED: 02/25/2013
* UPDATED:
*
* MAINTENANCE RECORD:
*
* EQUATE:
*
*
* VARIABLES:
* CALLER_ACTION - SET BY CALLER
* VEN_EDIT  - EDIT VENDOR RECORD VEN_ID
* VEN_NEW   - ADD NEW Vendor, ON EXIT VEN_ID IS NEW VENDOR ID
* VEN_SHIP_EDIT  - EDIT Vendor SHIP TO RECORD VEN_ID, SHIPTO_ID
* VEN_SHIP_NEW   - ADD NEW SHIP TO FOR VEN_ID, ON EXIT SHIPTO_ID NEW SHIP TO RECORD ID
*
* ERROR_STATUS - RETURNED ERROR STATUS NUMBER OR NULL
*
* FILES:
*
*
* DESIGN DESCRIPTION:
*
!
** INCLUDE STANDARD VARIABLE, EQUATES
*
$INCLUDE NXT.INCLUDES NXT.COMMON
$INCLUDE NXT.INCLUDES NXT.EQUATES
$INCLUDE NXT.INCLUDES NXT.ERR.MSGS
$INCLUDE NXT.INCLUDES VENDORS.H
$INCLUDE NXT.INCLUDES VSHIP_TO.H
*
$INCLUDE GUIBP ATGUIEQUATES
*
PROG_ID   = "VEN.DIALOG"
GUIERRORS = ''
GUIAPP = "VEN"  ;* SEED GUIAPP AND GUIFRM PRIOR TO ACTUAL EVENT WAIT LOOP
GUIFRM = "VEN"
*
* Open the GUI project file
OPEN 'NXT.FORMS' TO GUI.PROJECT.FILE ELSE
   CALL ATGUIERROR(3,'VEN','',0,GRFATAL,"'NXT.FORMS' is not a file name.",GUIERRORS)
   RETURN
END
* Read the GUI template into TEMPLATE
READ TEMPLATE FROM GUI.PROJECT.FILE,'VEN' ELSE
   CALL ATGUIERROR(3,'VEN','',0,GRFATAL,"'VEN' is not on file.",GUIERRORS)
   RETURN
END
* Add your equates and code to open files here...
*
*
************************************************************
*
*
*-->BEGIN GUI HEADER<--*
* If GUISTATE is not NULL, assume GUI has been initialized
IF GUISTATE EQ '' THEN
   CALL ATGUIINIT2(TEMPLATE<2,2>,'',GUIERRORS,GUISTATE)
   IF GUIERRORS<1> >= 3 THEN RETURN
END
* Load the dialog project template
CALL ATGUIRUNMACRO(TEMPLATE,'',GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= 3 THEN RETURN
*-->END GUI HEADER<--*
*
*
************************************************************
*
*
*-->BEGIN GUI STARTUP<--*
ACCEPT = 0 ;* Assume dialog cancelled (update in your OK button Click handler)
* code to load initial values here...
*
* CALLER_ACTION - DEFINES HOW WE START UP
* VEN_EDIT  - EDIT VENDOR RECORD VEN_ID
* VEN_NEW   - ADD NEW Vendor, ON EXIT VEN_ID IS NEW VENDOR ID
* VEN_SHIP_EDIT  - EDIT Vendor SHIP TO RECORD VEN_ID, SHIPTO_ID
* VEN_SHIP_NEW   - ADD NEW SHIP TO FOR VEN_ID, ON EXIT SHIPTO_ID NEW SHIP TO RECORD ID
*
ERROR_STATUS = ''     ;* SETUP ERRORS TO NONE
ERROR_MSG    = ''
VEN_REC = ''           ;* VENDOR RECORD
SHIPTO_REC = ''       ;* SHIP TO RECORD
SAVE_VEN_REC = ""      ;* WE USE SAVE_CM TO SEE IF ANYTHING HAS CHANGED
SAVE_SHIPTO_REC = ''  ;* SAME FOR SHIP_TO RECORD
DEFAULT_CREATED = @TRUE  ;* FLAG TO CREATE DEFAULT SHIPTO ON NEW Vendor CREATION
*
* CREATE LISTS FOR  DROP DOWN CONTROLS
*
TERMS.LIST  = ''  ;* LIST FOR PAYMENT TERMS SELECTION
TERMS.IDX   = ''
STATES.LIST = ''  ;* LIST FOR STATE SELECTION
STATES.IDX  = ''
STATUS.LIST = ''  ;* LIST FOR VENDOR STATUS SELECTION
STATUS.IDX  = ''
CALL LIST.LOAD(C.VALIDATION_FILE,"STATES","2",'',STATES.LIST,STATES.IDX,LIST.COUNT,EMSG)
CALL LIST.LOAD(C.VALIDATION_FILE,"TERMS","2",'',TERMS.LIST,TERMS.IDX,LIST.COUNT,EMSG)
CALL LIST.LOAD(C.VALIDATION_FILE,"VN.STATUS","2",'',STATUS.LIST,STATUS.IDX,LIST.COUNT,EMSG)
GOSUB LOAD.VEN.LISTS   ;* LOAD CONTROLS WITH THIS INFO
*
BEGIN CASE
   CASE CALLER_ACTION = VEN_EDIT
      GOSUB GET.VEN.REC
      SAVE_VEN_REC = VEN_REC              ;* WE USE SAVE_CM TO SEE IF ANYTHING HAS CHANGED
      IF ERROR_STATUS = ERR_NOF THEN    ;* WE SHOULD NOT BE HERE WITH CUST NOF, CLEAN UP AND LEAVE
         RELEASE C.FILE.VAR(C.VendorS), VEN_ID
         ERROR_MSG = "EDIT OF NON EXISTANT VENDOR: ":VEN_ID
         ERROR_STATUS = ERR_SYS
         GOTO STARTUP.999
      END ELSE
         ERROR_STATUS = ''
      END
*
      GOSUB LOAD.VEN.CTRLS         ;* LOAD CM CONTROLS
*
      IF VEN.EDIT.MODE = "EDIT" THEN    ;* Vendor RECORD LOCKED, OK TO EDIT
         GOSUB ENABLE.VEN.CTRLS      ;*   ENABLE THE CONTROLS AND WAIT FOR NEXT EVENT
      END ELSE                      ;*   ELSE VENDOR WAS BUSY, NO EDIT ALLOWED
         CAPTION = 'Vendor Maitenance - VIEW Mode'
         CALL ATGUISETPROP(GUIAPP,GUIFRM,"",GPCAPTION,0,0,CAPTION,GUIERRORS,GUISTATE)
      END
*
   CASE CALLER_ACTION = VEN_NEW
      CALL  NXT.NEXTNBR("VENDORS",VEN_NUMBER,ERROR_STATUS,GUIERRORS,GUISTATE)  ;* ASSIGN A NEW CUST NUMBER AND DISPLAY, THATS ALL
      CALL ATGUISETPROP(GUIAPP,GUIFRM,"LBLCUSTIDVAL",GPVALUE,0,0,VEN_NUMBER,GUIERRORS,GUISTATE) ;* DISPLAY CUST NUMBER
      IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR; GOTO STARTUP.999
*
      VEN_ID  = VEN_NUMBER      ;* SET VENDOR ID (NEW Vendor NUMBER)
      CALL  NXT.NEXTNBR("VSHIP_TO*":VEN_ID,SHIPTO_NUMBER,ERROR_STATUS,GUIERRORS,GUISTATE)
*
      DEFAULT_CREATED = @FALSE ;* FLAG CREATION OF DEFAULT
      GOSUB ENABLE.VEN.CTRLS   ;* ENABLE THE CONTROLS AND WAIT FOR NEXT EVENT
      GOSUB ENABLE.SHIPTO.CTRLS
      VEN_REC = ''             ;* INITIALIZE NEW VENDOR RECORD
      SHIPTO_REC = ''
      SHIPTO_ID = VEN_ID:'*':SHIPTO_NUMBER  ;* SET DEFAULT SHIPTO ID
*
   CASE CALLER_ACTION = VEN_SHIP_EDIT
      GOSUB GET.VEN.REC
      IF ERROR_STATUS = ERR_NOF THEN    ;* WE SHOULD NOT BE HERE WITH CUST NOF, CLEAN UP AND LEAVE
         RELEASE C.FILE.VAR(C.VendorS), VEN_ID
         ERROR_MSG = "EDIT OF NON EXISTANT VENDOR: ":VEN_ID
         ERROR_STATUS = ERR_SYS
         GOTO STARTUP.999
      END ELSE
         ERROR_STATUS = ''
      END
*
      GOSUB LOAD.VEN.CTRLS         ;* LOAD CM CONTROLS
*
* ACCESS AND LOAD SHIP TO RECORD
* ENABLE SHIP TO CONTROLS
*
      GOSUB GET.SHIPTO.REC
      SAVE_SHIPTO_REC = SHIPTO_REC      ;* WE USE SAVE_SHIPTO TO SEE IF ANYTHING HAS CHANGED
      IF ERROR_STATUS = ERR_NOF THEN    ;* WE SHOULD NOT BE HERE WITH SHIPTO NOF, CLEAN UP AND LEAVE
         RELEASE C.FILE.VAR(C.VENDORS), VEN_ID
         RELEASE C.FILE.VAR(C.VSHIP_TO), SHIPTO_ID
         ERROR_MSG = "EDIT OF NON EXISTANT VENDOR SHIPTO: ":SHIPTO_ID
         ERROR_STATUS = ERR_SYS
         GOTO STARTUP.999
      END ELSE
         ERROR_STATUS = ''
      END
      GOSUB LOAD.SHIPTO.CTRLS
*
* IF LOCK OF SHIPTO SUCCESSFUL, ENABLE CONTROLS
* OTHERWISE UNLOCK Vendor REC AND OPEN IN VIEW MODE ONLY
*
      IF SHIPTO.EDIT.MODE # "EDIT" THEN
         RELEASE C.FILE.VAR(C.VENDORS), VEN_ID
         VEN.EDIT.MODE = "VIEW"
      END
*
      IF VEN.EDIT.MODE = "EDIT" THEN    ;* Vendor RECORD LOCKED, OK TO EDIT
         GOSUB ENABLE.SHIPTO.CTRLS     ;* enable ship to edit
      END ELSE                      ;*   ELSE VENDOR WAS BUSY, NO EDIT ALLOWED
         CAPTION = 'Vendor Maitenance - VIEW Mode'
         CALL ATGUISETPROP(GUIAPP,GUIFRM,"",GPCAPTION,0,0,CAPTION,GUIERRORS,GUISTATE)
      END
*
   CASE CALLER_ACTION = VEN_SHIP_NEW
*
      GOSUB GET.VEN.REC
      SAVE_VEN_REC = VEN_REC              ;* WE USE SAVE_CM TO SEE IF ANYTHING HAS CHANGED
      IF ERROR_STATUS = ERR_NOF THEN    ;* WE SHOULD NOT BE HERE WITH CUST NOF, CLEAN UP AND LEAVE
         RELEASE C.FILE.VAR(C.VENDORS), VEN_ID
         ERROR_MSG = "Ship to ADD OF NON EXISTANT VENDOR: ":VEN_ID
         ERROR_STATUS = ERR_SYS
         GOTO STARTUP.999
      END ELSE
         ERROR_STATUS = ''
      END
*
      CALL  NXT.NEXTNBR("VSHIP_TO*":VEN_ID,SHIPTO_NUMBER,ERROR_STATUS,GUIERRORS,GUISTATE)
      SHIPTO_REC = ''
      SHIPTO_ID = VEN_ID:'*':SHIPTO_NUMBER
      GOSUB LOAD.VEN.CTRLS         ;* LOAD CM CONTROLS
      GOSUB ENABLE.SHIPTO.CTRLS
*
END CASE
*
*
CALL ATGUISHOW('VEN','VEN','','',GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= 2 THEN RETURN
*-->END GUI STARTUP<--*
*
STARTUP.999: *
*
* CATCH NON GUI SYSTEM ERRORS
* IE ANY NEXTJOB ERRORS OCCURRED, LOG AND EXIT
*
IF ERROR_STATUS # '' THEN
   LOG.OPTS = "DISPLAY"
   ERROR_NBR = ERROR_STATUS
   IF ERROR_MSG = '' THEN ERROR_MSG = ERR_MESSAGE(ERR_SYS)
   CALL LOG.ERROR(LOG.OPTS,"VEN.DIALOG", ERROR_NBR, ERROR_MSG, GUIERRORS, GUISTATE)
   GOSUB GUI.VEN.VEN.CLOSE
   RETURN
END
************************************************************
*
*
*-->BEGIN EVENT LOOP<--*
GUI.DLG.EXIT = 0
LOOP
   CALL ATGUIWAITEVENT(GUIAPP,GUIFRM,GUICTL,GUIEVT,GUIARGS,GUIERRORS,GUISTATE)
   IF GUIERRORS<1> >= 2 THEN RETURN
   IF GUIEVT EQ GEQUIT THEN
      GUI.DLG.EXIT = 1
   END ELSE
      GUIAPP=OCONV(GUIAPP,'MCU')
      GUIFRM=OCONV(GUIFRM,'MCU')
      GUICTL=OCONV(GUICTL,'MCU')
      GOSUB GUI.DECODE.EVENT
   END
UNTIL GUI.DLG.EXIT DO REPEAT
* Eat final Quit event
IF GUIEVT <> GEQUIT THEN
   GUI.APP.LIST = ''
   CALL ATGUIGETPROP('','','',GPSTATUS,2,0,GUI.APP.LIST,'',GUISTATE)
   IF GUI.APP.LIST EQ '' THEN
* Quit event fired after last GUI object is deleted - discard it
      CALL ATGUIWAITEVENT('','','','','','',GUISTATE)
* We could call ATGUISHUTDOWN here if we wanted, but there's no
* harm just leaving the GUI environment initialized, in case we
* want to use it again...
   END
END
*-->END EVENT LOOP<--*
*
*
************************************************************
*
*
*-->BEGIN GUI TRAILER<--*
RETURN
*
GUI.DIALOG.RETURN: *
* This subroutine is called just before the GUI Dialog app
* is deleted. Check the state of the ACCEPT variable, and
* retrieve values from GUI controls and assign to appropriate
* arguments for return to calling program here...
*IF ACCEPT THEN
*    Add your code here...
*END ELSE
*    Add your code here...
*END
*
RETURN
*-->END GUI TRAILER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT DECODER<--*
GUI.DECODE.EVENT: *
IF NUM(GUIEVT) THEN
   BEGIN CASE
      CASE GUIAPP='VEN'
         BEGIN CASE
            CASE GUIFRM='VEN'
               BEGIN CASE
                  CASE GUICTL=''
                     BEGIN CASE
                        CASE GUIEVT=GECLOSE
                           GOSUB GUI.VEN.VEN.CLOSE;GUIEVT=0
                     END CASE
                  CASE GUICTL='BTNCANCEL'
                     BEGIN CASE
                        CASE GUIEVT=GECLICK
                           GOSUB GUI.VEN.VEN.BTNCANCEL.CLICK;GUIEVT=0
                     END CASE
                  CASE GUICTL='BTNDEFAULT'
                     BEGIN CASE
                        CASE GUIEVT=GECLICK
                           GOSUB GUI.VEN.VEN.BTNDEFAULT.CLICK;GUIEVT=0
                     END CASE
                  CASE GUICTL='BTNDELETE'
                     BEGIN CASE
                        CASE GUIEVT=GECLICK
                           GOSUB GUI.VEN.VEN.BTNDELETE.CLICK;GUIEVT=0
                     END CASE
                  CASE GUICTL='BTNDELSHIP'
                     BEGIN CASE
                        CASE GUIEVT=GECLICK
                           GOSUB GUI.VEN.VEN.BTNDELSHIP.CLICK;GUIEVT=0
                     END CASE
                  CASE GUICTL='BTNFILE'
                     BEGIN CASE
                        CASE GUIEVT=GECLICK
                           GOSUB GUI.VEN.VEN.BTNFILE.CLICK;GUIEVT=0
                     END CASE
                  CASE GUICTL='CHKDEFAULT'
                     BEGIN CASE
                        CASE GUIEVT=GECLICK
                           GOSUB GUI.VEN.VEN.CHKDEFAULT.CLICK;GUIEVT=0
                     END CASE
                  CASE GUICTL='GRDCONTACT'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATEROW
                           GOSUB GUI.VEN.VEN.GRDCONTACT.VALIDATEROW;GUIEVT=0
                     END CASE
                  CASE GUICTL='LST1BILLST'
                     BEGIN CASE
                        CASE GUIEVT=GECLICK
                           GOSUB GUI.VEN.VEN.LST1BILLST.CLICK;GUIEVT=0
                     END CASE
                  CASE GUICTL='LST1SHIPST'
                     BEGIN CASE
                        CASE GUIEVT=GECLICK
                           GOSUB GUI.VEN.VEN.LST1SHIPST.CLICK;GUIEVT=0
                     END CASE
                  CASE GUICTL='LST1TERMS'
                     BEGIN CASE
                        CASE GUIEVT=GECLICK
                           GOSUB GUI.VEN.VEN.LST1TERMS.CLICK;GUIEVT=0
                     END CASE
                  CASE GUICTL='LSTSTATUS'
                     BEGIN CASE
                        CASE GUIEVT=GECLICK
                           GOSUB GUI.VEN.VEN.LSTSTATUS.CLICK;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXT1ARLIMIT'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXT1ARLIMIT.VALIDATE;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXT1BILLADDR1'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXT1BILLADDR1.VALIDATE;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXT1BILLADDR2'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXT1BILLADDR2.VALIDATE;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXT1BILLCITY'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXT1BILLCITY.VALIDATE;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXT1BILLNAME'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXT1BILLNAME.VALIDATE;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXT1BILLZIP'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXT1BILLZIP.VALIDATE;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXT1COUNTRY'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXT1COUNTRY.VALIDATE;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXT1FAX'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXT1FAX.VALIDATE;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXT1PHONE'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXT1PHONE.VALIDATE;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXT1SHIPADDR1'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXT1SHIPADDR1.VALIDATE;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXT1SHIPADDR2'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXT1SHIPADDR2.VALIDATE;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXT1SHIPCITY'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXT1SHIPCITY.VALIDATE;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXT1SHIPCOUNTRY'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXT1SHIPCOUNTRY.VALIDATE;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXT1SHIPDAYS'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXT1SHIPDAYS.VALIDATE;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXT1SHIPFAX'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXT1SHIPFAX.VALIDATE;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXT1SHIPNAME'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXT1SHIPNAME.VALIDATE;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXT1SHIPPHONE'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXT1SHIPPHONE.VALIDATE;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXT1SHIPZIP'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXT1SHIPZIP.VALIDATE;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXTQBREF'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXTQBREF.VALIDATE;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXTREP'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXTREP.VALIDATE;GUIEVT=0
                     END CASE
                  CASE GUICTL='TXTWEB'
                     BEGIN CASE
                        CASE GUIEVT=GEVALIDATE
                           GOSUB GUI.VEN.VEN.TXTWEB.VALIDATE;GUIEVT=0
                     END CASE
               END CASE
         END CASE
   END CASE
   IF GUIEVT THEN
* Unhandled event - may be dynamic
      GOSUB GUI.DYNAMIC.EVENTS
   END
END ELSE
   GOSUB GUI.CUSTOM.EVENTS
END
RETURN
*-->END EVENT DECODER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.BTNDEFAULT.CLICK: *
GOSUB CREATE.DEFAULT.SHIPTO
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.CHKDEFAULT.CLICK: *
VEN_REC<VN_DEFAULT_SHIPTO> = SHIPTO_ID
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN CLOSE EVENT HANDLER<--*
GUI.VEN.VEN.CLOSE: *
* Default form close event handler
CALL ATGUIHIDE(GUIAPP,GUIFRM,'','',GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= 2 THEN GOTO GUI.ERROR
CALL ATGUIGETPROP(GUIAPP,'','',GPSTATUS,0,0,NUM.FORMS,GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= 2 THEN GOTO GUI.ERROR
IF NUM.FORMS = 0 THEN
   GOSUB GUI.DIALOG.RETURN
   CALL ATGUIDELETE(GUIAPP,'','',GUIERRORS,GUISTATE)
   IF GUIERRORS<1> >= 3 THEN GOTO GUI.ERROR
   GUI.DLG.EXIT = 1
END
RELEASE C.FILE.VAR(C.VENDORS), VEN_ID
IF SHIPTO_ID # '' THEN RELEASE C.FILE.VAR(C.VENDORS), SHIPTO_ID
RETURN
*-->END CLOSE EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.BTNCANCEL.CLICK: *
IF CALLER_ACTION = VEN_NEW OR CALLER_ACTION = VEN_EDIT THEN
   GOSUB SAVE.CHECK
END ELSE
* ASSUME VEN_SHIP_NEW OR VEN_SHIP_EDIT
   GOSUB SHIP.CHECK
END
*
IF SAVE.CHECK.OK THEN
   GOSUB GUI.VEN.VEN.CLOSE;GUIEVT=0
END
RETURN
*-->END EVENT HANDLER<--*
*
**************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.BTNDELSHIP.CLICK: *
*
* TEST FOR ORDER RECORDS WITH THIS SHIP TO
SLIST = 'SSELECT PO_PARENT WITH PP_SHIPTO = "':SHIPTO_ID:'"'
EXECUTE SLIST CAPTURING DMMY.OUT
IF @SELECTED GE 1 THEN
   EMSG = "ORDER record(s) on file for vendor ship to, ship to NOT deleted"
   GOTO DSC900
END
*
* TEST FOR SALES RECORDS WITH THIS SHIP TO
SLIST = 'SSELECT RECEIVER WITH RC_SHIP_TO = "':SHIPTO_ID:'"'
EXECUTE SLIST CAPTURING DMMY.OUT
IF @SELECTED GE 1 THEN
   EMSG = "RECEIVER record(s) on file for VENDOR ship to, ship to NOT deleted"
   GOTO DSC900
END
*
DSC900:
IF EMSG # '' THEN
   PRMPT = EMSG
   CAPTION = "Vendor Maintenance"
   STYLE   = 4  ;* i
   BUTTONS = 0  ;* ok
   HELPID = ""
   CALL NXT.ERR.MSG(PRMPT, CAPTION, STYLE, BUTTONS, HELPID, RESPONSE, GUIERRORS,GUISTATE)
END ELSE
   DELETE C.FILE.VAR(C.VSHIP_TO), SHIPTO_ID
   RELEASE C.FILE.VAR(C.VSHIP_TO), SHIPTO_ID
   SHIPTO_ID = ''
   SHIPTO_REC = ''
   SAVE_SHIPTO_REC = ''
   GOSUB LOAD.SHIPTO.CTRLS
   PRMPT = "Vendor ship to record has been deleted"
   CAPTION = "Vendor Maintenance"
   STYLE   = 4  ;* i
   BUTTONS = 0  ;* ok
   HELPID = ""
   CALL NXT.ERR.MSG(PRMPT, CAPTION, STYLE, BUTTONS, HELPID, RESPONSE, GUIERRORS,GUISTATE)
   GOSUB GUI.VEN.VEN.CLOSE;GUIEVT=0
END
*
RETURN
*-->END EVENT HANDLER<--*
*
*
*************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.BTNDELETE.CLICK: *
*
* delete vendor selected
EMSG = ''
*
* TEST FOR ORDER RECORDS WITH THIS VENDOR
SLIST = 'SSELECT PO_PARENT WITH PP_CUST = "':VEN_ID:'"'
EXECUTE SLIST CAPTURING DMMY.OUT
IF @SELECTED GE 1 THEN
   EMSG = "PO record(s) on file for vendor, vendor NOT deleted"
   GOTO DCC900
END
*
* TEST FOR AR RECORDS WITH THIS VENDOR
SLIST = 'SSELECT AP WITH AP_VEN_ID = "':VEN_ID:'"'
EXECUTE SLIST CAPTURING DMMY.OUT
IF @SELECTED GE 1 THEN
   EMSG = "AP record(s) on file for vendor, vendor NOT deleted"
   GOTO DCC900
END
*
* TEST FOR SALES RECORDS WITH THIS VENDOR
SLIST = 'SSELECT RECEIVER WITH RC_VEN_ID = "':VEN_ID:'"'
EXECUTE SLIST CAPTURING DMMY.OUT
IF @SELECTED GE 1 THEN
   EMSG = "RECEIVER record(s) on file for vendor, vendor NOT deleted"
   GOTO DCC900
END
*
* TEST FOR SHIPTO RECORDS WITH THIS vendor
SLIST = 'SSELECT VSHIP_TO WITH VS_VEN_ID = "':VEN_ID:'"'
EXECUTE SLIST CAPTURING DMMY.OUT
IF @SELECTED GE 1 THEN
   EMSG = "VShip_to record(s) on file for vendor, vendor NOT deleted"
   GOTO DCC900
END
*
DCC900:
IF EMSG # '' THEN
   PRMPT = EMSG
   CAPTION = "Vendor Maintenance"
   STYLE   = 4  ;* i
   BUTTONS = 0  ;* ok
   HELPID = ""
   CALL NXT.ERR.MSG(PRMPT, CAPTION, STYLE, BUTTONS, HELPID, RESPONSE, GUIERRORS,GUISTATE)
END ELSE
   DELETE C.FILE.VAR(C.VENDORS), VEN_ID
   RELEASE C.FILE.VAR(C.VENDORS), VEN_ID
   VEN_ID = ''
   VEN_REC = ''
   SAVE_VEN_REC = ''
   GOSUB LOAD.VEN.CTRLS
   PRMPT = "Vendor record: ":VEN_ID:" has been deleted"
   CAPTION = "Vendor Maintenance"
   STYLE   = 4  ;* i
   BUTTONS = 0  ;* ok
   HELPID = ""
   CALL NXT.ERR.MSG(PRMPT, CAPTION, STYLE, BUTTONS, HELPID, RESPONSE, GUIERRORS,GUISTATE)
   GOSUB GUI.VEN.VEN.CLOSE;GUIEVT=0
END
*
RETURN
*-->END EVENT HANDLER<--*
*
*
**************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.BTNFILE.CLICK: *
*
* IF CM RECORD LOOKS GOOD SAVE IT
* IF SHIP TO RECORD IS PRESENT, SAVE IT ALSO
*
GOSUB VEN.SHIPTO.VALIDATE
IF VEN.SHIPTO.VALID THEN
*
* VEN_REC NEEDS UPDATING?
   IF SAVE_VEN_REC # VEN_REC THEN
      CALL WRITE.RECORD(VEN_ID,VEN_REC,C.VENDORS,@TRUE,ERROR_STATUS)
      SAVE_VEN_REC = VEN_REC
   END
*
* SHIPTO NEEDS UPDATING?
   IF CALLER_ACTION = VEN_NEW OR CALLER_ACTION = VEN_SHIP_NEW OR CALLER_ACTION = VEN_SHIP_EDIT THEN
      IF SAVE_SHIPTO_REC # SHIPTO_REC THEN
         CALL WRITE.RECORD(SHIPTO_ID,SHIPTO_REC,C.VSHIP_TO,@TRUE,ERROR_STATUS)
         SAVE_SHIPTO_REC = SHIPTO_REC

*
* IF THIS WAS A DEFAULT SHIPTO CREATION, RESET FLAG AND HIDE DEFAULT BUTTON
*         IF CALLER_ACTION = VEN_NEW AND NOT(DEFAULT_CREATED) THEN
*            DEFAULT_CREATED = @TRUE
*            CTRLIDS = "BTNDEFAULT"
*            PROPS   = GPENABLED
*            VALUES  = 0
*
*            CTRLIDS<-1> = "BTNDEFAULT"
*            PROPS<-1>   = GPVISIBLE
*            VALUES<-1>  = 0
*
*            CALL ATGUISETPROPS(GUIAPP,GUIFRM,CTRLIDS,PROPS,VALUES,GUIERRORS,GUISTATE)
*        END
      END
   END
   GOSUB GUI.VEN.VEN.CLOSE;GUIEVT=0
END

RETURN
*-->END EVENT HANDLER<--*
*
*
**************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.GRDCONTACT.VALIDATEROW: *
GRD.ROW = GUIARGS<1,1>
ROW.DAT = GUIARGS<2>
VEN_REC<VN_CONTACT,GRD.ROW> = ROW.DAT<1,1,1>
VEN_REC<VN_CONTACT_PHONE,GRD.ROW> = ROW.DAT<1,1,2>
VEN_REC<VN_EMAIL,GRD.ROW> = ROW.DAT<1,1,3>
VEN_REC<VN_CONTACT_FAX,GRD.ROW> = ROW.DAT<1,1,4>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.LST1BILLST.CLICK: *
VEN_REC<VN_STATE> =  STATES.LIST<1,GUIARGS<1>,1>
RETURN
*-->END EVENT HANDLER<--*
*
*
**************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.LST1SHIPST.CLICK: *
SHIPTO_REC<VS_STATE> = STATES.LIST<1,GUIARGS<1>,1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.LST1TERMS.CLICK: *
VEN_REC<VN_TERMS> =  TERMS.LIST<1,GUIARGS<1>,1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.LSTSTATUS.CLICK: *
VEN_REC<VN_STATUS> = STATUS.LIST<1,GUIARGS<1>,1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXT1ARLIMIT.VALIDATE: *
VEN_REC<VN_AP_LIMIT> =  ICONV(GUIARGS<2>,VN_AP_LIMIT.CNV)
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXT1BILLADDR1.VALIDATE: *
VEN_REC<VN_ADDR> =  GUIARGS<2>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXT1BILLADDR2.VALIDATE: *
VEN_REC<VN_ADDR2> =  GUIARGS<2>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXT1BILLCITY.VALIDATE: *
VEN_REC<VN_CITY> =  GUIARGS<2>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXT1BILLNAME.VALIDATE: *
VEN_REC<VN_NAME> =  GUIARGS<2>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXT1BILLZIP.VALIDATE: *
VEN_REC<VN_ZIP> =  GUIARGS<2>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXT1COUNTRY.VALIDATE: *
VEN_REC<VN_COUNTRY> =  GUIARGS<2>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXT1FAX.VALIDATE: *
VEN_REC<VN_FAX> =  GUIARGS<2>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXT1PHONE.VALIDATE: *
VEN_REC<VN_PHONE> =  GUIARGS<2>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXT1SHIPADDR1.VALIDATE: *
SHIPTO_REC<VS_ADDR> =  GUIARGS<2>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXT1SHIPADDR2.VALIDATE: *
SHIPTO_REC<VS_ADDR2> =  GUIARGS<2>
RETURN
*-->END EVENT HANDLER<--*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXT1SHIPDAYS.VALIDATE:
SHIPTO_REC<VS_SHIP_DAYS> =  GUIARGS<2>
RETURN
*-->END EVENT HANDLER<--*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXT1SHIPCITY.VALIDATE: *
SHIPTO_REC<VS_CITY> =  GUIARGS<2>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXT1SHIPCOUNTRY.VALIDATE: *
SHIPTO_REC<VS_COUNTRY> =  GUIARGS<2>
RETURN
*-->END EVENT HANDLER<--*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXT1SHIPFAX.VALIDATE: *
SHIPTO_REC<VS_FAX> =  GUIARGS<2>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXT1SHIPNAME.VALIDATE: *
SHIPTO_REC<VS_NAME> =  GUIARGS<2>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXT1SHIPPHONE.VALIDATE: *
SHIPTO_REC<VS_PHONE> =  GUIARGS<2>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXT1SHIPZIP.VALIDATE: *
SHIPTO_REC<VS_ZIP> =  GUIARGS<2>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXTQBREF.VALIDATE: *
IF NX_QB_ACCOUNTING THEN
   PRMPT = "Caution: Change Quick Books Ref Id with care. Incorrect ID will result in Quick Books Invoice creation to fail!":@SVM:'Proceeded with edit?'
   CAPTION = "Vendor Maintenance"
   STYLE   = 4  ;* i
   BUTTONS = 3  ;* ok
   HELPID = ""
   CALL NXT.ERR.MSG(PRMPT, CAPTION, STYLE, BUTTONS, HELPID, RESPONSE, GUIERRORS,GUISTATE)
   IF RESPONSE = 6 THEN
      VEN_REC<VN_QB_REFID> =  GUIARGS<2>
   END
   CALL ATGUISETPROP(GUIAPP,GUIFRM,"TXTQBREF",GPVALUE,0,0,VEN_REC<VN_QB_REFID>,GUIERRORS,GUISTATE)
   RETURN
END
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXTREP.VALIDATE: *
VEN_REC<VN_REP> =  GUIARGS<2>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*-->BEGIN EVENT HANDLER<--*
GUI.VEN.VEN.TXTWEB.VALIDATE: *
VEN_REC<VN_WEB> =  GUIARGS<2>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN DYNAMIC EVENTS<--*
GUI.DYNAMIC.EVENTS: *
* Add any dynamic event handling code here. The GUIEVT, GUIAPP, GUIFRM,
* GUICTL and GUIARGS variables are valid and availble for your use.
RETURN
*-->END DYNAMIC EVENTS<--*
*
*
************************************************************
*
**-->BEGIN CUSTOM EVENTS<--*
GUI.CUSTOM.EVENTS: *
* Add any custom event handling code here. The GUIEVT, GUIAPP, GUIFRM,
* GUICTL and GUIARGS variables are valid and availble for your use.
RETURN
*-->END CUSTOM EVENTS<--*
*
*
************************************************************
*
**-->BEGIN ERROR HANDLER<--*
GUI.ERROR: *
GUI.DLG.EXIT = 1
LOG.OPTS = "DISPLAY"
ERROR_NBR = ERR_GUI
ERROR_MSG =  ERR_MESSAGE(ERR_GUI)
CALL LOG.ERROR(LOG.OPTS,"VEN.DIALOG", ERROR_NBR, ERROR_MSG, GUIERRORS, GUISTATE)
RETURN
*-->END ERROR HANDLER<--*
************************************************************
* $PAGE$
************************************************************
VEN.SHIPTO.VALIDATE: *
*
* VALIDATE THE CM RECORD
* RETURNS VEN.REC.VALID T/F
*
VEN.SHIPTO.VALID = @TRUE
VEN.VALIDATE.MSG = ''
*
BEGIN CASE
*
   CASE  VEN_REC<VN_STATUS> = ''
      VEN.VALIDATE.MSG = 'Vendor status is a required field'
*
   CASE VEN_REC<VN_NAME> = ''
      VEN.VALIDATE.MSG = 'Vendor name is a required field'
*
   CASE VEN_REC<VN_ADDR> = ''
      VEN.VALIDATE.MSG = 'Vendor street address is a required field'
*
   CASE VEN_REC<VN_CITY> = ''
      VEN.VALIDATE.MSG = 'Vendor city is a required field'
*
   CASE  VEN_REC<VN_STATE> = ''
      VEN.VALIDATE.MSG = 'Vendor state is a required field'
*
   CASE  VEN_REC<VN_ZIP> = ''
      VEN.VALIDATE.MSG = 'Vendor zip code is a required field'
*
   CASE  VEN_REC<VN_TERMS> = ''
      VEN.VALIDATE.MSG = 'Vendor payment terms'
*
   CASE  VEN_REC<VN_AP_LIMIT> < 0
      VEN.VALIDATE.MSG = 'Vendor credit limit must be >= 0'
*
   CASE CALLER_ACTION = VEN_NEW AND SHIPTO_REC = ""
      VEN.VALIDATE.MSG = 'New vendor requires a ship to'
*
   CASE  SHIPTO_REC # ''
*
* VALIDATE SHIP TO RECORD ALSO
*
      BEGIN CASE
*
         CASE SHIPTO_REC<VS_NAME> = ''
            VEN.VALIDATE.MSG = 'Ship to name is a required field'
*
         CASE SHIPTO_REC<VS_ADDR> = ''
            VEN.VALIDATE.MSG = 'Ship to street address is a required field'
*
         CASE SHIPTO_REC<VS_CITY> = ''
            VEN.VALIDATE.MSG = 'Ship to city is a required field'
*
         CASE  SHIPTO_REC<VS_STATE> = ''
            VEN.VALIDATE.MSG = 'Ship to state is a required field'
*
         CASE  SHIPTO_REC<VS_ZIP> = ''
            VEN.VALIDATE.MSG = 'Ship to zip code is a required field'
         CASE SHIPTO_REC<VS_SHIP_DAYS> = ''
            SHIPTO_REC<VS_SHIP_DAYS> = 0
         CASE SHIPTO_REC<VS_SHIP_DAYS> < 0
            VEN.VALIDATE.MSG = 'Ship to ship days cannot be negative'
      END CASE
END CASE
IF VEN.VALIDATE.MSG # '' THEN
   VEN.SHIPTO.VALID = @FALSE
   PRMPT = VEN.VALIDATE.MSG:', please correct'
   CAPTION = "Vendor Maintenance"
   STYLE   = 2  ;* !
   BUTTONS = 0  ;* ok / cancel
   HELPID = ""
   CALL NXT.ERR.MSG(PRMPT, CAPTION, STYLE, BUTTONS, HELPID, RESPONSE, GUIERRORS,GUISTATE)
END
RETURN
************************************************************
* $PAGE$
************************************************************
CREATE.DEFAULT.SHIPTO:
*
* COPY OVER DATA
*
SHIPTO_REC<VS_NAME> = VEN_REC<VN_NAME>
SHIPTO_REC<VS_ADDR> = VEN_REC<VN_ADDR>
SHIPTO_REC<VS_ADDR2> = VEN_REC<VN_ADDR2>
SHIPTO_REC<VS_CITY> = VEN_REC<VN_CITY>
SHIPTO_REC<VS_STATE> = VEN_REC<VN_STATE>
SHIPTO_REC<VS_ZIP> = VEN_REC<VN_ZIP>
SHIPTO_REC<VS_COUNTRY> = VEN_REC<VN_COUNTRY>
SHIPTO_REC<VS_PHONE> = VEN_REC<VN_PHONE>
SHIPTO_REC<VS_FAX> = VEN_REC<VN_FAX>
VEN_REC<VN_DEFAULT_SHIPTO> = SHIPTO_ID
*
GOSUB LOAD.SHIPTO.CTRLS
RETURN
************************************************************
* $PAGE$
************************************************************
ENABLE.VEN.CTRLS:
*
* routine enables controls on vendor "side" of form
*
* ENABLE CONTROLS
*
CTRLIDS = ''
PROPS   = ''
VALUES  = ''
*
CTRLIDS<-1> = "LSTSTATUS"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "TXT1BILLNAME"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "TXT1BILLADDR1"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "TXT1BILLADDR2"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "TXT1BILLCITY"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "TXT1BILLZIP"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "LST1BILLST"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "TXT1COUNTRY"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "TXT1ARLIMIT"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "LST1TERMS"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "TXT1PHONE"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "TXT1FAX"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "TXTWEB"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "TXTREP"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
IF NX_QB_ACCOUNTING THEN
   CTRLIDS<-1> = "TXTQBREF"
   PROPS<-1>   = GPENABLED
   VALUES<-1>  = 1
END
*
CTRLIDS<-1> = "GRDCONTACT"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "BTNCANCEL"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "BTNFILE"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
IF CALLER_ACTION = VEN_EDIT THEN
   CTRLIDS<-1> = "BTNDELETE"
   PROPS<-1>   = GPENABLED
   VALUES<-1>  = 1
END
*
* ON NEW VendorS DIPLAY "CREATE SHIPTO" BUTTON
*
IF CALLER_ACTION = VEN_NEW AND NOT(DEFAULT_CREATED) THEN
   CTRLIDS<-1> = "BTNDEFAULT"
   PROPS<-1>   = GPVISIBLE
   VALUES<-1>  = 1
*
   CTRLIDS<-1> = "BTNDEFAULT"
   PROPS<-1>   = GPENABLED
   VALUES<-1>  = 1
END ELSE
   CTRLIDS<-1> = "BTNDEFAULT"
   PROPS<-1>   = GPVISIBLE
   VALUES<-1>  = 0
END
*
CALL ATGUISETPROPS(GUIAPP,GUIFRM,CTRLIDS,PROPS,VALUES,GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
**
RETURN
************************************************************
* $PAGE$
************************************************************
ENABLE.SHIPTO.CTRLS:
*
* routine enables controls on SHIP TO "side" of form
*
* ENABLE CONTROLS
*
CTRLIDS = ''
PROPS   = ''
VALUES  = ''
*
CTRLIDS<-1> = "TXT1SHIPNAME"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "TXT1SHIPADDR1"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "TXT1SHIPADDR2"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "TXT1SHIPCITY"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "TXT1SHIPZIP"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "LST1SHIPST"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "TXT1SHIPCOUNTRY"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "TXT1SHIPPHONE"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "TXT1SHIPFAX"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "TXT1SHIPDAYS"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "BTNFILE"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "BTNCANCEL"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "BTNDELSHIP"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CTRLIDS<-1> = "CHKDEFAULT"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 1
*
CALL ATGUISETPROPS(GUIAPP,GUIFRM,CTRLIDS,PROPS,VALUES,GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
**
RETURN
************************************************************
* $PAGE$
************************************************************
GET.VEN.REC:
* ROUTINE READS IN VEN_REC, FOR VEN_ID
* RETURNS VEN_REC (IF FOUND)
* SETS ERROR.STATUS AND VEN.EDIT.MODE
*
CALL GET.VENDOR(VEN_ID,VEN_REC,@TRUE,ERROR_STATUS,GUIERRORS,GUISTATE)
*
BEGIN CASE
   CASE ERROR_STATUS = ERR_NOF    ;* WE SHOULD NOT BE HERE WITH CUST NOF, CLEAN UP AND LEAVE
      VEN.EDIT.MODE = "VIEW"
   CASE ERROR_STATUS = ERR_BUSY
      VEN.EDIT.MODE = "VIEW"
   CASE 1
      VEN.EDIT.MODE = "EDIT"
END CASE
RETURN
************************************************************
* $PAGE$
************************************************************
GET.SHIPTO.REC:
* ROUTINE READS IN SHIPTO_REC, FOR SHIPTO_ID
* RETURNS SHIPTO_REC (IF FOUND)
* SETS ERROR.STATUS
*
CALL GET.VSHIPTO(SHIPTO_ID,SHIPTO_REC,@TRUE,ERROR_STATUS,GUIERRORS,GUISTATE)
BEGIN CASE
   CASE ERROR_STATUS = ERR_NOF    ;* WE SHOULD NOT BE HERE WITH SHIPTO NOF, CLEAN UP AND LEAVE
      SHIPTO.EDIT.MODE = "VIEW"
   CASE ERROR_STATUS = ERR_BUSY
      SHIPTO.EDIT.MODE = "VIEW"
   CASE 1
      SHIPTO.EDIT.MODE = "EDIT"
END CASE
*
RETURN
************************************************************
* $PAGE$
************************************************************
LOAD.VEN.CTRLS:
*
* routine LOADS controls on vendor "side" of form
*
CTRLIDS = ''
PROPS   = ''
VALUES  = ''
*
CTRLIDS<-1> = "LBLCUSTIDVAL"
PROPS<-1>   = GPVALUE
VALUES<-1>  = VEN_ID
*
LOCATE VEN_REC<VN_STATUS> IN STATUS.IDX<1> SETTING IDX THEN
   CTRLIDS<-1> = "LSTSTATUS"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = IDX
END
*
CTRLIDS<-1> = "TXT1BILLNAME"
PROPS<-1>   = GPVALUE
VALUES<-1>  = VEN_REC<VN_NAME>
*
CTRLIDS<-1> = "TXT1BILLADDR1"
PROPS<-1>   = GPVALUE
VALUES<-1>  = VEN_REC<VN_ADDR>
*
CTRLIDS<-1> = "TXT1BILLADDR2"
PROPS<-1>   = GPVALUE
VALUES<-1>  = VEN_REC<VN_ADDR2>
*
CTRLIDS<-1> = "TXT1BILLCITY"
PROPS<-1>   = GPVALUE
VALUES<-1>  = VEN_REC<VN_CITY>
*
CTRLIDS<-1> = "TXT1BILLZIP"
PROPS<-1>   = GPVALUE
VALUES<-1>  = VEN_REC<VN_ZIP>
*
LOCATE VEN_REC<VN_STATE> IN STATES.IDX<1> SETTING IDX THEN
   CTRLIDS<-1> = "LST1BILLST"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = IDX
END
*
CTRLIDS<-1> = "TXT1COUNTRY"
PROPS<-1>   = GPVALUE
VALUES<-1>  = VEN_REC<VN_COUNTRY>
*
CTRLIDS<-1> = "TXT1ARLIMIT"
PROPS<-1>   = GPVALUE
VALUES<-1>  = OCONV(VEN_REC<VN_AP_LIMIT>,VN_AP_LIMIT.CNV)
*
LOCATE VEN_REC<VN_TERMS> IN TERMS.IDX<1> SETTING IDX THEN
   CTRLIDS<-1> = "LST1TERMS"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = IDX
END
*
CTRLIDS<-1> = "TXT1PHONE"
PROPS<-1>   = GPVALUE
VALUES<-1>  = VEN_REC<VN_PHONE>
*
CTRLIDS<-1> = "TXT1FAX"
PROPS<-1>   = GPVALUE
VALUES<-1>  = VEN_REC<VN_FAX>
*
CTRLIDS<-1> = "TXTWEB"
PROPS<-1>   = GPVALUE
VALUES<-1>  = VEN_REC<VN_WEB>
*
CTRLIDS<-1> = "TXTREP"
PROPS<-1>   = GPVALUE
VALUES<-1>  = VEN_REC<VN_REP>
*
IF NX_QB_ACCOUNTING THEN
   CTRLIDS<-1> = "TXTQBREF"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = VEN_REC<VN_QB_REFID>
END ELSE
   CTRLIDS<-1> = "TXTQBREF"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = 'not used'
END
*
* CREATE THE CONTACT LIST
*
CONTACT.LIST = ''
C.COUNT = DCOUNT(VEN_REC<VN_CONTACT>,@VM)
FOR I = 1 TO C.COUNT
   CONTACT.LIST<1,I,1> = VEN_REC<VN_CONTACT,I>
   CONTACT.LIST<1,I,2> = VEN_REC<VN_CONTACT_PHONE,I>
   CONTACT.LIST<1,I,3> = VEN_REC<VN_EMAIL,I>
   CONTACT.LIST<1,I,4> = VEN_REC<VN_CONTACT_FAX,I>
NEXT I
*
CTRLIDS<-1> = "GRDCONTACT"
PROPS<-1>   = GPVALUE
VALUES<-1>  = CONTACT.LIST
*
CALL ATGUISETPROPS(GUIAPP,GUIFRM,CTRLIDS,PROPS,VALUES,GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
**
RETURN
************************************************************
* $PAGE$
************************************************************
LOAD.VEN.LISTS: *
*
* ROUTINE LOADS CONTROLS LST1BILLST AND LST1SHIPST WITH STATES.LIST,
* LIST1TERMS WITH TERMS.LIST
*
CTRLIDS = ""
PROPS   = ""
VALUES  = ""
*
CTRLIDS<-1> = "LST1BILLST"
PROPS<-1>   = GPITEMS
VALUES<-1>  = STATES.LIST
*
CTRLIDS<-1> = "LST1SHIPST"
PROPS<-1>   = GPITEMS
VALUES<-1>  = STATES.LIST
*
CTRLIDS<-1> = "LST1TERMS"
PROPS<-1>   = GPITEMS
VALUES<-1>  = TERMS.LIST
*
CTRLIDS<-1> = "LSTSTATUS"
PROPS<-1>   = GPITEMS
VALUES<-1>  = STATUS.LIST
*
*
CALL ATGUISETPROPS(GUIAPP,GUIFRM,CTRLIDS,PROPS,VALUES,GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
RETURN
************************************************************
* $PAGE$
************************************************************
LOAD.SHIPTO.CTRLS:
*
* routine LOADS  controls on SHIP TO "side" of form
*
CTRLIDS = ''
PROPS   = ''
VALUES  = ''
*
CTRLIDS<-1> = "TXT1SHIPNAME"
PROPS<-1>   = GPVALUE
VALUES<-1>  = SHIPTO_REC<VS_NAME>
*
CTRLIDS<-1> = "TXT1SHIPADDR1"
PROPS<-1>   = GPVALUE
VALUES<-1>  = SHIPTO_REC<VS_ADDR>
*
CTRLIDS<-1> = "TXT1SHIPADDR2"
PROPS<-1>   = GPVALUE
VALUES<-1>  = SHIPTO_REC<VS_ADDR2>
*
CTRLIDS<-1> = "TXT1SHIPCITY"
PROPS<-1>   = GPVALUE
VALUES<-1>  = SHIPTO_REC<VS_CITY>
*
CTRLIDS<-1> = "TXT1SHIPZIP"
PROPS<-1>   = GPVALUE
VALUES<-1>  = SHIPTO_REC<VS_ZIP>
*
LOCATE SHIPTO_REC<VS_STATE> IN STATES.IDX<1> SETTING IDX THEN
   CTRLIDS<-1> = "LST1SHIPST"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = IDX
END
*
CTRLIDS<-1> = "TXT1SHIPCOUNTRY"
PROPS<-1>   = GPVALUE
VALUES<-1>  = SHIPTO_REC<VS_COUNTRY>
*
CTRLIDS<-1> = "TXT1SHIPPHONE"
PROPS<-1>   = GPVALUE
VALUES<-1>  = SHIPTO_REC<VS_PHONE>
*
CTRLIDS<-1> = "TXT1SHIPFAX"
PROPS<-1>   = GPVALUE
VALUES<-1>  = SHIPTO_REC<VS_FAX>
*
CTRLIDS<-1> = "TXT1SHIPDAYS"
PROPS<-1>   = GPVALUE
VALUES<-1>  = SHIPTO_REC<VS_SHIP_DAYS>
*
CTRLIDS<-1> = "CHKDEFAULT"
PROPS<-1>   = GPVALUE
IF VEN_REC<VN_DEFAULT_SHIPTO> = SHIPTO_ID THEN
   VALUES<-1>  = 1
END ELSE
   VALUES<-1>  = 0
END
*
CALL ATGUISETPROPS(GUIAPP,GUIFRM,CTRLIDS,PROPS,VALUES,GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
**
RETURN
************************************************************
* $PAGE$
************************************************************
SAVE.CHECK:
* ROUTINE CHECK FOR CURRENT VEN_REC = SAVE_VEN_REC
* IF NOT THE SAME FILE HAS NOT BEEN UPDATED, WARN USER
* SAVE.CHECK.OK = TRUE IF 1) RECORDS ARE THE SAME (FILE DOES NOT NEED UPDATING) OR 2) USER DOES NOT CARE
SAVE.CHECK.OK = @TRUE
IF SAVE_VEN_REC # VEN_REC THEN
   PRMPT = "Vendor record has changed but not saved.":@SVM:"Select OK to continue, Cancel to cancel action"
   CAPTION = "Vendor Maintenance"
   STYLE   = 2  ;* !
   BUTTONS = 1  ;* ok / cancel
   HELPID = ""
   CALL NXT.ERR.MSG(PRMPT, CAPTION, STYLE, BUTTONS, HELPID, RESPONSE, GUIERRORS,GUISTATE)
   IF RESPONSE = 2 THEN  ;* CANCEL
      SAVE.CHECK.OK = @FALSE
   END
END
IF SAVE.CHECK.OK THEN GOSUB SHIP.CHECK

RETURN
************************************************************
* $PAGE$
************************************************************
SHIP.CHECK:
* ROUTINE CHECK FOR CURRENT SHIPTO_REC = SAVE_SHIPTO_REC
* IF NOT THE SAME FILE HAS NOT BEEN UPDATED, WARN USER
* SAVE.CHECK.OK = TRUE IF 1) RECORDS ARE THE SAME (FILE DOES NOT NEED UPDATING) OR 2) USER DOES NOT CARE
SAVE.CHECK.OK = @TRUE
IF SAVE_SHIPTO_REC # SHIPTO_REC THEN
   PRMPT = "Vendor ship to record has changed but not saved.":@SVM:"Select OK to continue, Cancel to cancel action"
   CAPTION = "Vendor Maintenance"
   STYLE   = 2  ;* !
   BUTTONS = 1  ;* ok / cancel
   HELPID = ""
   CALL NXT.ERR.MSG(PRMPT, CAPTION, STYLE, BUTTONS, HELPID, RESPONSE, GUIERRORS,GUISTATE)
   IF RESPONSE = 2 THEN  ;* CANCEL
      SAVE.CHECK.OK = @FALSE
   END
END
RETURN
************************************************************
* $PAGE$
************************************************************
END
