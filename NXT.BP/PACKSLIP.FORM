SUBROUTINE PACKSLIP.FORM(SA_REC,SA_ID,FD)
**************************************************************************
* This is free and unencumbered software released into the public domain.
*
* Anyone is free to copy, modify, publish, use, compile, sell, or
* distribute this software, either in source code form or as a compiled
* binary, for any purpose, commercial or non-commercial, and by any
* means.
*
* In jurisdictions that recognize copyright laws, the author or authors
* of this software dedicate any and all copyright interest in the
* software to the public domain. We make this dedication for the benefit
* of the public at large and to the detriment of our heirs and
* successors. We intend this dedication to be an overt act of
* relinquishment in perpetuity of all present and future rights to this
* software under copyright law.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
* IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
* OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
* OTHER DEALINGS IN THE SOFTWARE.
*
* For more information, please refer to <https://unlicense.org>
**************************************************************************
*
* MODULE: PACKSLIP.FORM
* AUTHOR: MAB
* VERSION: 1.0.0
* CREATED: 00/00/2007
* UPDATED:
*
* MAINTENANCE RECORD:
*
* EQUATE:
*
*
* VARIABLES:
*
*
* FILES:
*
*
* DESIGN DESCRIPTION:
* CREATE PCL PACK SLIP
** INCLUDE STANDARD VARIABLE, EQUATES
*
$INCLUDE NXT.INCLUDES NXT.COMMON
$INCLUDE NXT.INCLUDES NXT.EQUATES
$INCLUDE NXT.INCLUDES NXT.PRT.EQUATES
$INCLUDE NXT.INCLUDES NXT.ERR.MSGS
$INCLUDE NXT.INCLUDES SALES.H

!
* SUBROUTINE CUT.PCK
* ROUTINE PRINT THE PACK SLIP ON THE LINE PRINTER
*
*
*  ON ENTRY:
*        SOD.REC  - READ IN
*        DEL.QTY  - ACTUAL QTY TO DELIVER
*        SHP.THRU.QTY - SCHEDULED QTY TO DELIVER
*
*
!
CUT.PCK: *
*
* INIT SOME STUFF
*
PAGE.CNT = 1
REV.LEVEL = SA_REC<SA_REV>
YMAX = 2800  ;* MAX DOT POSITION FOR BOTTOM OF PACK SLIP
*
* SET UP THE SHIP TO, BILL TO INFO
*
SHIP.NAME = SA_REC<SA_SHIP_NAME>
SHIP.ADD1 = SA_REC<SA_SHIP_ADDR>
SHIP.ADD2 = SA_REC<SA_SHIP_ADDR2>
SHIP.CSZ = SA_REC<SA_SHIP_CITY>:', ':SA_REC<SA_SHIP_STATE>:' ':SA_REC<SA_SHIP_ZIP>
SHIP.COUNTRY  = SA_REC<SA_SHIP_CO>
*
BILL.NAME = SA_REC<SA_NAME>
BILL.ADD1 = SA_REC<SA_ADDR>
BILL.ADD2 = SA_REC<SA_ADDR2>
BILL.CSZ = SA_REC<SA_CITY>:', ':SA_REC<SA_STATE>:' ':SA_REC<SA_ZIP>
BILL.COUNTRY  = SA_REC<SA_CO>
*
*
* NOW SQUEEZE THEM DOWN
*
SHIP.ADDRESS = ''
AA = 1
*
IF SHIP.ADD1 # '' THEN
   SHIP.ADDRESS<AA> = SHIP.ADD1
   AA +=1
END
*
IF SHIP.ADD2 # '' THEN
   SHIP.ADDRESS<AA> = SHIP.ADD2
   AA +=1
END
*
IF SHIP.CSZ # '' THEN
   SHIP.ADDRESS<AA> = SHIP.CSZ
   AA +=1
END
*
IF SHIP.COUNTRY # '' THEN
   SHIP.ADDRESS<AA> = SHIP.COUNTRY
   AA +=1
END
*
BILL.ADDRESS = ''
AA = 1
*
IF BILL.ADD1 # '' THEN
   BILL.ADDRESS<AA> = BILL.ADD1
   AA +=1
END
*
IF BILL.ADD2 # '' THEN
   BILL.ADDRESS<AA> = BILL.ADD2
   AA +=1
END
*
IF BILL.CSZ # '' THEN
   BILL.ADDRESS<AA> = BILL.CSZ
   AA +=1
END
*
IF BILL.COUNTRY # '' THEN
   BILL.ADDRESS<AA> = BILL.COUNTRY
   AA +=1
END
*
PRT.HDR: *
**
* PRINT HEADER
**
FD = FD:CG12:ESC:'*p1815x100Y':SA_ID"8'0'R"
FD = FD:CG10:ESC:'*p1815x150Y':FIELD(SA_REC<SA_ORDER_ID>,'*',1)
FD = FD:ESC:'*p1815x200Y':OCONV(DATE(),'D2-')
IF SA_REC<SA_DEL_DATE,1> # '' THEN
   FD = FD:ESC:'*p1815x275Y':OCONV(SA_REC<SA_DEL_DATE,1>,'D2-')
END
*
FD = FD:CPI.10
FD = FD:ESC:'*p80x495Y':BILL.NAME "L#26":ESC:'*p1390x495Y':SHIP.NAME "L#26"
FD = FD:ESC:'*p80x545Y':BILL.ADDRESS<1> "L#26":ESC:'*p1390x545Y':SHIP.ADDRESS<1> "L#26"
FD = FD:ESC:'*p80x595Y':BILL.ADDRESS<2> "L#26":ESC:'*p1390x595Y':SHIP.ADDRESS<2> "L#26"
FD = FD:ESC:'*p80x645Y':BILL.ADDRESS<3> "L#26":ESC:'*p1390x645Y':SHIP.ADDRESS<3> "L#26"
FD = FD:ESC:'*p80x695Y':BILL.ADDRESS<4> "L#26":ESC:'*p1390x695Y':SHIP.ADDRESS<4> "L#26"
FD = FD:ESC:'*p80x745Y':BILL.ADDRESS<5> "L#26":ESC:'*p1390x745Y':SHIP.ADDRESS<5> "L#26"
*
FD = FD:ESC:'*p20x940Y':SA_REC<SA_PO_NBR> 'L#25':SA_REC<SA_BUYER>  'L#25':SA_REC<SA_CUST_ID>'L#10':SA_REC<SA_SHIP_VIA>'L#20'
*
*  QTY SHIPPED
*
QTY = SA_REC<SA_DEL_QTY> + 0

*
IF QTY > 0 THEN FD = FD:ESC:'*p40x1125Y':QTY
FD = FD:ESC:'*p220x1125Y':FIELD(SA_REC<SA_ORDER_ID>,'*',2)
PN.REV = SA_REC<SA_PART_NBR>
IF SA_REC<SA_REV> # '' THEN
   PN.REV = PN.REV:' rev: ':SA_REC<SA_REV>
END
FD = FD:ESC:'*p340x1125Y':PN.REV
YPOS = 1125
YINC = 50
*
IF SA_REC<SA_DRAWING> # '' THEN
   YPOS += YINC
   FD = FD:ESC:'*p340x':YPOS:'Y':SA_REC<SA_DRAWING>
END
*
IF SA_REC<SA_PART_DESC> # '' THEN
   YPOS += YINC
   FD = FD:ESC:'*p340x':YPOS:'Y':SA_REC<SA_PART_DESC>
END
*
* PACKSLIP NOTES
*
IF SA_REC<SA_PACK_NOTES> # '' THEN
   LN.COUNT = DCOUNT(SA_REC<SA_PACK_NOTES>,@VM)
   YPOS += YINC
   YPOS += YINC
   FD = FD:ESC:'*p340x':YPOS:'Y':STR('-',25):' notes ':STR('-',25)
   FOR I = 1 TO LN.COUNT
      YPOS += YINC
      IF YPOS > YMAX THEN GOTO NOTES.END
      FD = FD:ESC:'*p340x':YPOS:'Y':SA_REC<SA_PACK_NOTES,I>
   NEXT I
END
NOTES.END:
*
RETURN
END
