SUBROUTINE USER.MAINT(GUIERRORS,GUISTATE)
!
**************************************************************************
* This is free and unencumbered software released into the public domain.
*
* Anyone is free to copy, modify, publish, use, compile, sell, or
* distribute this software, either in source code form or as a compiled
* binary, for any purpose, commercial or non-commercial, and by any
* means.
*
* In jurisdictions that recognize copyright laws, the author or authors
* of this software dedicate any and all copyright interest in the
* software to the public domain. We make this dedication for the benefit
* of the public at large and to the detriment of our heirs and
* successors. We intend this dedication to be an overt act of
* relinquishment in perpetuity of all present and future rights to this
* software under copyright law.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
* IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
* OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
* OTHER DEALINGS IN THE SOFTWARE.
*
* For more information, please refer to <https://unlicense.org>
**************************************************************************
*
* MODULE: USER.MAINT
* AUTHOR: MAB
* VERSION: 1.0.0
* CREATED: 00/00/2008
* UPDATED: 06/09/2013
*
* MAINTENANCE RECORD:
* 06/02/09 disable "BTNSSPATH" until we decide how we what this to work system vs client report folder
* 06/09/13 ADDED USER_WORKCENTERS, USER_WORKORDERS, USER_LABOR, USER_VENDOR_MAINT AUTHORIZATIONS
* 01/11/21 REMOVE SPREADSHEET REPORT PATH AND BTNSSPATH. SPREADSHEET REPORTS ARE SENT TO USERS DOCUMENTS FOLDER
*
* EQUATE:
*
*
* VARIABLES:
* FILES:
*
*
* DESIGN DESCRIPTION:
* Creates and maintains USER Records
*
!
** INCLUDE STANDARD VARIABLE, EQUATES
*
$INCLUDE NXT.INCLUDES NXT.COMMON
$INCLUDE NXT.INCLUDES NXT.EQUATES
$INCLUDE NXT.INCLUDES NXT.ERR.MSGS
$INCLUDE NXT.INCLUDES SYSTEM_FILE.EQU
$INCLUDE SYSCOM KEYS.H
*
*
$INCLUDE GUIBP ATGUIEQUATES
*
PROG_ID   = "USER.MAINT"
GUIERRORS = ''
GUIAPP = "USER"  ;* SEED GUIAPP AND GUIFRM PRIOR TO ACTUAL EVENT WAIT LOOP
GUIFRM = "USER"
*
* Open the GUI project file
OPEN 'NXT.FORMS' TO GUI.PROJECT.FILE ELSE
   CALL ATGUIERROR(3,'USER.MAINT','',0,GRFATAL,"'NXT.FORMS' is not a file name.",GUIERRORS)
   RETURN
END
* Read the GUI template into TEMPLATE
READ TEMPLATE FROM GUI.PROJECT.FILE,'USER.MAINT' ELSE
   CALL ATGUIERROR(3,'USER.MAINT','',0,GRFATAL,"'USER.MAINT' is not on file.",GUIERRORS)
   RETURN
END
* Add your equates and code to open files here...
*
*
************************************************************
*
*
*-->BEGIN GUI HEADER<--*
* If GUISTATE is not NULL, assume GUI has been initialized
IF GUISTATE EQ '' THEN
   CALL ATGUIINIT2(TEMPLATE<2,2>,'',GUIERRORS,GUISTATE)
   IF GUIERRORS<1> >= 3 THEN RETURN
END
* Load the dialog project template
CALL ATGUIRUNMACRO(TEMPLATE,'',GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= 3 THEN RETURN
*-->END GUI HEADER<--*
*
*
************************************************************
*
*
*-->BEGIN GUI STARTUP<--*
ACCEPT = 0 ;* Assume dialog cancelled (update in your OK button Click handler)
* Add your code to load initial values here...
CALL ATGUISHOW('USER','USER','','',GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= 2 THEN RETURN
*
* GET KNOWN USERS AND ADD TO COMBO BOX
*
GOSUB LOAD.USER.LIST
USER.ID = ''
USER.NAME = ''
*
*-->END GUI STARTUP<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT LOOP<--*
GUI.DLG.EXIT = 0
LOOP
   CALL ATGUIWAITEVENT(GUIAPP,GUIFRM,GUICTL,GUIEVT,GUIARGS,GUIERRORS,GUISTATE)
   IF GUIERRORS<1> >= 2 THEN RETURN
   IF GUIEVT EQ GEQUIT THEN
      GUI.DLG.EXIT = 1
   END ELSE
      GUIAPP=OCONV(GUIAPP,'MCU')
      GUIFRM=OCONV(GUIFRM,'MCU')
      GUICTL=OCONV(GUICTL,'MCU')
      GOSUB GUI.DECODE.EVENT
   END
UNTIL GUI.DLG.EXIT DO REPEAT
* Eat final Quit event
IF GUIEVT <> GEQUIT THEN
   GUI.APP.LIST = ''
   CALL ATGUIGETPROP('','','',GPSTATUS,2,0,GUI.APP.LIST,'',GUISTATE)
   IF GUI.APP.LIST EQ '' THEN
      * Quit event fired after last GUI object is deleted - discard it
      CALL ATGUIWAITEVENT('','','','','','',GUISTATE)
      * We could call ATGUISHUTDOWN here if we wanted, but there's no
      * harm just leaving the GUI environment initialized, in case we
      * want to use it again...
   END
END
*-->END EVENT LOOP<--*
*
*
************************************************************
*
*
*-->BEGIN GUI TRAILER<--*
RETURN
*
GUI.DIALOG.RETURN: *
* This subroutine is called just before the GUI Dialog app
* is deleted. Check the state of the ACCEPT variable, and
* retrieve values from GUI controls and assign to appropriate
* arguments for return to calling program here...
IF ACCEPT THEN
   * Add your code here...
END ELSE
   * Add your code here...
END
RETURN
*-->END GUI TRAILER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT DECODER<--*
GUI.DECODE.EVENT: *
IF NUM(GUIEVT) THEN
 BEGIN CASE
 CASE GUIAPP='USER'
 BEGIN CASE
  CASE GUIFRM='USER'
  BEGIN CASE
   CASE GUICTL=''
   BEGIN CASE
    CASE GUIEVT=GECLOSE
    GOSUB GUI.USER.USER.CLOSE;GUIEVT=0
    END CASE
   CASE GUICTL='BTNCANCEL'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.BTNCANCEL.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNDELETE'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.BTNDELETE.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='BTNSAVE'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.BTNSAVE.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CBUSER'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CBUSER.CLICK;GUIEVT=0
    CASE GUIEVT=GEVALIDATE
    GOSUB GUI.USER.USER.CBUSER.VALIDATE;GUIEVT=0
    END CASE
   CASE GUICTL='CHKAP'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKAP.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKAR'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKAR.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKCM'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKCM.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKINVOICE'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKINVOICE.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKLAB'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKLAB.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKLOGOUT'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKLOGOUT.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKOE'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKOE.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKOECMADD'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKOECMADD.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKOEPS'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKOEPS.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKPM'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKPM.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKPOR'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKPOR.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKPRICE'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKPRICE.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKPUR'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKPUR.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKREPORTS'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKREPORTS.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKSHIP'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKSHIP.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKSM'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKSM.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKSSCHD'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKSSCHD.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKVEN'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKVEN.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKWC'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKWC.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKWO'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKWO.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKWOI'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKWOI.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='CHKWOR'
   BEGIN CASE
    CASE GUIEVT=GECLICK
    GOSUB GUI.USER.USER.CHKWOR.CLICK;GUIEVT=0
    END CASE
   CASE GUICTL='TXTINVOICE'
   BEGIN CASE
    CASE GUIEVT=GEVALIDATE
    GOSUB GUI.USER.USER.TXTINVOICE.VALIDATE;GUIEVT=0
    END CASE
   CASE GUICTL='TXTLABEL'
   BEGIN CASE
    CASE GUIEVT=GEVALIDATE
    GOSUB GUI.USER.USER.TXTLABEL.VALIDATE;GUIEVT=0
    END CASE
   CASE GUICTL='TXTPACK'
   BEGIN CASE
    CASE GUIEVT=GEVALIDATE
    GOSUB GUI.USER.USER.TXTPACK.VALIDATE;GUIEVT=0
    END CASE
   CASE GUICTL='TXTPROCESS'
   BEGIN CASE
    CASE GUIEVT=GEVALIDATE
    GOSUB GUI.USER.USER.TXTPROCESS.VALIDATE;GUIEVT=0
    END CASE
   CASE GUICTL='TXTREPORT'
   BEGIN CASE
    CASE GUIEVT=GEVALIDATE
    GOSUB GUI.USER.USER.TXTREPORT.VALIDATE;GUIEVT=0
    END CASE
   END CASE
  END CASE
 END CASE
 IF GUIEVT THEN
  * Unhandled event - may be dynamic
  GOSUB GUI.DYNAMIC.EVENTS
 END
END ELSE
 GOSUB GUI.CUSTOM.EVENTS
END
RETURN
*-->END EVENT DECODER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CBUSER.CLICK: *
USER.NAME = GUIARGS<1>    ;* GET ID USER CLICKED ON, AND DISPLAY
GOSUB LOAD.USER
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CBUSER.VALIDATE: *
IF USER.NAME # GUIARGS<2> THEN
   USER.NAME = OCONV(GUIARGS<2>,"MCU")    ;* GET ID USER CLICKED ON, AND DISPLAY
   GOSUB LOAD.USER
END
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKAP.CLICK: *
USER_REC<USER_AP> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKAR.CLICK: *
USER_REC<USER_AR> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKCM.CLICK: *
USER_REC<USER_CUSTOMER_MAINT> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKINVOICE.CLICK: *
USER_REC<USER_INVOICING> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKLAB.CLICK: *
USER_REC<USER_LABOR> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKLOGOUT.CLICK: *
USER_REC<USER_LOGOUT> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKOE.CLICK: *
USER_REC<USER_ORDER_PROCESSING> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKOECMADD.CLICK: *
USER_REC<USER_OE_CUST_ADD> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKOEPS.CLICK: *
USER_REC<USER_PROCESS_STEPS> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKPM.CLICK: *
USER_REC<USER_PART_MAINT> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKPOR.CLICK: *
USER_REC<USER_PURCHASE_RECEIPT> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKPRICE.CLICK: *
USER_REC<USER_PRICE_RESTRICTED> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKPUR.CLICK: *
USER_REC<USER_PURCHASE_ORDER> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKREPORTS.CLICK: *
USER_REC<USER_REPORTS> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKSHIP.CLICK: *
USER_REC<USER_SHIPPING> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKSM.CLICK: *
USER_REC<USER_SYSTEM_MAINT> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKSSCHD.CLICK: *
USER_REC<USER_SHOP_SCHD> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKVEN.CLICK: *
USER_REC<USER_VENDOR_MAINT> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKWC.CLICK: *
USER_REC<USER_WORKCENTERS> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKWO.CLICK: *
USER_REC<USER_WORKORDERS> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKWOI.CLICK: *
USER_REC<USER_WORK_ORDER_ISSUE> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.CHKWOR.CLICK: *
USER_REC<USER_WORK_ORDER_RECEIPT> =  GUIARGS<1>
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN CLOSE EVENT HANDLER<--*
GUI.USER.USER.CLOSE: *
IF USER.ID # '' THEN
   RELEASE C.FILE.VAR(C.SYSTEM_FILE), USER.ID
END
* Default form close event handler
CALL ATGUIHIDE(GUIAPP,GUIFRM,'','',GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= 2 THEN GOTO GUI.ERROR
CALL ATGUIGETPROP(GUIAPP,'','',GPSTATUS,0,0,NUM.FORMS,GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= 2 THEN GOTO GUI.ERROR
IF NUM.FORMS = 0 THEN
   GOSUB GUI.DIALOG.RETURN
   CALL ATGUIDELETE(GUIAPP,'','',GUIERRORS,GUISTATE)
   IF GUIERRORS<1> >= 3 THEN GOTO GUI.ERROR
   GUI.DLG.EXIT = 1
END
RETURN
*-->END CLOSE EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.BTNCANCEL.CLICK: *
IF USER.ID # '' THEN
   RELEASE C.FILE.VAR(C.SYSTEM_FILE), USER.ID
END
GOSUB RESET.USER
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.BTNDELETE.CLICK: *
PRMPT = "Are you sure you want to delete user: ":USER.NAME
CAPTION = "User.Maint"
STYLE   = 2  ;* !
BUTTONS = 4  ;* ok only
HELPID = ""
CALL NXT.ERR.MSG(PRMPT, CAPTION, STYLE, BUTTONS, HELPID, RESPONSE, GUIERRORS,GUISTATE)
IF RESPONSE = 6 THEN  ;* YES
   DELETE C.FILE.VAR(C.SYSTEM_FILE), USER.ID
   GOSUB RESET.USER
   GOSUB LOAD.USER.LIST
END
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.BTNSAVE.CLICK: *
CALL WRITE.RECORD(USER.ID,USER_REC,C.SYSTEM_FILE,@FALSE,ERROR_STATUS)
GOSUB RESET.USER
GOSUB LOAD.USER.LIST
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.TXTINVOICE.VALIDATE: *
PRT.UNIT = GUIARGS<2>
GOSUB VALIDATE.PRT.UNIT
IF VALID.PRT.UNIT THEN
   USER_REC<USER_INVOICE_PRINTER> = PRT.UNIT
END
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.TXTLABEL.VALIDATE: *
PRT.UNIT = GUIARGS<2>
GOSUB VALIDATE.PRT.UNIT
IF VALID.PRT.UNIT THEN
   USER_REC<USER_LABEL_PRINTER> = PRT.UNIT
END
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.TXTPACK.VALIDATE: *
PRT.UNIT = GUIARGS<2>
GOSUB VALIDATE.PRT.UNIT
IF VALID.PRT.UNIT THEN
   USER_REC<USER_PACKSLIP_PRINTER> = PRT.UNIT
END
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.TXTPROCESS.VALIDATE: *
PRT.UNIT = GUIARGS<2>
GOSUB VALIDATE.PRT.UNIT
IF VALID.PRT.UNIT THEN
   USER_REC<USER_PROCESS_PRINTER> = PRT.UNIT
END

RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN EVENT HANDLER<--*
GUI.USER.USER.TXTREPORT.VALIDATE: *
PRT.UNIT = GUIARGS<2>
GOSUB VALIDATE.PRT.UNIT
IF VALID.PRT.UNIT THEN
   USER_REC<USER_REPORTS_PRINTER> = PRT.UNIT
END
RETURN
*-->END EVENT HANDLER<--*
*
*
************************************************************
*
*
*-->BEGIN DYNAMIC EVENTS<--*
GUI.DYNAMIC.EVENTS: *
* Add any dynamic event handling code here. The GUIEVT, GUIAPP, GUIFRM,
* GUICTL and GUIARGS variables are valid and availble for your use.
RETURN
*-->END DYNAMIC EVENTS<--*
*
*
************************************************************
*
**-->BEGIN CUSTOM EVENTS<--*
GUI.CUSTOM.EVENTS: *
* Add any custom event handling code here. The GUIEVT, GUIAPP, GUIFRM,
* GUICTL and GUIARGS variables are valid and availble for your use.
RETURN
*-->END CUSTOM EVENTS<--*
*
*
************************************************************
*
**-->BEGIN ERROR HANDLER<--*
GUI.ERROR: *
GUI.DLG.EXIT = 1
LOG.OPTS = "DISPLAY"
ERROR_NBR = ERR_GUI
ERROR_MSG =  ERR_MESSAGE(ERR_GUI)
CALL LOG.ERROR(LOG.OPTS,"USER.MAINT", ERROR_NBR, ERROR_MSG, GUIERRORS, GUISTATE)
RETURN
*-->END ERROR HANDLER<--*
************************************************************
* $PAGE$
************************************************************
LOAD.USER.LIST:
*
*
* GET KNOWN USERS AND ADD TO COMBO BOX
*
*
USER.LIST = ''  ;* VM LIST OF USER NAMES
SLIST = 'SSELECT SYSTEM_FILE BY @ID WITH @ID LIKE "USER*..." TO 2'
EXECUTE SLIST CAPTURING DMMY.OUT
IF @SELECTED LT 1 THEN
   USER.LIST = ''
END ELSE

   READLIST ID.LIST FROM 2 THEN
      USER.CT = DCOUNT(ID.LIST,@AM)
      FOR I = 1 TO USER.CT
         USER.LIST<1,-1> = FIELD(ID.LIST<I>,'*',2)
      NEXT I
   END
END
CALL ATGUISETPROP(GUIAPP,GUIFRM,"CBUSER",GPITEMS,0,0,USER.LIST,GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
RETURN
************************************************************
* $PAGE$
************************************************************
LOAD.USER:

CTRLIDS = ''
PROPS   = ''
VALUES  = ''
USER.ID = "USER*":USER.NAME
GET_REC_MSG_LIST = ''
CALL GET.RECORD("SYSTEM_FILE",C.SYSTEM_FILE,USER.ID,USER_REC,@TRUE,ERROR_STATUS,GET_REC_MSG_LIST,GUIERRORS,GUISTATE)
*
IF ERROR_STATUS = ERR_BUSY THEN
   PRMPT = "User Record in use, Try later"
   CAPTION = "User.Maint"
   STYLE   = 2  ;* !
   BUTTONS = 0  ;* ok only
   HELPID = ""
   CALL NXT.ERR.MSG(PRMPT, CAPTION, STYLE, BUTTONS, HELPID, RESPONSE, GUIERRORS,GUISTATE)
   USER.ID = ''
   GOTO LU999
END
*
SETPTR_TXT = ''
EXECUTE "SETPTR DISPLAY" CAPTURING SETPTR_TXT
CONVERT @AM TO @VM IN SETPTR_TXT
*
IF USER_REC # "" THEN   ;* USER ON FILE, POPULATE FORM
   CTRLIDS<1> = "CBUSER"
   PROPS<1>   = GPENABLED
   VALUES<1>  = 0
   *
   CTRLIDS<-1> = "FRMMENU"
   PROPS<-1>   = GPENABLED
   VALUES<-1>  = 1
   *
   CTRLIDS<-1> = "FRMRESTRICTIONS"
   PROPS<-1>   = GPENABLED
   VALUES<-1>  = 1
   *
   CTRLIDS<-1> = "FRMPRINTER"
   PROPS<-1>   = GPENABLED
   VALUES<-1>  = 1
   *
   CTRLIDS<-1> = "CHKOE"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_ORDER_PROCESSING>
   *
   CTRLIDS<-1> = "CHKSHIP"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_SHIPPING>
   *
   CTRLIDS<-1> = "CHKINVOICE"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_INVOICING>
   *
   CTRLIDS<-1> = "CHKAR"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_AR>
   *
   CTRLIDS<-1> = "CHKPUR"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_PURCHASE_ORDER>
   *
   CTRLIDS<-1> = "CHKPOR"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_PURCHASE_RECEIPT>

   CTRLIDS<-1> = "CHKAP"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_AP>
   *
   CTRLIDS<-1> = "CHKREPORTS"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_REPORTS>
   *
   CTRLIDS<-1> = "CHKWC"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_WORKCENTERS>
   *
   CTRLIDS<-1> = "CHKWO"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_WORKORDERS>
   *
   CTRLIDS<-1> = "CHKLAB"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_LABOR>
   *
   CTRLIDS<-1> = "CHKWOI"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_WORK_ORDER_ISSUE>
   *
   CTRLIDS<-1> = "CHKWOR"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_WORK_ORDER_RECEIPT>
   *
   CTRLIDS<-1> = "CHKCM"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_CUSTOMER_MAINT>
   *
   CTRLIDS<-1> = "CHKVEN"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_VENDOR_MAINT>
   *
   CTRLIDS<-1> = "CHKPM"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_PART_MAINT>
   *
   CTRLIDS<-1> = "CHKSM"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_SYSTEM_MAINT>
   *
   CTRLIDS<-1> = "CHKPRICE"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_PRICE_RESTRICTED>
   *
   CTRLIDS<-1> = "CHKOEPS"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_PROCESS_STEPS>
   *
   CTRLIDS<-1> = "CHKOECMADD"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_OE_CUST_ADD>
   *
   CTRLIDS<-1> = "CHKLOGOUT"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_LOGOUT>
   *
   CTRLIDS<-1> = "CHKSSCHD"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_SHOP_SCHD>
   *
   *
   CTRLIDS<-1> = "BTNSAVE"
   PROPS<-1>   = GPENABLED
   VALUES<-1>  = 1
   *
   CTRLIDS<-1> = "BTNCANCEL"
   PROPS<-1>   = GPENABLED
   VALUES<-1>  = 1
   *
   CTRLIDS<-1> = "BTNDELETE"
   PROPS<-1>   = GPENABLED
   VALUES<-1>  = 1
   *
   *  CTRLIDS<-1> = "BTNSSPATH"
   *  PROPS<-1>   = GPENABLED
   *  VALUES<-1>  = 1
   *
   CTRLIDS<-1> = "TXTINVOICE"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_INVOICE_PRINTER>
   *
   CTRLIDS<-1> = "TXTPACK"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_PACKSLIP_PRINTER>
   *
   CTRLIDS<-1> = "TXTREPORT"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_REPORTS_PRINTER>
   *
   CTRLIDS<-1> = "TXTPROCESS"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_PROCESS_PRINTER>
   *
   CTRLIDS<-1> = "TXTLABEL"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = USER_REC<USER_LABEL_PRINTER>
   *
   CTRLIDS<-1> = "TXTSETPTR"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = SETPTR_TXT
   *
END ELSE
   CTRLIDS<1> = "CBUSER"
   PROPS<1>   = GPENABLED
   VALUES<1>  = 0
   *
   CTRLIDS<-1> = "FRMMENU"
   PROPS<-1>   = GPENABLED
   VALUES<-1>  = 1
   *
   CTRLIDS<-1> = "FRMRESTRICTIONS"
   PROPS<-1>   = GPENABLED
   VALUES<-1>  = 1
   *
   CTRLIDS<-1> = "FRMPRINTER"
   PROPS<-1>   = GPENABLED
   VALUES<-1>  = 1
   *
   CTRLIDS<-1> = "BTNSAVE"
   PROPS<-1>   = GPENABLED
   VALUES<-1>  = 1
   *
   CTRLIDS<-1> = "BTNCANCEL"
   PROPS<-1>   = GPENABLED
   VALUES<-1>  = 1
   *
   CTRLIDS<-1> = "TXTSETPTR"
   PROPS<-1>   = GPVALUE
   VALUES<-1>  = SETPTR_TXT

END
CALL ATGUISETPROPS(GUIAPP,GUIFRM,CTRLIDS,PROPS,VALUES,GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
*
IF USER_REC = '' THEN
   PRMPT = "Adding new User ":USER.NAME
   CAPTION = "User Maint"
   STYLE   = 2  ;* !
   BUTTONS = 0  ;* ok only
   HELPID = ""
   CALL NXT.ERR.MSG(PRMPT, CAPTION, STYLE, BUTTONS, HELPID, RESPONSE, GUIERRORS,GUISTATE)
END
LU999:
RETURN
************************************************************
* $PAGE$
************************************************************
RESET.USER:
CTRLIDS = ""
PROPS   = ''
VALUES  = ''
*
CTRLIDS<1> = "CBUSER"
PROPS<1>   = GPENABLED
VALUES<1>  = 1
*
CTRLIDS<2> = "TXTINVOICE"
PROPS<2>   = GPVALUE
VALUES<2>  = ""
*
CTRLIDS<3> = "TXTPACK"
PROPS<3>   = GPVALUE
VALUES<3>  = ""
*
CTRLIDS<4> = "TXTREPORT"
PROPS<4>   = GPVALUE
VALUES<4>  = ""
*
CTRLIDS<5> = "TXTPROCESS"
PROPS<5>   = GPVALUE
VALUES<5>  = ""
*
CTRLIDS<6> = "TXTLABEL"
PROPS<6>   = GPVALUE
VALUES<6>  = ""
*
CTRLIDS<-1> = "FRMMENU"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 0
*
CTRLIDS<-1> = "FRMRESTRICTIONS"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CBUSER"
PROPS<-1>   = GPVALUE
VALUES<-1>  = ""
*
CTRLIDS<-1> = "CHKOE"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CHKSHIP"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CHKINVOICE"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CHKAR"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CHKPUR"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CHKPOR"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CHKAP"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CHKREPORTS"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CHKCM"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CHKPM"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CHKSM"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CHKWC"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CHKWO"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CHKLAB"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CHKWOR"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CHKWOI"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CHKVEN"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CHKPRICE"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CHKOEPS"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CHKLOGOUT"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "CHKSSCHD"
PROPS<-1>   = GPVALUE
VALUES<-1>  = 0
*
CTRLIDS<-1> = "BTNSAVE"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 0
*
CTRLIDS<-1> = "BTNDELETE"
PROPS<-1>   = GPENABLED
VALUES<-1>  = 0
*

CALL ATGUISETPROPS(GUIAPP,GUIFRM,CTRLIDS,PROPS,VALUES,GUIERRORS,GUISTATE)
IF GUIERRORS<1> >= NXT.GUI.ERROR.LEVEL THEN GOSUB GUI.ERROR
RETURN
*************************************************************
* $PAGE$
************************************************************
VALIDATE.PRT.UNIT:
* PRT.UNIT PRINTER UNIT TO VALIDATE
VALID.PRT.UNIT = @FALSE
*
IF GETPU(PU$DEFINED,PRT.UNIT) THEN
   VALID.PRT.UNIT = @TRUE
END ELSE
   PRMPT = "Printer Unit: ":PRT.UNIT:' Not Defined'
   CAPTION = "User Maintenance"
   STYLE   = 2  ;* !
   BUTTONS = 0  ;* ok only
   HELPID = ""
   CALL NXT.ERR.MSG(PRMPT, CAPTION, STYLE, BUTTONS, HELPID, RESPONSE, GUIERRORS,GUISTATE)
END
RETURN
*
END
