SUBROUTINE SHIP.APPLY.SHIPMENT(DEL.QTY,SA_ID,CT_ID,NEXT.DEL.IDX,OC_REC,APPLIED.SCHD.LIST,APPLIED.QTY.LIST,APPLIED.DUE.DATE.LIST)

**************************************************************************
* This is free and unencumbered software released into the public domain.
*
* Anyone is free to copy, modify, publish, use, compile, sell, or
* distribute this software, either in source code form or as a compiled
* binary, for any purpose, commercial or non-commercial, and by any
* means.
*
* In jurisdictions that recognize copyright laws, the author or authors
* of this software dedicate any and all copyright interest in the
* software to the public domain. We make this dedication for the benefit
* of the public at large and to the detriment of our heirs and
* successors. We intend this dedication to be an overt act of
* relinquishment in perpetuity of all present and future rights to this
* software under copyright law.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
* IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
* OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
* ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
* OTHER DEALINGS IN THE SOFTWARE.
*
* For more information, please refer to <https://unlicense.org>
**************************************************************************
*
* MODULE: SHIP.APPLY.SHIPMENT
* AUTHOR: MAB
* VERSION: 1.0.0
* CREATED: 00/00/2007
* UPDATED:
*
* MAINTENANCE RECORD:
*
* EQUATE:
*
*
* VARIABLES:
* ON ENTRY 
* DEL.QTY - QTY TO SHIP OR ZERO FOR PRE-CUT PAPER WORK (CREATE PRIOR TO ACTUAL SHIPMENT)
* NEXT.DEL.IDX - NEXT NON SHIPPED DELIVERY
* OC_ID   - ORDER CHILD ID
* SA_ID   - CALLER PROVIDED SALES RECORD ID
* CT_ID   - CALLER SUPPLIED CERT ID
* OC_REC  - ORDER CHILD RECORD
* ON EXIT:
* VALUE MARKED LIST CREATED FOR SALES RECORD, DETAIL HOW DEL.QTY APPLIED OVER CHILD SCHEDULE ITEMS
* APPLIED.SCHD.LIST 
* APPLIED.QTY.LIST 
* APPLIED.DUE.DATE.LIST 
*
* FILES:
*
*
* DESIGN DESCRIPTION:
* APPLY DEL.QTY OVER SCHD ITEMS ON ORDER_CHILD RECORD
*
** INCLUDE STANDARD VARIABLE, EQUATES
*
$INCLUDE NXT.INCLUDES NXT.COMMON
$INCLUDE NXT.INCLUDES NXT.EQUATES
$INCLUDE NXT.INCLUDES CUSTOMERS.H
$INCLUDE NXT.INCLUDES SHIP_TO.H
$INCLUDE NXT.INCLUDES ORDER_CHILD.H
$INCLUDE NXT.INCLUDES ORDER_PARENT.H
$INCLUDE NXT.INCLUDES SALES.H
$INCLUDE NXT.INCLUDES PARTS.H
$INCLUDE NXT.INCLUDES CERTS.H

*
* APPLY DEL.QTY OVER SCHD ITEMS ON ORDER_CHILD RECORD
*
APPLIED.SCHD.LIST = ''
APPLIED.QTY.LIST = ''
APPLIED.DUE.DATE.LIST = ''
*
* FIRST CALCULATE THE FIRST DUE DATE
* USE THE FIRST SCHEDULE WITH  NOTHING APPLIED
* SET BY CALC.BAL.DUE -> NEXT.DEL.IDX
*
* DEL.QTY = QTY USER ENTERED TO SHIP
* QTY.TO.APPLY = BALANCE TO APPLY TO SCHD ITEMS
* QTY.APPLIED  = QTY TO APPLY AGAINST CURRENT SCHD ITEM POINTED TO BY SHIP.IDX
*
* CALCULATE SCHD.COUNT - NUMBER OF SCHEDULE ITEMS ON THIS CHILD RECORD
SCHD.COUNT = DCOUNT(OC_REC<OC_SCHD_ID>,@VM)
*
QTY.TO.APPLY = DEL.QTY
FOR SHIP.IDX = NEXT.DEL.IDX TO SCHD.COUNT   ;* PARSE THROUGH SCHD ITEMS
   IF QTY.TO.APPLY GT 0 THEN
      SCHD.ORD.QTY = OC_REC<OC_ORD_QTY,SHIP.IDX>
      QTY.APPLIED = QTY.TO.APPLY - SCHD.ORD.QTY
*
      IF QTY.APPLIED LT 0 THEN   ;* PARTIAL SHIPMENT TEST (LESS TO SHIP THEN ON SCHD ITEM)
         QTY.APPLIED = QTY.TO.APPLY
*         IF SHIP.IDX LE SCHD.COUNT THEN        ;* NOT PAST LAST SCHD ITEM
         SPLIT.QTY = SCHD.ORD.QTY - QTY.TO.APPLY  ;* NEW SCHD QTY
         SPLIT.SCHD.ID = OC_REC<OC_SCHD_ID,SHIP.IDX> + .001  ;* CREATE SPLIT SCHEDULE #
         SPLIT.DATE  = OC_REC<OC_DUE_DATE,SHIP.IDX> ;* DUE DATE
         SPLIT.NOTE  = OC_REC<OC_SCHD_NOTES,SHIP.IDX> ;* SCHDULE NOTES FOR THIS SHIPMENT
         SPLIT.IDX = SHIP.IDX + 1                   ;* MUST CREATE NEW SCHD ITEM AT I
         GOSUB SPLIT.SCHD
         OC_REC<OC_ORD_QTY,SHIP.IDX> =  QTY.APPLIED ;* UPDATE ORDER QTY
*
*         END
      END ELSE ;* NOT A PARTIAL
*         IF SHIP.IDX LT SCHD.COUNT THEN  ;* NOT PAST LAST SCHD ITEM
         QTY.APPLIED = SCHD.ORD.QTY   ;*  USE FULL SCHD ITEM QTY
*         END ELSE                        ;* AT LAST SCHEDULE, APPLIED BALANCE OF QTY.TO.APPLY
*            QTY.APPLIED = QTY.TO.APPLY
*         END
      END
*
      APPLIED.SCHD.LIST<1,-1>     = OC_REC<OC_SCHD_ID,SHIP.IDX>
      APPLIED.QTY.LIST<1,-1>      = QTY.APPLIED
      APPLIED.DUE.DATE.LIST<1,-1> = OC_REC<OC_DUE_DATE,SHIP.IDX>
*
* UPDATE ORDER CHILD
*
      OC_REC<OC_DEL_DATE,SHIP.IDX> = DATE()
      OC_REC<OC_DEL_QTY,SHIP.IDX>  = QTY.APPLIED
      OC_REC<OC_PACK_ID,SHIP.IDX>  = SA_ID
      OC_REC<OC_CERT_ID,SHIP.IDX>  = CT_ID
*
      QTY.TO.APPLY = QTY.TO.APPLY - QTY.APPLIED
   END
NEXT SHIP.IDX
*
* DID WE APPLY THE FULL AMOUNT USER SHIPPED?
*
IF QTY.TO.APPLY GT 0 THEN    ;* NO, ADD A SCHEDULE
   SPLIT.QTY =  QTY.TO.APPLY  ;* NEW SCHD QTY
   SPLIT.SCHD.ID = OC_REC<OC_SCHD_ID,SHIP.IDX> + .001  ;* CREATE SPLIT SCHEDULE #
   SPLIT.DATE  = OC_REC<OC_DUE_DATE,SHIP.IDX> ;* DUE DATE
   SPLIT.NOTE  = OC_REC<OC_SCHD_NOTES,SHIP.IDX> ;* SCHDULE NOTES FOR THIS SHIPMENT
   SPLIT.IDX = SHIP.IDX + 1                   ;* MUST CREATE NEW SCHD ITEM AT I
   GOSUB SPLIT.SCHD
*
* ADD TO SALES RECORD LISTS
*
   SHIP.IDX += 1
   APPLIED.SCHD.LIST<1,SHIP.IDX>     = OC_REC<OC_SCHD_ID,SPLIT.IDX>
   APPLIED.QTY.LIST<1,SHIP.IDX>      = QTY.TO.APPLY
   APPLIED.DUE.DATE.LIST<1,SHIP.IDX> = OC_REC<OC_DUE_DATE,SPLIT.IDX>
*
* MARK IT SHIPPED 
* UPDATE ORDER CHILD
*
   OC_REC<OC_DEL_DATE,SHIP.IDX> = DATE()
   OC_REC<OC_DEL_QTY,SHIP.IDX>  = QTY.TO.APPLY
   OC_REC<OC_PACK_ID,SHIP.IDX>  = SA_ID
   OC_REC<OC_CERT_ID,SHIP.IDX>  = CT_ID
END
*
* IF ALL SCHEDULE ITEMS MARKED SHIPPED, MARK ITEM COMPLETE
SCHD.COUNT = DCOUNT(OC_REC<OC_SCHD_ID>,@VM)
IF OC_REC<OC_DEL_DATE,SCHD.COUNT> # '' THEN OC_REC<OC_ITEM_STAT> = "C"
*
RETURN
*********************************************************************
* $PAGE$
*********************************************************************
SPLIT.SCHD:
* ROUTINE SPLITS THE SCHD ITEM (PARTIAL SHIPMENT)
* WE NEVER HAVE A SCHDULE ITEM PARTIALLY SHIPPED,
* ITS EITHER SHIPPED COMPLETE OR NOT SHIPPED
* SPLIT.SCHD.ID NEW SCHD ID
* SPLIT.QTY   NEW SCHD QTY
* SPLIT.DATE  DUE DATE
* SPLIT.PRICE PRICE TO USE
* SPLIT.LOT   LOT FLAG
* SPLIT.IDX   MUST CREATE NEW SCHD ITEM AT THIS INDEX
INS SPLIT.SCHD.ID  BEFORE OC_REC<OC_SCHD_ID,SPLIT.IDX>
INS SPLIT.DATE  BEFORE OC_REC<OC_DUE_DATE,SPLIT.IDX>
INS SPLIT.QTY   BEFORE OC_REC<OC_ORD_QTY,SPLIT.IDX>
INS SPLIT.NOTE  BEFORE OC_REC<OC_SCHD_NOTES,SPLIT.IDX>
RETURN
END
